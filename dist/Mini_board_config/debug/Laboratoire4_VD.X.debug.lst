

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Nov 15 12:51:52 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    37                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    38                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    39                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    40  0000                     
    41                           ; Version 2.10
    42                           ; Generated 31/07/2019 GMT
    43                           ; 
    44                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC18F45K20 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     
    76                           	psect	idataCOMRAM
    77  0008D6                     __pidataCOMRAM:
    78                           	opt callstack 0
    79                           
    80                           ;initializer for _randx
    81  0008D6  0001               	dw	1
    82  0008D8  0000               	dw	0
    83                           
    84                           	psect	idataBANK0
    85  00030C                     __pidataBANK0:
    86                           	opt callstack 0
    87                           
    88                           ;initializer for _matCGRAM
    89  00030C  08                 	db	8
    90  00030D  04                 	db	4
    91  00030E  04                 	db	4
    92  00030F  0A                 	db	10
    93  000310  11                 	db	17
    94  000311  1F                 	db	31
    95  000312  11                 	db	17
    96  000313  00                 	db	0
    97  000314  02                 	db	2
    98  000315  04                 	db	4
    99  000316  0E                 	db	14
   100  000317  11                 	db	17
   101  000318  1F                 	db	31
   102  000319  10                 	db	16
   103  00031A  0E                 	db	14
   104  00031B  00                 	db	0
   105  00031C  02                 	db	2
   106  00031D  04                 	db	4
   107  00031E  1F                 	db	31
   108  00031F  10                 	db	16
   109  000320  1E                 	db	30
   110  000321  10                 	db	16
   111  000322  1F                 	db	31
   112  000323  00                 	db	0
   113  000324  08                 	db	8
   114  000325  04                 	db	4
   115  000326  0E                 	db	14
   116  000327  11                 	db	17
   117  000328  1F                 	db	31
   118  000329  10                 	db	16
   119  00032A  0E                 	db	14
   120  00032B  00                 	db	0
   121  00032C  08                 	db	8
   122  00032D  04                 	db	4
   123  00032E  1F                 	db	31
   124  00032F  10                 	db	16
   125  000330  1E                 	db	30
   126  000331  10                 	db	16
   127  000332  1F                 	db	31
   128  000333  00                 	db	0
   129  000334  04                 	db	4
   130  000335  0A                 	db	10
   131  000336  0E                 	db	14
   132  000337  11                 	db	17
   133  000338  1F                 	db	31
   134  000339  10                 	db	16
   135  00033A  0E                 	db	14
   136  00033B  00                 	db	0
   137  00033C  08                 	db	8
   138  00033D  04                 	db	4
   139  00033E  0E                 	db	14
   140  00033F  01                 	db	1
   141  000340  0F                 	db	15
   142  000341  11                 	db	17
   143  000342  0F                 	db	15
   144  000343  00                 	db	0
   145  000344  04                 	db	4
   146  000345  0A                 	db	10
   147  000346  0E                 	db	14
   148  000347  01                 	db	1
   149  000348  0F                 	db	15
   150  000349  11                 	db	17
   151  00034A  0F                 	db	15
   152  00034B  00                 	db	0
   153                           
   154                           ;initializer for _m_aliens
   155  00034C  20                 	db	32
   156  00034D  20                 	db	32
   157  00034E  20                 	db	32
   158  00034F  20                 	db	32
   159  000350  20                 	db	32
   160  000351  20                 	db	32
   161  000352  2A                 	db	42
   162  000353  20                 	db	32
   163  000354  20                 	db	32
   164  000355  20                 	db	32
   165  000356  20                 	db	32
   166  000357  20                 	db	32
   167  000358  20                 	db	32
   168  000359  2A                 	db	42
   169  00035A  20                 	db	32
   170  00035B  20                 	db	32
   171  00035C  20                 	db	32
   172  00035D  20                 	db	32
   173  00035E  20                 	db	32
   174  00035F  20                 	db	32
   175  000360  00                 	db	0
   176  000361  20                 	db	32
   177  000362  20                 	db	32
   178  000363  20                 	db	32
   179  000364  20                 	db	32
   180  000365  20                 	db	32
   181  000366  20                 	db	32
   182  000367  20                 	db	32
   183  000368  20                 	db	32
   184  000369  20                 	db	32
   185  00036A  20                 	db	32
   186  00036B  2A                 	db	42
   187  00036C  20                 	db	32
   188  00036D  20                 	db	32
   189  00036E  20                 	db	32
   190  00036F  20                 	db	32
   191  000370  20                 	db	32
   192  000371  2A                 	db	42
   193  000372  20                 	db	32
   194  000373  20                 	db	32
   195  000374  20                 	db	32
   196  000375  00                 	db	0
   197  000376  20                 	db	32
   198  000377  2A                 	db	42
   199  000378  20                 	db	32
   200  000379  20                 	db	32
   201  00037A  20                 	db	32
   202  00037B  20                 	db	32
   203  00037C  20                 	db	32
   204  00037D  2A                 	db	42
   205  00037E  20                 	db	32
   206  00037F  20                 	db	32
   207  000380  20                 	db	32
   208  000381  20                 	db	32
   209  000382  20                 	db	32
   210  000383  20                 	db	32
   211  000384  20                 	db	32
   212  000385  20                 	db	32
   213  000386  20                 	db	32
   214  000387  20                 	db	32
   215  000388  20                 	db	32
   216  000389  20                 	db	32
   217  00038A  00                 	db	0
   218  00038B  20                 	db	32
   219  00038C  20                 	db	32
   220  00038D  20                 	db	32
   221  00038E  20                 	db	32
   222  00038F  20                 	db	32
   223  000390  20                 	db	32
   224  000391  20                 	db	32
   225  000392  20                 	db	32
   226  000393  20                 	db	32
   227  000394  20                 	db	32
   228  000395  20                 	db	32
   229  000396  20                 	db	32
   230  000397  20                 	db	32
   231  000398  20                 	db	32
   232  000399  20                 	db	32
   233  00039A  20                 	db	32
   234  00039B  20                 	db	32
   235  00039C  20                 	db	32
   236  00039D  20                 	db	32
   237  00039E  20                 	db	32
   238  00039F  00                 	db	0
   239  0000                     _TRISCbits	set	3988
   240  0000                     _PORTAbits	set	3968
   241  0000                     _PORTD	set	3971
   242  0000                     _ANSELbits	set	3966
   243  0000                     _TRISA	set	3986
   244  0000                     _ANSEL	set	3966
   245  0000                     _TRISB	set	3987
   246  0000                     _ANSELH	set	3967
   247  0000                     _TRISD	set	3989
   248  0000                     _TMR1	set	4046
   249  0000                     _RCREG	set	4014
   250  0000                     _TXREG	set	4013
   251  0000                     _RCSTAbits	set	4011
   252  0000                     _TXSTAbits	set	4012
   253  0000                     _BAUDCONbits	set	4024
   254  0000                     _SPBRG	set	4015
   255  0000                     _SPBRGH	set	4016
   256  0000                     _ADCON2bits	set	4032
   257  0000                     _ADCON1	set	4033
   258  0000                     _T1CONbits	set	4045
   259  0000                     _ADRESH	set	4036
   260  0000                     _ADCON0bits	set	4034
   261  0000                     _RCIF	set	31989
   262  0000                     _TMR0	set	4054
   263  0000                     _T0CONbits	set	4053
   264  0000                     _INTCONbits	set	4082
   265                           
   266                           ; #config settings
   267  0000                     
   268                           	psect	cinit
   269  000594                     __pcinit:
   270                           	opt callstack 0
   271  000594                     start_initialization:
   272                           	opt callstack 0
   273  000594                     __initialization:
   274                           	opt callstack 0
   275                           
   276                           ; Initialize objects allocated to BANK0 (148 bytes)
   277                           ; load TBLPTR registers with __pidataBANK0
   278  000594  0E0C               	movlw	low __pidataBANK0
   279  000596  6EF6               	movwf	tblptrl,c
   280  000598  0E03               	movlw	high __pidataBANK0
   281  00059A  6EF7               	movwf	tblptrh,c
   282  00059C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   283  00059E  6EF8               	movwf	tblptru,c
   284  0005A0  EE00  F060         	lfsr	0,__pdataBANK0
   285  0005A4  EE10 F094          	lfsr	1,148
   286  0005A8                     copy_data0:
   287  0005A8  0009               	tblrd		*+
   288  0005AA  CFF5 FFEE          	movff	tablat,postinc0
   289  0005AE  50E5               	movf	postdec1,w,c
   290  0005B0  50E1               	movf	fsr1l,w,c
   291  0005B2  E1FA               	bnz	copy_data0
   292                           
   293                           ; Initialize objects allocated to COMRAM (4 bytes)
   294                           ; load TBLPTR registers with __pidataCOMRAM
   295  0005B4  0ED6               	movlw	low __pidataCOMRAM
   296  0005B6  6EF6               	movwf	tblptrl,c
   297  0005B8  0E08               	movlw	high __pidataCOMRAM
   298  0005BA  6EF7               	movwf	tblptrh,c
   299  0005BC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   300  0005BE  6EF8               	movwf	tblptru,c
   301  0005C0  EE00  F04C         	lfsr	0,__pdataCOMRAM
   302  0005C4  EE10 F004          	lfsr	1,4
   303  0005C8                     copy_data1:
   304  0005C8  0009               	tblrd		*+
   305  0005CA  CFF5 FFEE          	movff	tablat,postinc0
   306  0005CE  50E5               	movf	postdec1,w,c
   307  0005D0  50E1               	movf	fsr1l,w,c
   308  0005D2  E1FA               	bnz	copy_data1
   309                           
   310                           ; Clear objects allocated to COMRAM (21 bytes)
   311  0005D4  EE00  F037         	lfsr	0,__pbssCOMRAM
   312  0005D8  0E15               	movlw	21
   313  0005DA                     clear_0:
   314  0005DA  6AEE               	clrf	postinc0,c
   315  0005DC  06E8               	decf	wreg,f,c
   316  0005DE  E1FD               	bnz	clear_0
   317  0005E0                     end_of_initialization:
   318                           	opt callstack 0
   319  0005E0                     __end_of__initialization:
   320                           	opt callstack 0
   321  0005E0  9050               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   322  0005E2  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   323  0005E4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   324  0005E6  6EF8               	movwf	tblptru,c
   325  0005E8  0100               	movlb	0
   326  0005EA  EF70  F003         	goto	_main	;jump to C main() function
   327                           
   328                           	psect	bssCOMRAM
   329  000037                     __pbssCOMRAM:
   330                           	opt callstack 0
   331  000037                     	ds	20
   332  00004B                     _m_tempsDAfficher:
   333                           	opt callstack 0
   334  00004B                     	ds	1
   335                           
   336                           	psect	dataCOMRAM
   337  00004C                     __pdataCOMRAM:
   338                           	opt callstack 0
   339  00004C                     _randx:
   340                           	opt callstack 0
   341  00004C                     	ds	4
   342                           
   343                           	psect	dataBANK0
   344  000060                     __pdataBANK0:
   345                           	opt callstack 0
   346  000060                     _matCGRAM:
   347                           	opt callstack 0
   348  000060                     	ds	64
   349  0000A0                     _m_aliens:
   350                           	opt callstack 0
   351  0000A0                     	ds	84
   352                           
   353                           	psect	cstackCOMRAM
   354  000001                     __pcstackCOMRAM:
   355                           	opt callstack 0
   356  000001                     ??_lcd_ecrireDonnees:
   357  000001                     ??_lcd_busy:
   358  000001                     ?___wmul:
   359                           	opt callstack 0
   360  000001                     ?___lmul:
   361                           	opt callstack 0
   362  000001                     ___wmul@multiplier:
   363                           	opt callstack 0
   364  000001                     srand@x:
   365                           	opt callstack 0
   366  000001                     ___lmul@multiplier:
   367                           	opt callstack 0
   368                           
   369                           ; 4 bytes @ 0x0
   370  000001                     	ds	1
   371  000002                     lcd_ecrireDonnees@donnee:
   372                           	opt callstack 0
   373  000002                     lcd_busy@adresse:
   374                           	opt callstack 0
   375                           
   376                           ; 1 bytes @ 0x1
   377  000002                     	ds	1
   378  000003                     ??_lcd_resetSequence:
   379  000003                     lcd_wrCom@commande:
   380                           	opt callstack 0
   381  000003                     lcd_wrData@caractere:
   382                           	opt callstack 0
   383  000003                     ___wmul@multiplicand:
   384                           	opt callstack 0
   385                           
   386                           ; 2 bytes @ 0x2
   387  000003                     	ds	1
   388  000004                     ??_lcd_initCGRam:
   389  000004                     lcd_gotoXY@y:
   390                           	opt callstack 0
   391  000004                     lcd_ecritChar@car:
   392                           	opt callstack 0
   393                           
   394                           ; 1 bytes @ 0x3
   395  000004                     	ds	1
   396  000005                     lcd_gotoXY@x:
   397                           	opt callstack 0
   398  000005                     lcd_ecritChar@posRam:
   399                           	opt callstack 0
   400  000005                     ___wmul@product:
   401                           	opt callstack 0
   402  000005                     ___lmul@multiplicand:
   403                           	opt callstack 0
   404                           
   405                           ; 4 bytes @ 0x4
   406  000005                     	ds	1
   407  000006                     lcd_initCGRam@i:
   408                           	opt callstack 0
   409  000006                     lcd_putMessage@chaine:
   410                           	opt callstack 0
   411                           
   412                           ; 2 bytes @ 0x5
   413  000006                     	ds	1
   414  000007                     lcd_initCGRam@j:
   415                           	opt callstack 0
   416  000007                     strcpy@to:
   417                           	opt callstack 0
   418                           
   419                           ; 2 bytes @ 0x6
   420  000007                     	ds	1
   421  000008                     lcd_putMessage@j:
   422                           	opt callstack 0
   423                           
   424                           ; 1 bytes @ 0x7
   425  000008                     	ds	1
   426  000009                     afficheAliens@i:
   427                           	opt callstack 0
   428  000009                     strcpy@from:
   429                           	opt callstack 0
   430  000009                     ___lmul@product:
   431                           	opt callstack 0
   432                           
   433                           ; 4 bytes @ 0x8
   434  000009                     	ds	2
   435  00000B                     strcpy@cp:
   436                           	opt callstack 0
   437                           
   438                           ; 2 bytes @ 0xA
   439  00000B                     	ds	2
   440  00000D                     ?_rand:
   441                           	opt callstack 0
   442                           
   443                           ; 2 bytes @ 0xC
   444  00000D                     	ds	2
   445  00000F                     ?___awmod:
   446                           	opt callstack 0
   447  00000F                     ___awmod@dividend:
   448                           	opt callstack 0
   449                           
   450                           ; 2 bytes @ 0xE
   451  00000F                     	ds	2
   452  000011                     ___awmod@divisor:
   453                           	opt callstack 0
   454                           
   455                           ; 2 bytes @ 0x10
   456  000011                     	ds	2
   457  000013                     ___awmod@counter:
   458                           	opt callstack 0
   459                           
   460                           ; 1 bytes @ 0x12
   461  000013                     	ds	1
   462  000014                     ___awmod@sign:
   463                           	opt callstack 0
   464                           
   465                           ; 1 bytes @ 0x13
   466  000014                     	ds	1
   467  000015                     ??_nouveauxAliens:
   468                           
   469                           ; 1 bytes @ 0x14
   470  000015                     	ds	2
   471  000017                     nouveauxAliens@verifie:
   472                           	opt callstack 0
   473                           
   474                           ; 20 bytes @ 0x16
   475  000017                     	ds	20
   476  00002B                     nouveauxAliens@counter:
   477                           	opt callstack 0
   478                           
   479                           ; 1 bytes @ 0x2A
   480  00002B                     	ds	1
   481  00002C                     nouveauxAliens@k:
   482                           	opt callstack 0
   483                           
   484                           ; 2 bytes @ 0x2B
   485  00002C                     	ds	2
   486  00002E                     nouveauxAliens@v:
   487                           	opt callstack 0
   488                           
   489                           ; 2 bytes @ 0x2D
   490  00002E                     	ds	2
   491  000030                     nouveauxAliens@j:
   492                           	opt callstack 0
   493                           
   494                           ; 2 bytes @ 0x2F
   495  000030                     	ds	2
   496  000032                     nouveauxAliens@i:
   497                           	opt callstack 0
   498                           
   499                           ; 2 bytes @ 0x31
   500  000032                     	ds	2
   501  000034                     nouveauxAliens@random:
   502                           	opt callstack 0
   503                           
   504                           ; 1 bytes @ 0x33
   505  000034                     	ds	1
   506  000035                     ??_main:
   507                           
   508                           ; 1 bytes @ 0x34
   509  000035                     	ds	2
   510                           
   511 ;;
   512 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   513 ;;
   514 ;; *************** function _main *****************
   515 ;; Defined at:
   516 ;;		line 76 in file "main.c"
   517 ;; Parameters:    Size  Location     Type
   518 ;;		None
   519 ;; Auto vars:     Size  Location     Type
   520 ;;		None
   521 ;; Return value:  Size  Location     Type
   522 ;;                  1    wreg      void 
   523 ;; Registers used:
   524 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   525 ;; Tracked objects:
   526 ;;		On entry : 0/0
   527 ;;		On exit  : 0/0
   528 ;;		Unchanged: 0/0
   529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   530 ;;      Params:         0       0       0       0       0       0       0
   531 ;;      Locals:         0       0       0       0       0       0       0
   532 ;;      Temps:          2       0       0       0       0       0       0
   533 ;;      Totals:         2       0       0       0       0       0       0
   534 ;;Total ram usage:        2 bytes
   535 ;; Hardware stack levels required when called:    7
   536 ;; This function calls:
   537 ;;		_afficheAliens
   538 ;;		_init_serie
   539 ;;		_initialisation
   540 ;;		_lcd_init
   541 ;;		_nouveauxAliens
   542 ;; This function is called by:
   543 ;;		Startup code after reset
   544 ;; This function uses a non-reentrant model
   545 ;;
   546                           
   547                           	psect	text0
   548  0006E0                     __ptext0:
   549                           	opt callstack 0
   550  0006E0                     _main:
   551                           	opt callstack 24
   552  0006E0                     
   553                           ;main.c: 85: initialisation();
   554  0006E0  ECF7  F002         	call	_initialisation	;wreg free
   555  0006E4                     
   556                           ;main.c: 86: lcd_init();
   557  0006E4  EC19  F004         	call	_lcd_init	;wreg free
   558  0006E8                     
   559                           ;main.c: 87: init_serie();
   560  0006E8  EC40  F004         	call	_init_serie	;wreg free
   561  0006EC                     l61:
   562                           
   563                           ;main.c: 102: {;main.c: 104: afficheAliens();
   564  0006EC  ECE7  F003         	call	_afficheAliens	;wreg free
   565  0006F0                     
   566                           ;main.c: 105: _delay((unsigned long)((1000)*(1000000/4000.0)));
   567  0006F0  0E02               	movlw	2
   568  0006F2  6E36               	movwf	(??_main+1)^0,c
   569  0006F4  0E45               	movlw	69
   570  0006F6  6E35               	movwf	??_main^0,c
   571  0006F8  0EAA               	movlw	170
   572  0006FA                     u657:
   573  0006FA  2EE8               	decfsz	wreg,f,c
   574  0006FC  D7FE               	bra	u657
   575  0006FE  2E35               	decfsz	??_main^0,f,c
   576  000700  D7FC               	bra	u657
   577  000702  2E36               	decfsz	(??_main+1)^0,f,c
   578  000704  D7FA               	bra	u657
   579  000706                     
   580                           ;main.c: 106: if(m_tempsDAfficher == 1)
   581  000706  044B               	decf	_m_tempsDAfficher^0,w,c
   582  000708  A4D8               	btfss	status,2,c
   583  00070A  EF89  F003         	goto	u641
   584  00070E  EF8B  F003         	goto	u640
   585  000712                     u641:
   586  000712  EF76  F003         	goto	l61
   587  000716                     u640:
   588  000716                     
   589                           ;main.c: 107: {;main.c: 108: nouveauxAliens();
   590  000716  EC17  F000         	call	_nouveauxAliens	;wreg free
   591  00071A  EF76  F003         	goto	l61
   592  00071E  EF15  F000         	goto	start
   593  000722                     __end_of_main:
   594                           	opt callstack 0
   595                           
   596 ;; *************** function _nouveauxAliens *****************
   597 ;; Defined at:
   598 ;;		line 120 in file "main.c"
   599 ;; Parameters:    Size  Location     Type
   600 ;;		None
   601 ;; Auto vars:     Size  Location     Type
   602 ;;  j               2   47[COMRAM] int 
   603 ;;  k               2   43[COMRAM] int 
   604 ;;  v               2   45[COMRAM] int 
   605 ;;  i               2   49[COMRAM] int 
   606 ;;  verifie        20   22[COMRAM] unsigned char [20]
   607 ;;  random          1   51[COMRAM] unsigned char 
   608 ;;  counter         1   42[COMRAM] unsigned char 
   609 ;; Return value:  Size  Location     Type
   610 ;;                  1    wreg      void 
   611 ;; Registers used:
   612 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   613 ;; Tracked objects:
   614 ;;		On entry : 0/0
   615 ;;		On exit  : 0/0
   616 ;;		Unchanged: 0/0
   617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   618 ;;      Params:         0       0       0       0       0       0       0
   619 ;;      Locals:        30       0       0       0       0       0       0
   620 ;;      Temps:          2       0       0       0       0       0       0
   621 ;;      Totals:        32       0       0       0       0       0       0
   622 ;;Total ram usage:       32 bytes
   623 ;; Hardware stack levels used:    1
   624 ;; Hardware stack levels required when called:    3
   625 ;; This function calls:
   626 ;;		___awmod
   627 ;;		___wmul
   628 ;;		_rand
   629 ;;		_strcpy
   630 ;; This function is called by:
   631 ;;		_main
   632 ;; This function uses a non-reentrant model
   633 ;;
   634                           
   635                           	psect	text1
   636  00002E                     __ptext1:
   637                           	opt callstack 0
   638  00002E                     _nouveauxAliens:
   639                           	opt callstack 27
   640  00002E                     
   641                           ;main.c: 122: bool verifie[20] = {0};
   642  00002E  EE20  F017         	lfsr	2,nouveauxAliens@verifie
   643  000032  0E13               	movlw	19
   644  000034                     u521:
   645  000034  6ADE               	clrf	postinc2,c
   646  000036  06E8               	decf	wreg,f,c
   647  000038  E2FD               	bc	u521
   648  00003A                     
   649                           ;main.c: 123: char counter=0;
   650  00003A  0E00               	movlw	0
   651  00003C  6E2B               	movwf	nouveauxAliens@counter^0,c
   652  00003E                     
   653                           ;main.c: 125: for(int i=3; i>0;i--)
   654  00003E  0E00               	movlw	0
   655  000040  6E33               	movwf	(nouveauxAliens@i+1)^0,c
   656  000042  0E03               	movlw	3
   657  000044  6E32               	movwf	nouveauxAliens@i^0,c
   658  000046                     l1839:
   659                           
   660                           ;main.c: 126: {;main.c: 127: strcpy(m_aliens[i],m_aliens[i-1]);
   661  000046  C032  F001         	movff	nouveauxAliens@i,___wmul@multiplier
   662  00004A  C033  F002         	movff	nouveauxAliens@i+1,___wmul@multiplier+1
   663  00004E  0E00               	movlw	0
   664  000050  6E04               	movwf	(___wmul@multiplicand+1)^0,c
   665  000052  0E15               	movlw	21
   666  000054  6E03               	movwf	___wmul@multiplicand^0,c
   667  000056  EC2D  F004         	call	___wmul	;wreg free
   668  00005A  0EA0               	movlw	low _m_aliens
   669  00005C  2401               	addwf	?___wmul^0,w,c
   670  00005E  6E07               	movwf	strcpy@to^0,c
   671  000060  0E00               	movlw	high _m_aliens
   672  000062  2002               	addwfc	(?___wmul+1)^0,w,c
   673  000064  6E08               	movwf	(strcpy@to+1)^0,c
   674  000066  C032  F001         	movff	nouveauxAliens@i,___wmul@multiplier
   675  00006A  C033  F002         	movff	nouveauxAliens@i+1,___wmul@multiplier+1
   676  00006E  0E00               	movlw	0
   677  000070  6E04               	movwf	(___wmul@multiplicand+1)^0,c
   678  000072  0E15               	movlw	21
   679  000074  6E03               	movwf	___wmul@multiplicand^0,c
   680  000076  EC2D  F004         	call	___wmul	;wreg free
   681  00007A  0E8B               	movlw	low (_m_aliens+65515)
   682  00007C  2401               	addwf	?___wmul^0,w,c
   683  00007E  6E09               	movwf	strcpy@from^0,c
   684  000080  0E00               	movlw	high (_m_aliens+65515)
   685  000082  2002               	addwfc	(?___wmul+1)^0,w,c
   686  000084  6E0A               	movwf	(strcpy@from+1)^0,c
   687  000086  EC91  F003         	call	_strcpy	;wreg free
   688  00008A  0632               	decf	nouveauxAliens@i^0,f,c
   689  00008C  A0D8               	btfss	status,0,c
   690  00008E  0633               	decf	(nouveauxAliens@i+1)^0,f,c
   691  000090  BE33               	btfsc	(nouveauxAliens@i+1)^0,7,c
   692  000092  EF55  F000         	goto	u530
   693  000096  5033               	movf	(nouveauxAliens@i+1)^0,w,c
   694  000098  E106               	bnz	u531
   695  00009A  0432               	decf	nouveauxAliens@i^0,w,c
   696  00009C  B0D8               	btfsc	status,0,c
   697  00009E  EF53  F000         	goto	u531
   698  0000A2  EF55  F000         	goto	u530
   699  0000A6                     u531:
   700  0000A6  EF23  F000         	goto	l1839
   701  0000AA                     u530:
   702  0000AA                     
   703                           ;main.c: 128: };main.c: 129: for(int v=0; v<20; v++)
   704  0000AA  0E00               	movlw	0
   705  0000AC  6E2F               	movwf	(nouveauxAliens@v+1)^0,c
   706  0000AE  0E00               	movlw	0
   707  0000B0  6E2E               	movwf	nouveauxAliens@v^0,c
   708  0000B2                     l1851:
   709                           
   710                           ;main.c: 130: {;main.c: 131: m_aliens[0][v] = ' ';
   711  0000B2  0EA0               	movlw	low _m_aliens
   712  0000B4  242E               	addwf	nouveauxAliens@v^0,w,c
   713  0000B6  6ED9               	movwf	fsr2l,c
   714  0000B8  0E00               	movlw	high _m_aliens
   715  0000BA  202F               	addwfc	(nouveauxAliens@v+1)^0,w,c
   716  0000BC  6EDA               	movwf	fsr2h,c
   717  0000BE  0E20               	movlw	32
   718  0000C0  6EDF               	movwf	indf2,c
   719  0000C2  4A2E               	infsnz	nouveauxAliens@v^0,f,c
   720  0000C4  2A2F               	incf	(nouveauxAliens@v+1)^0,f,c
   721  0000C6  BE2F               	btfsc	(nouveauxAliens@v+1)^0,7,c
   722  0000C8  EF6F  F000         	goto	u541
   723  0000CC  502F               	movf	(nouveauxAliens@v+1)^0,w,c
   724  0000CE  E109               	bnz	u540
   725  0000D0  0E14               	movlw	20
   726  0000D2  5C2E               	subwf	nouveauxAliens@v^0,w,c
   727  0000D4  A0D8               	btfss	status,0,c
   728  0000D6  EF6F  F000         	goto	u541
   729  0000DA  EF71  F000         	goto	u540
   730  0000DE                     u541:
   731  0000DE  EF59  F000         	goto	l1851
   732  0000E2                     u540:
   733  0000E2                     
   734                           ;main.c: 132: };main.c: 134: for(int k=0; k<2;k++)
   735  0000E2  0E00               	movlw	0
   736  0000E4  6E2D               	movwf	(nouveauxAliens@k+1)^0,c
   737  0000E6  0E00               	movlw	0
   738  0000E8  6E2C               	movwf	nouveauxAliens@k^0,c
   739  0000EA                     l1863:
   740                           
   741                           ;main.c: 135: {;main.c: 136: random = rand() %20;
   742  0000EA  EC21  F003         	call	_rand	;wreg free
   743  0000EE  C00D  F00F         	movff	?_rand,___awmod@dividend
   744  0000F2  C00E  F010         	movff	?_rand+1,___awmod@dividend+1
   745  0000F6  0E00               	movlw	0
   746  0000F8  6E12               	movwf	(___awmod@divisor+1)^0,c
   747  0000FA  0E14               	movlw	20
   748  0000FC  6E11               	movwf	___awmod@divisor^0,c
   749  0000FE  EC2E  F001         	call	___awmod	;wreg free
   750  000102  500F               	movf	?___awmod^0,w,c
   751  000104  6E34               	movwf	nouveauxAliens@random^0,c
   752  000106                     
   753                           ;main.c: 137: if(((m_aliens[0][random]) == ' ') && (verifie[random] == 0))
   754  000106  0EA0               	movlw	low _m_aliens
   755  000108  2434               	addwf	nouveauxAliens@random^0,w,c
   756  00010A  6ED9               	movwf	fsr2l,c
   757  00010C  6ADA               	clrf	fsr2h,c
   758  00010E  0E00               	movlw	high _m_aliens
   759  000110  22DA               	addwfc	fsr2h,f,c
   760  000112  0E20               	movlw	32
   761  000114  18DE               	xorwf	postinc2,w,c
   762  000116  A4D8               	btfss	status,2,c
   763  000118  EF90  F000         	goto	u551
   764  00011C  EF92  F000         	goto	u550
   765  000120                     u551:
   766  000120  EFB0  F000         	goto	l1871
   767  000124                     u550:
   768  000124  0E17               	movlw	low nouveauxAliens@verifie
   769  000126  2434               	addwf	nouveauxAliens@random^0,w,c
   770  000128  6ED9               	movwf	fsr2l,c
   771  00012A  6ADA               	clrf	fsr2h,c
   772  00012C  0E00               	movlw	high nouveauxAliens@verifie
   773  00012E  22DA               	addwfc	fsr2h,f,c
   774  000130  50DF               	movf	indf2,w,c
   775  000132  A4D8               	btfss	status,2,c
   776  000134  EF9E  F000         	goto	u561
   777  000138  EFA0  F000         	goto	u560
   778  00013C                     u561:
   779  00013C  EFB0  F000         	goto	l1871
   780  000140                     u560:
   781  000140                     
   782                           ;main.c: 138: {;main.c: 140: m_aliens[0][random] = '*';
   783  000140  0EA0               	movlw	low _m_aliens
   784  000142  2434               	addwf	nouveauxAliens@random^0,w,c
   785  000144  6ED9               	movwf	fsr2l,c
   786  000146  6ADA               	clrf	fsr2h,c
   787  000148  0E00               	movlw	high _m_aliens
   788  00014A  22DA               	addwfc	fsr2h,f,c
   789  00014C  0E2A               	movlw	42
   790  00014E  6EDF               	movwf	indf2,c
   791                           
   792                           ;main.c: 141: verifie[random] = 1;
   793  000150  0E17               	movlw	low nouveauxAliens@verifie
   794  000152  2434               	addwf	nouveauxAliens@random^0,w,c
   795  000154  6ED9               	movwf	fsr2l,c
   796  000156  6ADA               	clrf	fsr2h,c
   797  000158  0E00               	movlw	high nouveauxAliens@verifie
   798  00015A  22DA               	addwfc	fsr2h,f,c
   799  00015C  0E01               	movlw	1
   800  00015E  6EDF               	movwf	indf2,c
   801  000160                     l1871:
   802  000160  4A2C               	infsnz	nouveauxAliens@k^0,f,c
   803  000162  2A2D               	incf	(nouveauxAliens@k+1)^0,f,c
   804  000164  BE2D               	btfsc	(nouveauxAliens@k+1)^0,7,c
   805  000166  EFBE  F000         	goto	u571
   806  00016A  502D               	movf	(nouveauxAliens@k+1)^0,w,c
   807  00016C  E109               	bnz	u570
   808  00016E  0E02               	movlw	2
   809  000170  5C2C               	subwf	nouveauxAliens@k^0,w,c
   810  000172  A0D8               	btfss	status,0,c
   811  000174  EFBE  F000         	goto	u571
   812  000178  EFC0  F000         	goto	u570
   813  00017C                     u571:
   814  00017C  EF75  F000         	goto	l1863
   815  000180                     u570:
   816  000180                     
   817                           ;main.c: 142: };main.c: 144: };main.c: 145: for(int j=0; j<20; j++)
   818  000180  0E00               	movlw	0
   819  000182  6E31               	movwf	(nouveauxAliens@j+1)^0,c
   820  000184  0E00               	movlw	0
   821  000186  6E30               	movwf	nouveauxAliens@j^0,c
   822  000188                     l1881:
   823                           
   824                           ;main.c: 146: {;main.c: 147: if(m_aliens[0][j] == '*')
   825  000188  0EA0               	movlw	low _m_aliens
   826  00018A  2430               	addwf	nouveauxAliens@j^0,w,c
   827  00018C  6ED9               	movwf	fsr2l,c
   828  00018E  0E00               	movlw	high _m_aliens
   829  000190  2031               	addwfc	(nouveauxAliens@j+1)^0,w,c
   830  000192  6EDA               	movwf	fsr2h,c
   831  000194  0E2A               	movlw	42
   832  000196  18DE               	xorwf	postinc2,w,c
   833  000198  A4D8               	btfss	status,2,c
   834  00019A  EFD1  F000         	goto	u581
   835  00019E  EFD3  F000         	goto	u580
   836  0001A2                     u581:
   837  0001A2  EF04  F001         	goto	l1895
   838  0001A6                     u580:
   839  0001A6                     
   840                           ;main.c: 148: {;main.c: 149: counter++;
   841  0001A6  2A2B               	incf	nouveauxAliens@counter^0,f,c
   842                           
   843                           ;main.c: 151: while(counter > 2)
   844  0001A8  EFFC  F000         	goto	l1893
   845  0001AC                     l1885:
   846                           
   847                           ;main.c: 152: {;main.c: 153: random = rand() %20;
   848  0001AC  EC21  F003         	call	_rand	;wreg free
   849  0001B0  C00D  F00F         	movff	?_rand,___awmod@dividend
   850  0001B4  C00E  F010         	movff	?_rand+1,___awmod@dividend+1
   851  0001B8  0E00               	movlw	0
   852  0001BA  6E12               	movwf	(___awmod@divisor+1)^0,c
   853  0001BC  0E14               	movlw	20
   854  0001BE  6E11               	movwf	___awmod@divisor^0,c
   855  0001C0  EC2E  F001         	call	___awmod	;wreg free
   856  0001C4  500F               	movf	?___awmod^0,w,c
   857  0001C6  6E34               	movwf	nouveauxAliens@random^0,c
   858  0001C8                     
   859                           ;main.c: 154: if(m_aliens[0][random]== '*')
   860  0001C8  0EA0               	movlw	low _m_aliens
   861  0001CA  2434               	addwf	nouveauxAliens@random^0,w,c
   862  0001CC  6ED9               	movwf	fsr2l,c
   863  0001CE  6ADA               	clrf	fsr2h,c
   864  0001D0  0E00               	movlw	high _m_aliens
   865  0001D2  22DA               	addwfc	fsr2h,f,c
   866  0001D4  0E2A               	movlw	42
   867  0001D6  18DE               	xorwf	postinc2,w,c
   868  0001D8  A4D8               	btfss	status,2,c
   869  0001DA  EFF1  F000         	goto	u591
   870  0001DE  EFF3  F000         	goto	u590
   871  0001E2                     u591:
   872  0001E2  EFFC  F000         	goto	l1893
   873  0001E6                     u590:
   874  0001E6                     
   875                           ;main.c: 155: {;main.c: 156: m_aliens[0][random] = ' ';
   876  0001E6  0EA0               	movlw	low _m_aliens
   877  0001E8  2434               	addwf	nouveauxAliens@random^0,w,c
   878  0001EA  6ED9               	movwf	fsr2l,c
   879  0001EC  6ADA               	clrf	fsr2h,c
   880  0001EE  0E00               	movlw	high _m_aliens
   881  0001F0  22DA               	addwfc	fsr2h,f,c
   882  0001F2  0E20               	movlw	32
   883  0001F4  6EDF               	movwf	indf2,c
   884  0001F6                     
   885                           ;main.c: 157: counter--;
   886  0001F6  062B               	decf	nouveauxAliens@counter^0,f,c
   887  0001F8                     l1893:
   888  0001F8  0E03               	movlw	3
   889  0001FA  602B               	cpfslt	nouveauxAliens@counter^0,c
   890  0001FC  EF02  F001         	goto	u601
   891  000200  EF04  F001         	goto	u600
   892  000204                     u601:
   893  000204  EFD6  F000         	goto	l1885
   894  000208                     u600:
   895  000208                     l1895:
   896  000208  4A30               	infsnz	nouveauxAliens@j^0,f,c
   897  00020A  2A31               	incf	(nouveauxAliens@j+1)^0,f,c
   898  00020C  BE31               	btfsc	(nouveauxAliens@j+1)^0,7,c
   899  00020E  EF12  F001         	goto	u611
   900  000212  5031               	movf	(nouveauxAliens@j+1)^0,w,c
   901  000214  E109               	bnz	u610
   902  000216  0E14               	movlw	20
   903  000218  5C30               	subwf	nouveauxAliens@j^0,w,c
   904  00021A  A0D8               	btfss	status,0,c
   905  00021C  EF12  F001         	goto	u611
   906  000220  EF14  F001         	goto	u610
   907  000224                     u611:
   908  000224  EFC4  F000         	goto	l1881
   909  000228                     u610:
   910  000228                     
   911                           ;main.c: 158: };main.c: 159: };main.c: 161: };main.c: 162: };main.c: 163: if(m_tempsDAff
      +                          icher == 0)
   912  000228  504B               	movf	_m_tempsDAfficher^0,w,c
   913  00022A  A4D8               	btfss	status,2,c
   914  00022C  EF1A  F001         	goto	u621
   915  000230  EF1C  F001         	goto	u620
   916  000234                     u621:
   917  000234  EF2B  F001         	goto	l1905
   918  000238                     u620:
   919  000238                     
   920                           ;main.c: 164: {;main.c: 165: _delay((unsigned long)((2000)*(1000000/4000.0)));
   921  000238  0E03               	movlw	3
   922  00023A  6E16               	movwf	(??_nouveauxAliens+1)^0,c
   923  00023C  0E8A               	movlw	138
   924  00023E  6E15               	movwf	??_nouveauxAliens^0,c
   925  000240  0E56               	movlw	86
   926  000242                     u667:
   927  000242  2EE8               	decfsz	wreg,f,c
   928  000244  D7FE               	bra	u667
   929  000246  2E15               	decfsz	??_nouveauxAliens^0,f,c
   930  000248  D7FC               	bra	u667
   931  00024A  2E16               	decfsz	(??_nouveauxAliens+1)^0,f,c
   932  00024C  D7FA               	bra	u667
   933  00024E                     
   934                           ;main.c: 166: m_tempsDAfficher = 1;
   935  00024E  0E01               	movlw	1
   936  000250  6E4B               	movwf	_m_tempsDAfficher^0,c
   937                           
   938                           ;main.c: 167: }
   939  000252  EF2D  F001         	goto	l85
   940  000256                     l1905:
   941                           
   942                           ;main.c: 168: else;main.c: 169: {;main.c: 171: m_tempsDAfficher = 0;
   943  000256  0E00               	movlw	0
   944  000258  6E4B               	movwf	_m_tempsDAfficher^0,c
   945  00025A                     l85:
   946  00025A  0012               	return		;funcret
   947  00025C                     __end_of_nouveauxAliens:
   948                           	opt callstack 0
   949                           
   950 ;; *************** function _strcpy *****************
   951 ;; Defined at:
   952 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strcpy.c"
   953 ;; Parameters:    Size  Location     Type
   954 ;;  to              2    6[COMRAM] PTR unsigned char 
   955 ;;		 -> m_aliens(84), 
   956 ;;  from            2    8[COMRAM] PTR const unsigned char 
   957 ;;		 -> m_aliens(84), 
   958 ;; Auto vars:     Size  Location     Type
   959 ;;  cp              2   10[COMRAM] PTR unsigned char 
   960 ;;		 -> m_aliens(84), 
   961 ;; Return value:  Size  Location     Type
   962 ;;                  2    6[COMRAM] PTR unsigned char 
   963 ;; Registers used:
   964 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
   965 ;; Tracked objects:
   966 ;;		On entry : 0/0
   967 ;;		On exit  : 0/0
   968 ;;		Unchanged: 0/0
   969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   970 ;;      Params:         4       0       0       0       0       0       0
   971 ;;      Locals:         2       0       0       0       0       0       0
   972 ;;      Temps:          0       0       0       0       0       0       0
   973 ;;      Totals:         6       0       0       0       0       0       0
   974 ;;Total ram usage:        6 bytes
   975 ;; Hardware stack levels used:    1
   976 ;; Hardware stack levels required when called:    1
   977 ;; This function calls:
   978 ;;		Nothing
   979 ;; This function is called by:
   980 ;;		_nouveauxAliens
   981 ;; This function uses a non-reentrant model
   982 ;;
   983                           
   984                           	psect	text2
   985  000722                     __ptext2:
   986                           	opt callstack 0
   987  000722                     _strcpy:
   988                           	opt callstack 28
   989  000722  C007  F00B         	movff	strcpy@to,strcpy@cp
   990  000726  C008  F00C         	movff	strcpy@to+1,strcpy@cp+1
   991  00072A  EF9B  F003         	goto	l1633
   992  00072E                     l1631:
   993  00072E  4A0B               	infsnz	strcpy@cp^0,f,c
   994  000730  2A0C               	incf	(strcpy@cp+1)^0,f,c
   995  000732  4A09               	infsnz	strcpy@from^0,f,c
   996  000734  2A0A               	incf	(strcpy@from+1)^0,f,c
   997  000736                     l1633:
   998  000736  C009  FFD9         	movff	strcpy@from,fsr2l
   999  00073A  C00A  FFDA         	movff	strcpy@from+1,fsr2h
  1000  00073E  C00B  FFE1         	movff	strcpy@cp,fsr1l
  1001  000742  C00C  FFE2         	movff	strcpy@cp+1,fsr1h
  1002  000746  CFDF FFE7          	movff	indf2,indf1
  1003  00074A  50E7               	movf	indf1,w,c
  1004  00074C  A4D8               	btfss	status,2,c
  1005  00074E  EFAB  F003         	goto	u411
  1006  000752  EFAD  F003         	goto	u410
  1007  000756                     u411:
  1008  000756  EF97  F003         	goto	l1631
  1009  00075A                     u410:
  1010  00075A  0012               	return		;funcret
  1011  00075C                     __end_of_strcpy:
  1012                           	opt callstack 0
  1013                           
  1014 ;; *************** function _rand *****************
  1015 ;; Defined at:
  1016 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  1017 ;; Parameters:    Size  Location     Type
  1018 ;;		None
  1019 ;; Auto vars:     Size  Location     Type
  1020 ;;		None
  1021 ;; Return value:  Size  Location     Type
  1022 ;;                  2   12[COMRAM] int 
  1023 ;; Registers used:
  1024 ;;		wreg, status,2, status,0, cstack
  1025 ;; Tracked objects:
  1026 ;;		On entry : 0/0
  1027 ;;		On exit  : 0/0
  1028 ;;		Unchanged: 0/0
  1029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1030 ;;      Params:         2       0       0       0       0       0       0
  1031 ;;      Locals:         0       0       0       0       0       0       0
  1032 ;;      Temps:          0       0       0       0       0       0       0
  1033 ;;      Totals:         2       0       0       0       0       0       0
  1034 ;;Total ram usage:        2 bytes
  1035 ;; Hardware stack levels used:    1
  1036 ;; Hardware stack levels required when called:    2
  1037 ;; This function calls:
  1038 ;;		___lmul
  1039 ;; This function is called by:
  1040 ;;		_nouveauxAliens
  1041 ;; This function uses a non-reentrant model
  1042 ;;
  1043                           
  1044                           	psect	text3
  1045  000642                     __ptext3:
  1046                           	opt callstack 0
  1047  000642                     _rand:
  1048                           	opt callstack 27
  1049  000642  C04C  F001         	movff	_randx,___lmul@multiplier
  1050  000646  C04D  F002         	movff	_randx+1,___lmul@multiplier+1
  1051  00064A  C04E  F003         	movff	_randx+2,___lmul@multiplier+2
  1052  00064E  C04F  F004         	movff	_randx+3,___lmul@multiplier+3
  1053  000652  0E6D               	movlw	109
  1054  000654  6E05               	movwf	___lmul@multiplicand^0,c
  1055  000656  0E4E               	movlw	78
  1056  000658  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  1057  00065A  0EC6               	movlw	198
  1058  00065C  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  1059  00065E  0E41               	movlw	65
  1060  000660  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  1061  000662  ECD0  F001         	call	___lmul	;wreg free
  1062  000666  C001  F04C         	movff	?___lmul,_randx
  1063  00066A  C002  F04D         	movff	?___lmul+1,_randx+1
  1064  00066E  C003  F04E         	movff	?___lmul+2,_randx+2
  1065  000672  C004  F04F         	movff	?___lmul+3,_randx+3
  1066  000676  0E39               	movlw	57
  1067  000678  264C               	addwf	_randx^0,f,c
  1068  00067A  0E30               	movlw	48
  1069  00067C  224D               	addwfc	(_randx+1)^0,f,c
  1070  00067E  0E00               	movlw	0
  1071  000680  224E               	addwfc	(_randx+2)^0,f,c
  1072  000682  0E00               	movlw	0
  1073  000684  224F               	addwfc	(_randx+3)^0,f,c
  1074  000686  0EFF               	movlw	255
  1075  000688  144E               	andwf	(_randx+2)^0,w,c
  1076  00068A  6E0D               	movwf	?_rand^0,c
  1077  00068C  0E7F               	movlw	127
  1078  00068E  144F               	andwf	(_randx+3)^0,w,c
  1079  000690  6E0E               	movwf	(?_rand+1)^0,c
  1080  000692  0012               	return		;funcret
  1081  000694                     __end_of_rand:
  1082                           	opt callstack 0
  1083                           
  1084 ;; *************** function ___lmul *****************
  1085 ;; Defined at:
  1086 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul32.c"
  1087 ;; Parameters:    Size  Location     Type
  1088 ;;  multiplier      4    0[COMRAM] unsigned long 
  1089 ;;  multiplicand    4    4[COMRAM] unsigned long 
  1090 ;; Auto vars:     Size  Location     Type
  1091 ;;  product         4    8[COMRAM] unsigned long 
  1092 ;; Return value:  Size  Location     Type
  1093 ;;                  4    0[COMRAM] unsigned long 
  1094 ;; Registers used:
  1095 ;;		wreg, status,2, status,0
  1096 ;; Tracked objects:
  1097 ;;		On entry : 0/0
  1098 ;;		On exit  : 0/0
  1099 ;;		Unchanged: 0/0
  1100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1101 ;;      Params:         8       0       0       0       0       0       0
  1102 ;;      Locals:         4       0       0       0       0       0       0
  1103 ;;      Temps:          0       0       0       0       0       0       0
  1104 ;;      Totals:        12       0       0       0       0       0       0
  1105 ;;Total ram usage:       12 bytes
  1106 ;; Hardware stack levels used:    1
  1107 ;; Hardware stack levels required when called:    1
  1108 ;; This function calls:
  1109 ;;		Nothing
  1110 ;; This function is called by:
  1111 ;;		_rand
  1112 ;; This function uses a non-reentrant model
  1113 ;;
  1114                           
  1115                           	psect	text4
  1116  0003A0                     __ptext4:
  1117                           	opt callstack 0
  1118  0003A0                     ___lmul:
  1119                           	opt callstack 27
  1120  0003A0  0E00               	movlw	0
  1121  0003A2  6E09               	movwf	___lmul@product^0,c
  1122  0003A4  0E00               	movlw	0
  1123  0003A6  6E0A               	movwf	(___lmul@product+1)^0,c
  1124  0003A8  0E00               	movlw	0
  1125  0003AA  6E0B               	movwf	(___lmul@product+2)^0,c
  1126  0003AC  0E00               	movlw	0
  1127  0003AE  6E0C               	movwf	(___lmul@product+3)^0,c
  1128  0003B0                     l1621:
  1129  0003B0  A001               	btfss	___lmul@multiplier^0,0,c
  1130  0003B2  EFDD  F001         	goto	u391
  1131  0003B6  EFDF  F001         	goto	u390
  1132  0003BA                     u391:
  1133  0003BA  EFE7  F001         	goto	l1625
  1134  0003BE                     u390:
  1135  0003BE  5005               	movf	___lmul@multiplicand^0,w,c
  1136  0003C0  2609               	addwf	___lmul@product^0,f,c
  1137  0003C2  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  1138  0003C4  220A               	addwfc	(___lmul@product+1)^0,f,c
  1139  0003C6  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  1140  0003C8  220B               	addwfc	(___lmul@product+2)^0,f,c
  1141  0003CA  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  1142  0003CC  220C               	addwfc	(___lmul@product+3)^0,f,c
  1143  0003CE                     l1625:
  1144  0003CE  90D8               	bcf	status,0,c
  1145  0003D0  3605               	rlcf	___lmul@multiplicand^0,f,c
  1146  0003D2  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  1147  0003D4  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  1148  0003D6  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  1149  0003D8  90D8               	bcf	status,0,c
  1150  0003DA  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  1151  0003DC  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  1152  0003DE  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  1153  0003E0  3201               	rrcf	___lmul@multiplier^0,f,c
  1154  0003E2  5001               	movf	___lmul@multiplier^0,w,c
  1155  0003E4  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  1156  0003E6  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  1157  0003E8  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  1158  0003EA  A4D8               	btfss	status,2,c
  1159  0003EC  EFFA  F001         	goto	u401
  1160  0003F0  EFFC  F001         	goto	u400
  1161  0003F4                     u401:
  1162  0003F4  EFD8  F001         	goto	l1621
  1163  0003F8                     u400:
  1164  0003F8  C009  F001         	movff	___lmul@product,?___lmul
  1165  0003FC  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  1166  000400  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  1167  000404  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  1168  000408  0012               	return		;funcret
  1169  00040A                     __end_of___lmul:
  1170                           	opt callstack 0
  1171                           
  1172 ;; *************** function ___wmul *****************
  1173 ;; Defined at:
  1174 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  1175 ;; Parameters:    Size  Location     Type
  1176 ;;  multiplier      2    0[COMRAM] unsigned int 
  1177 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1178 ;; Auto vars:     Size  Location     Type
  1179 ;;  product         2    4[COMRAM] unsigned int 
  1180 ;; Return value:  Size  Location     Type
  1181 ;;                  2    0[COMRAM] unsigned int 
  1182 ;; Registers used:
  1183 ;;		wreg, status,2, status,0, prodl, prodh
  1184 ;; Tracked objects:
  1185 ;;		On entry : 0/0
  1186 ;;		On exit  : 0/0
  1187 ;;		Unchanged: 0/0
  1188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1189 ;;      Params:         4       0       0       0       0       0       0
  1190 ;;      Locals:         2       0       0       0       0       0       0
  1191 ;;      Temps:          0       0       0       0       0       0       0
  1192 ;;      Totals:         6       0       0       0       0       0       0
  1193 ;;Total ram usage:        6 bytes
  1194 ;; Hardware stack levels used:    1
  1195 ;; Hardware stack levels required when called:    1
  1196 ;; This function calls:
  1197 ;;		Nothing
  1198 ;; This function is called by:
  1199 ;;		_nouveauxAliens
  1200 ;; This function uses a non-reentrant model
  1201 ;;
  1202                           
  1203                           	psect	text5
  1204  00085A                     __ptext5:
  1205                           	opt callstack 0
  1206  00085A                     ___wmul:
  1207                           	opt callstack 28
  1208  00085A  5001               	movf	___wmul@multiplier^0,w,c
  1209  00085C  0203               	mulwf	___wmul@multiplicand^0,c
  1210  00085E  CFF3 F005          	movff	prodl,___wmul@product
  1211  000862  CFF4 F006          	movff	prodh,___wmul@product+1
  1212  000866  5001               	movf	___wmul@multiplier^0,w,c
  1213  000868  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  1214  00086A  50F3               	movf	243,w,c
  1215  00086C  2606               	addwf	(___wmul@product+1)^0,f,c
  1216  00086E  5002               	movf	(___wmul@multiplier+1)^0,w,c
  1217  000870  0203               	mulwf	___wmul@multiplicand^0,c
  1218  000872  50F3               	movf	243,w,c
  1219  000874  2606               	addwf	(___wmul@product+1)^0,f,c
  1220  000876  C005  F001         	movff	___wmul@product,?___wmul
  1221  00087A  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1222  00087E  0012               	return		;funcret
  1223  000880                     __end_of___wmul:
  1224                           	opt callstack 0
  1225                           
  1226 ;; *************** function ___awmod *****************
  1227 ;; Defined at:
  1228 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  1229 ;; Parameters:    Size  Location     Type
  1230 ;;  dividend        2   14[COMRAM] int 
  1231 ;;  divisor         2   16[COMRAM] int 
  1232 ;; Auto vars:     Size  Location     Type
  1233 ;;  sign            1   19[COMRAM] unsigned char 
  1234 ;;  counter         1   18[COMRAM] unsigned char 
  1235 ;; Return value:  Size  Location     Type
  1236 ;;                  2   14[COMRAM] int 
  1237 ;; Registers used:
  1238 ;;		wreg, status,2, status,0
  1239 ;; Tracked objects:
  1240 ;;		On entry : 0/0
  1241 ;;		On exit  : 0/0
  1242 ;;		Unchanged: 0/0
  1243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1244 ;;      Params:         4       0       0       0       0       0       0
  1245 ;;      Locals:         2       0       0       0       0       0       0
  1246 ;;      Temps:          0       0       0       0       0       0       0
  1247 ;;      Totals:         6       0       0       0       0       0       0
  1248 ;;Total ram usage:        6 bytes
  1249 ;; Hardware stack levels used:    1
  1250 ;; Hardware stack levels required when called:    1
  1251 ;; This function calls:
  1252 ;;		Nothing
  1253 ;; This function is called by:
  1254 ;;		_nouveauxAliens
  1255 ;; This function uses a non-reentrant model
  1256 ;;
  1257                           
  1258                           	psect	text6
  1259  00025C                     __ptext6:
  1260                           	opt callstack 0
  1261  00025C                     ___awmod:
  1262                           	opt callstack 28
  1263  00025C  0E00               	movlw	0
  1264  00025E  6E14               	movwf	___awmod@sign^0,c
  1265  000260  BE10               	btfsc	(___awmod@dividend+1)^0,7,c
  1266  000262  EF37  F001         	goto	u450
  1267  000266  EF35  F001         	goto	u451
  1268  00026A                     u451:
  1269  00026A  EF3D  F001         	goto	l1741
  1270  00026E                     u450:
  1271  00026E  6C0F               	negf	___awmod@dividend^0,c
  1272  000270  1E10               	comf	(___awmod@dividend+1)^0,f,c
  1273  000272  B0D8               	btfsc	status,0,c
  1274  000274  2A10               	incf	(___awmod@dividend+1)^0,f,c
  1275  000276  0E01               	movlw	1
  1276  000278  6E14               	movwf	___awmod@sign^0,c
  1277  00027A                     l1741:
  1278  00027A  BE12               	btfsc	(___awmod@divisor+1)^0,7,c
  1279  00027C  EF44  F001         	goto	u460
  1280  000280  EF42  F001         	goto	u461
  1281  000284                     u461:
  1282  000284  EF48  F001         	goto	l1745
  1283  000288                     u460:
  1284  000288  6C11               	negf	___awmod@divisor^0,c
  1285  00028A  1E12               	comf	(___awmod@divisor+1)^0,f,c
  1286  00028C  B0D8               	btfsc	status,0,c
  1287  00028E  2A12               	incf	(___awmod@divisor+1)^0,f,c
  1288  000290                     l1745:
  1289  000290  5011               	movf	___awmod@divisor^0,w,c
  1290  000292  1012               	iorwf	(___awmod@divisor+1)^0,w,c
  1291  000294  B4D8               	btfsc	status,2,c
  1292  000296  EF4F  F001         	goto	u471
  1293  00029A  EF51  F001         	goto	u470
  1294  00029E                     u471:
  1295  00029E  EF75  F001         	goto	l1761
  1296  0002A2                     u470:
  1297  0002A2  0E01               	movlw	1
  1298  0002A4  6E13               	movwf	___awmod@counter^0,c
  1299  0002A6  EF59  F001         	goto	l1751
  1300  0002AA                     l1749:
  1301  0002AA  90D8               	bcf	status,0,c
  1302  0002AC  3611               	rlcf	___awmod@divisor^0,f,c
  1303  0002AE  3612               	rlcf	(___awmod@divisor+1)^0,f,c
  1304  0002B0  2A13               	incf	___awmod@counter^0,f,c
  1305  0002B2                     l1751:
  1306  0002B2  AE12               	btfss	(___awmod@divisor+1)^0,7,c
  1307  0002B4  EF5E  F001         	goto	u481
  1308  0002B8  EF60  F001         	goto	u480
  1309  0002BC                     u481:
  1310  0002BC  EF55  F001         	goto	l1749
  1311  0002C0                     u480:
  1312  0002C0                     l1753:
  1313  0002C0  5011               	movf	___awmod@divisor^0,w,c
  1314  0002C2  5C0F               	subwf	___awmod@dividend^0,w,c
  1315  0002C4  5012               	movf	(___awmod@divisor+1)^0,w,c
  1316  0002C6  5810               	subwfb	(___awmod@dividend+1)^0,w,c
  1317  0002C8  A0D8               	btfss	status,0,c
  1318  0002CA  EF69  F001         	goto	u491
  1319  0002CE  EF6B  F001         	goto	u490
  1320  0002D2                     u491:
  1321  0002D2  EF6F  F001         	goto	l1757
  1322  0002D6                     u490:
  1323  0002D6  5011               	movf	___awmod@divisor^0,w,c
  1324  0002D8  5E0F               	subwf	___awmod@dividend^0,f,c
  1325  0002DA  5012               	movf	(___awmod@divisor+1)^0,w,c
  1326  0002DC  5A10               	subwfb	(___awmod@dividend+1)^0,f,c
  1327  0002DE                     l1757:
  1328  0002DE  90D8               	bcf	status,0,c
  1329  0002E0  3212               	rrcf	(___awmod@divisor+1)^0,f,c
  1330  0002E2  3211               	rrcf	___awmod@divisor^0,f,c
  1331  0002E4  2E13               	decfsz	___awmod@counter^0,f,c
  1332  0002E6  EF60  F001         	goto	l1753
  1333  0002EA                     l1761:
  1334  0002EA  5014               	movf	___awmod@sign^0,w,c
  1335  0002EC  B4D8               	btfsc	status,2,c
  1336  0002EE  EF7B  F001         	goto	u501
  1337  0002F2  EF7D  F001         	goto	u500
  1338  0002F6                     u501:
  1339  0002F6  EF81  F001         	goto	l1765
  1340  0002FA                     u500:
  1341  0002FA  6C0F               	negf	___awmod@dividend^0,c
  1342  0002FC  1E10               	comf	(___awmod@dividend+1)^0,f,c
  1343  0002FE  B0D8               	btfsc	status,0,c
  1344  000300  2A10               	incf	(___awmod@dividend+1)^0,f,c
  1345  000302                     l1765:
  1346  000302  C00F  F00F         	movff	___awmod@dividend,?___awmod
  1347  000306  C010  F010         	movff	___awmod@dividend+1,?___awmod+1
  1348  00030A  0012               	return		;funcret
  1349  00030C                     __end_of___awmod:
  1350                           	opt callstack 0
  1351                           
  1352 ;; *************** function _lcd_init *****************
  1353 ;; Defined at:
  1354 ;;		line 258 in file "Lcd4Lignes.c"
  1355 ;; Parameters:    Size  Location     Type
  1356 ;;		None
  1357 ;; Auto vars:     Size  Location     Type
  1358 ;;		None
  1359 ;; Return value:  Size  Location     Type
  1360 ;;                  1    wreg      void 
  1361 ;; Registers used:
  1362 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1363 ;; Tracked objects:
  1364 ;;		On entry : 0/0
  1365 ;;		On exit  : 0/0
  1366 ;;		Unchanged: 0/0
  1367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1368 ;;      Params:         0       0       0       0       0       0       0
  1369 ;;      Locals:         0       0       0       0       0       0       0
  1370 ;;      Temps:          0       0       0       0       0       0       0
  1371 ;;      Totals:         0       0       0       0       0       0       0
  1372 ;;Total ram usage:        0 bytes
  1373 ;; Hardware stack levels used:    1
  1374 ;; Hardware stack levels required when called:    6
  1375 ;; This function calls:
  1376 ;;		_lcd_initCGRam
  1377 ;;		_lcd_resetSequence
  1378 ;;		_lcd_wrCom
  1379 ;; This function is called by:
  1380 ;;		_main
  1381 ;; This function uses a non-reentrant model
  1382 ;;
  1383                           
  1384                           	psect	text7
  1385  000832                     __ptext7:
  1386                           	opt callstack 0
  1387  000832                     _lcd_init:
  1388                           	opt callstack 24
  1389  000832                     
  1390                           ;Lcd4Lignes.c: 261: lcd_resetSequence();
  1391  000832  EC38  F002         	call	_lcd_resetSequence	;wreg free
  1392                           
  1393                           ;Lcd4Lignes.c: 262: lcd_wrCom(0x28);
  1394  000836  0E28               	movlw	40
  1395  000838  EC6A  F002         	call	_lcd_wrCom
  1396                           
  1397                           ;Lcd4Lignes.c: 263: lcd_wrCom(0x0F);
  1398  00083C  0E0F               	movlw	15
  1399  00083E  EC6A  F002         	call	_lcd_wrCom
  1400                           
  1401                           ;Lcd4Lignes.c: 264: lcd_wrCom(0x01);
  1402  000842  0E01               	movlw	1
  1403  000844  EC6A  F002         	call	_lcd_wrCom
  1404                           
  1405                           ;Lcd4Lignes.c: 265: lcd_wrCom(0x06);
  1406  000848  0E06               	movlw	6
  1407  00084A  EC6A  F002         	call	_lcd_wrCom
  1408                           
  1409                           ;Lcd4Lignes.c: 266: lcd_wrCom(0x80);
  1410  00084E  0E80               	movlw	128
  1411  000850  EC6A  F002         	call	_lcd_wrCom
  1412  000854                     
  1413                           ;Lcd4Lignes.c: 267: lcd_initCGRam();
  1414  000854  EC9B  F002         	call	_lcd_initCGRam	;wreg free
  1415  000858  0012               	return		;funcret
  1416  00085A                     __end_of_lcd_init:
  1417                           	opt callstack 0
  1418                           
  1419 ;; *************** function _lcd_resetSequence *****************
  1420 ;; Defined at:
  1421 ;;		line 221 in file "Lcd4Lignes.c"
  1422 ;; Parameters:    Size  Location     Type
  1423 ;;		None
  1424 ;; Auto vars:     Size  Location     Type
  1425 ;;		None
  1426 ;; Return value:  Size  Location     Type
  1427 ;;                  1    wreg      void 
  1428 ;; Registers used:
  1429 ;;		wreg, status,2, status,0, cstack
  1430 ;; Tracked objects:
  1431 ;;		On entry : 0/0
  1432 ;;		On exit  : 0/0
  1433 ;;		Unchanged: 0/0
  1434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1435 ;;      Params:         0       0       0       0       0       0       0
  1436 ;;      Locals:         0       0       0       0       0       0       0
  1437 ;;      Temps:          1       0       0       0       0       0       0
  1438 ;;      Totals:         1       0       0       0       0       0       0
  1439 ;;Total ram usage:        1 bytes
  1440 ;; Hardware stack levels used:    1
  1441 ;; Hardware stack levels required when called:    2
  1442 ;; This function calls:
  1443 ;;		_lcd_ecrireDonnees
  1444 ;;		_lcd_strobeEnableBit
  1445 ;; This function is called by:
  1446 ;;		_lcd_init
  1447 ;; This function uses a non-reentrant model
  1448 ;;
  1449                           
  1450                           	psect	text8
  1451  000470                     __ptext8:
  1452                           	opt callstack 0
  1453  000470                     _lcd_resetSequence:
  1454                           	opt callstack 27
  1455  000470                     
  1456                           ;Lcd4Lignes.c: 226: TRISD = 0b00000000;
  1457  000470  0E00               	movlw	0
  1458  000472  6E95               	movwf	149,c	;volatile
  1459  000474                     
  1460                           ;Lcd4Lignes.c: 228: _delay((unsigned long)((40)*(1000000/4000.0)));
  1461  000474  0E0D               	movlw	13
  1462  000476  6E03               	movwf	??_lcd_resetSequence^0,c
  1463  000478  0EFC               	movlw	252
  1464  00047A                     u677:
  1465  00047A  2EE8               	decfsz	wreg,f,c
  1466  00047C  D7FE               	bra	u677
  1467  00047E  2E03               	decfsz	??_lcd_resetSequence^0,f,c
  1468  000480  D7FC               	bra	u677
  1469  000482                     
  1470                           ;Lcd4Lignes.c: 229: PORTAbits.RA0 = 0;
  1471  000482  9080               	bcf	128,0,c	;volatile
  1472  000484                     
  1473                           ;Lcd4Lignes.c: 230: PORTAbits.RA1 = 0;
  1474  000484  9280               	bcf	128,1,c	;volatile
  1475  000486                     
  1476                           ;Lcd4Lignes.c: 232: lcd_ecrireDonnees(0x03);
  1477  000486  0E03               	movlw	3
  1478  000488  EC4F  F004         	call	_lcd_ecrireDonnees
  1479  00048C                     
  1480                           ;Lcd4Lignes.c: 233: lcd_strobeEnableBit();
  1481  00048C  EC64  F004         	call	_lcd_strobeEnableBit	;wreg free
  1482  000490                     
  1483                           ;Lcd4Lignes.c: 234: _delay((unsigned long)((40)*(1000000/4000000.0)));
  1484  000490  0E03               	movlw	3
  1485  000492                     u687:
  1486  000492  2EE8               	decfsz	wreg,f,c
  1487  000494  D7FE               	bra	u687
  1488  000496  F000               	nop	
  1489  000498                     
  1490                           ;Lcd4Lignes.c: 237: lcd_ecrireDonnees(0x03);
  1491  000498  0E03               	movlw	3
  1492  00049A  EC4F  F004         	call	_lcd_ecrireDonnees
  1493  00049E                     
  1494                           ;Lcd4Lignes.c: 238: lcd_strobeEnableBit();
  1495  00049E  EC64  F004         	call	_lcd_strobeEnableBit	;wreg free
  1496  0004A2                     
  1497                           ;Lcd4Lignes.c: 239: _delay((unsigned long)((40)*(1000000/4000000.0)));
  1498  0004A2  0E03               	movlw	3
  1499  0004A4                     u697:
  1500  0004A4  2EE8               	decfsz	wreg,f,c
  1501  0004A6  D7FE               	bra	u697
  1502  0004A8  F000               	nop	
  1503  0004AA                     
  1504                           ;Lcd4Lignes.c: 241: lcd_ecrireDonnees(0x03);
  1505  0004AA  0E03               	movlw	3
  1506  0004AC  EC4F  F004         	call	_lcd_ecrireDonnees
  1507  0004B0                     
  1508                           ;Lcd4Lignes.c: 242: lcd_strobeEnableBit();
  1509  0004B0  EC64  F004         	call	_lcd_strobeEnableBit	;wreg free
  1510  0004B4                     
  1511                           ;Lcd4Lignes.c: 243: _delay((unsigned long)((40)*(1000000/4000000.0)));
  1512  0004B4  0E03               	movlw	3
  1513  0004B6                     u707:
  1514  0004B6  2EE8               	decfsz	wreg,f,c
  1515  0004B8  D7FE               	bra	u707
  1516  0004BA  F000               	nop	
  1517  0004BC                     
  1518                           ;Lcd4Lignes.c: 245: lcd_ecrireDonnees(0x02);
  1519  0004BC  0E02               	movlw	2
  1520  0004BE  EC4F  F004         	call	_lcd_ecrireDonnees
  1521  0004C2                     
  1522                           ;Lcd4Lignes.c: 246: lcd_strobeEnableBit();
  1523  0004C2  EC64  F004         	call	_lcd_strobeEnableBit	;wreg free
  1524  0004C6                     
  1525                           ;Lcd4Lignes.c: 247: _delay((unsigned long)((40)*(1000000/4000000.0)));
  1526  0004C6  0E03               	movlw	3
  1527  0004C8                     u717:
  1528  0004C8  2EE8               	decfsz	wreg,f,c
  1529  0004CA  D7FE               	bra	u717
  1530  0004CC  F000               	nop	
  1531  0004CE                     
  1532                           ;Lcd4Lignes.c: 249: TRISD = 0b00001111;
  1533  0004CE  0E0F               	movlw	15
  1534  0004D0  6E95               	movwf	149,c	;volatile
  1535  0004D2  0012               	return		;funcret
  1536  0004D4                     __end_of_lcd_resetSequence:
  1537                           	opt callstack 0
  1538                           
  1539 ;; *************** function _lcd_initCGRam *****************
  1540 ;; Defined at:
  1541 ;;		line 417 in file "Lcd4Lignes.c"
  1542 ;; Parameters:    Size  Location     Type
  1543 ;;		None
  1544 ;; Auto vars:     Size  Location     Type
  1545 ;;  j               1    6[COMRAM] unsigned char 
  1546 ;;  i               1    5[COMRAM] unsigned char 
  1547 ;; Return value:  Size  Location     Type
  1548 ;;                  1    wreg      void 
  1549 ;; Registers used:
  1550 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1551 ;; Tracked objects:
  1552 ;;		On entry : 0/0
  1553 ;;		On exit  : 0/0
  1554 ;;		Unchanged: 0/0
  1555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1556 ;;      Params:         0       0       0       0       0       0       0
  1557 ;;      Locals:         2       0       0       0       0       0       0
  1558 ;;      Temps:          2       0       0       0       0       0       0
  1559 ;;      Totals:         4       0       0       0       0       0       0
  1560 ;;Total ram usage:        4 bytes
  1561 ;; Hardware stack levels used:    1
  1562 ;; Hardware stack levels required when called:    5
  1563 ;; This function calls:
  1564 ;;		_lcd_curseurHome
  1565 ;;		_lcd_wrCom
  1566 ;;		_lcd_wrData
  1567 ;; This function is called by:
  1568 ;;		_lcd_init
  1569 ;; This function uses a non-reentrant model
  1570 ;;
  1571                           
  1572                           	psect	text9
  1573  000536                     __ptext9:
  1574                           	opt callstack 0
  1575  000536                     _lcd_initCGRam:
  1576                           	opt callstack 24
  1577  000536                     
  1578                           ;Lcd4Lignes.c: 419: char i,j;;Lcd4Lignes.c: 421: lcd_wrCom(0x40);
  1579  000536  0E40               	movlw	64
  1580  000538  EC6A  F002         	call	_lcd_wrCom
  1581  00053C                     
  1582                           ;Lcd4Lignes.c: 422: for(i=0;i<8;i++)
  1583  00053C  0E00               	movlw	0
  1584  00053E  6E06               	movwf	lcd_initCGRam@i^0,c
  1585  000540                     l1709:
  1586                           
  1587                           ;Lcd4Lignes.c: 423: {;Lcd4Lignes.c: 424: for(j=0;j<8;j++)
  1588  000540  0E00               	movlw	0
  1589  000542  6E07               	movwf	lcd_initCGRam@j^0,c
  1590  000544                     l1715:
  1591                           
  1592                           ;Lcd4Lignes.c: 425: lcd_wrData(matCGRAM[i][j]);
  1593  000544  5006               	movf	lcd_initCGRam@i^0,w,c
  1594  000546  0D08               	mullw	8
  1595  000548  0E60               	movlw	low _matCGRAM
  1596  00054A  6E04               	movwf	??_lcd_initCGRam^0,c
  1597  00054C  0E00               	movlw	high _matCGRAM
  1598  00054E  6E05               	movwf	(??_lcd_initCGRam+1)^0,c
  1599  000550  50F3               	movf	243,w,c
  1600  000552  2604               	addwf	??_lcd_initCGRam^0,f,c
  1601  000554  50F4               	movf	244,w,c
  1602  000556  2205               	addwfc	(??_lcd_initCGRam+1)^0,f,c
  1603  000558  5007               	movf	lcd_initCGRam@j^0,w,c
  1604  00055A  2404               	addwf	??_lcd_initCGRam^0,w,c
  1605  00055C  6ED9               	movwf	fsr2l,c
  1606  00055E  0E00               	movlw	0
  1607  000560  2005               	addwfc	(??_lcd_initCGRam+1)^0,w,c
  1608  000562  6EDA               	movwf	fsr2h,c
  1609  000564  50DF               	movf	indf2,w,c
  1610  000566  EC02  F004         	call	_lcd_wrData
  1611  00056A  2A07               	incf	lcd_initCGRam@j^0,f,c
  1612  00056C  0E07               	movlw	7
  1613  00056E  6407               	cpfsgt	lcd_initCGRam@j^0,c
  1614  000570  EFBC  F002         	goto	u431
  1615  000574  EFBE  F002         	goto	u430
  1616  000578                     u431:
  1617  000578  EFA2  F002         	goto	l1715
  1618  00057C                     u430:
  1619  00057C  2A06               	incf	lcd_initCGRam@i^0,f,c
  1620  00057E  0E07               	movlw	7
  1621  000580  6406               	cpfsgt	lcd_initCGRam@i^0,c
  1622  000582  EFC5  F002         	goto	u441
  1623  000586  EFC7  F002         	goto	u440
  1624  00058A                     u441:
  1625  00058A  EFA0  F002         	goto	l1709
  1626  00058E                     u440:
  1627  00058E                     
  1628                           ;Lcd4Lignes.c: 426: };Lcd4Lignes.c: 427: lcd_curseurHome();
  1629  00058E  EC60  F004         	call	_lcd_curseurHome	;wreg free
  1630  000592  0012               	return		;funcret
  1631  000594                     __end_of_lcd_initCGRam:
  1632                           	opt callstack 0
  1633                           
  1634 ;; *************** function _lcd_curseurHome *****************
  1635 ;; Defined at:
  1636 ;;		line 288 in file "Lcd4Lignes.c"
  1637 ;; Parameters:    Size  Location     Type
  1638 ;;		None
  1639 ;; Auto vars:     Size  Location     Type
  1640 ;;		None
  1641 ;; Return value:  Size  Location     Type
  1642 ;;                  1    wreg      void 
  1643 ;; Registers used:
  1644 ;;		wreg, status,2, status,0, cstack
  1645 ;; Tracked objects:
  1646 ;;		On entry : 0/0
  1647 ;;		On exit  : 0/0
  1648 ;;		Unchanged: 0/0
  1649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1650 ;;      Params:         0       0       0       0       0       0       0
  1651 ;;      Locals:         0       0       0       0       0       0       0
  1652 ;;      Temps:          0       0       0       0       0       0       0
  1653 ;;      Totals:         0       0       0       0       0       0       0
  1654 ;;Total ram usage:        0 bytes
  1655 ;; Hardware stack levels used:    1
  1656 ;; Hardware stack levels required when called:    4
  1657 ;; This function calls:
  1658 ;;		_lcd_wrCom
  1659 ;; This function is called by:
  1660 ;;		_lcd_initCGRam
  1661 ;; This function uses a non-reentrant model
  1662 ;;
  1663                           
  1664                           	psect	text10
  1665  0008C0                     __ptext10:
  1666                           	opt callstack 0
  1667  0008C0                     _lcd_curseurHome:
  1668                           	opt callstack 24
  1669  0008C0                     
  1670                           ;Lcd4Lignes.c: 290: lcd_wrCom(0x02);
  1671  0008C0  0E02               	movlw	2
  1672  0008C2  EC6A  F002         	call	_lcd_wrCom
  1673  0008C6  0012               	return		;funcret
  1674  0008C8                     __end_of_lcd_curseurHome:
  1675                           	opt callstack 0
  1676                           
  1677 ;; *************** function _initialisation *****************
  1678 ;; Defined at:
  1679 ;;		line 269 in file "main.c"
  1680 ;; Parameters:    Size  Location     Type
  1681 ;;		None
  1682 ;; Auto vars:     Size  Location     Type
  1683 ;;		None
  1684 ;; Return value:  Size  Location     Type
  1685 ;;                  1    wreg      void 
  1686 ;; Registers used:
  1687 ;;		wreg, status,2, cstack
  1688 ;; Tracked objects:
  1689 ;;		On entry : 0/0
  1690 ;;		On exit  : 0/0
  1691 ;;		Unchanged: 0/0
  1692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1693 ;;      Params:         0       0       0       0       0       0       0
  1694 ;;      Locals:         0       0       0       0       0       0       0
  1695 ;;      Temps:          0       0       0       0       0       0       0
  1696 ;;      Totals:         0       0       0       0       0       0       0
  1697 ;;Total ram usage:        0 bytes
  1698 ;; Hardware stack levels used:    1
  1699 ;; Hardware stack levels required when called:    2
  1700 ;; This function calls:
  1701 ;;		_srand
  1702 ;; This function is called by:
  1703 ;;		_main
  1704 ;; This function uses a non-reentrant model
  1705 ;;
  1706                           
  1707                           	psect	text11
  1708  0005EE                     __ptext11:
  1709                           	opt callstack 0
  1710  0005EE                     _initialisation:
  1711                           	opt callstack 28
  1712  0005EE                     
  1713                           ;main.c: 271: TRISD = 0;
  1714  0005EE  0E00               	movlw	0
  1715  0005F0  6E95               	movwf	149,c	;volatile
  1716                           
  1717                           ;main.c: 273: ANSELH = 0;
  1718  0005F2  0E00               	movlw	0
  1719  0005F4  6E7F               	movwf	127,c	;volatile
  1720  0005F6                     
  1721                           ;main.c: 274: TRISB = 0xFF;
  1722  0005F6  6893               	setf	147,c	;volatile
  1723                           
  1724                           ;main.c: 276: ANSEL = 0;
  1725  0005F8  0E00               	movlw	0
  1726  0005FA  6E7E               	movwf	126,c	;volatile
  1727                           
  1728                           ;main.c: 277: TRISA = 0;
  1729  0005FC  0E00               	movlw	0
  1730  0005FE  6E92               	movwf	146,c	;volatile
  1731  000600                     
  1732                           ;main.c: 281: T1CONbits.TMR1ON = 1;
  1733  000600  80CD               	bsf	205,0,c	;volatile
  1734  000602                     
  1735                           ;main.c: 282: srand(TMR1);
  1736  000602  CFCE F001          	movff	4046,srand@x	;volatile
  1737  000606  CFCF F002          	movff	4047,srand@x+1	;volatile
  1738  00060A  EC59  F004         	call	_srand	;wreg free
  1739  00060E                     
  1740                           ;main.c: 285: ANSELbits.ANS7 = 1;
  1741  00060E  8E7E               	bsf	126,7,c	;volatile
  1742  000610                     
  1743                           ;main.c: 287: ADCON0bits.ADON = 1;
  1744  000610  80C2               	bsf	194,0,c	;volatile
  1745  000612                     
  1746                           ;main.c: 288: ADCON1 = 0;
  1747  000612  0E00               	movlw	0
  1748  000614  6EC1               	movwf	193,c	;volatile
  1749  000616                     
  1750                           ;main.c: 290: ADCON2bits.ADFM = 0;
  1751  000616  9EC0               	bcf	192,7,c	;volatile
  1752  000618                     
  1753                           ;main.c: 291: ADCON2bits.ACQT = 0;
  1754  000618  0EC7               	movlw	-57
  1755  00061A  16C0               	andwf	192,f,c	;volatile
  1756  00061C                     
  1757                           ;main.c: 292: ADCON2bits.ADCS = 0;
  1758  00061C  0EF8               	movlw	-8
  1759  00061E  16C0               	andwf	192,f,c	;volatile
  1760  000620                     
  1761                           ;main.c: 296: T0CONbits.TMR0ON = 1;
  1762  000620  8ED5               	bsf	213,7,c	;volatile
  1763  000622                     
  1764                           ;main.c: 297: T0CONbits.T08BIT = 0;
  1765  000622  9CD5               	bcf	213,6,c	;volatile
  1766  000624                     
  1767                           ;main.c: 298: T0CONbits.T0CS = 0;
  1768  000624  9AD5               	bcf	213,5,c	;volatile
  1769  000626                     
  1770                           ;main.c: 299: T0CONbits.PSA = 0;
  1771  000626  96D5               	bcf	213,3,c	;volatile
  1772  000628                     
  1773                           ;main.c: 300: T0CONbits.T0PS = 0b010;
  1774  000628  50D5               	movf	213,w,c	;volatile
  1775  00062A  0BF8               	andlw	-8
  1776  00062C  0902               	iorlw	2
  1777  00062E  6ED5               	movwf	213,c	;volatile
  1778  000630                     
  1779                           ;main.c: 301: TMR0 = 0x0BDC;
  1780  000630  0E0B               	movlw	11
  1781  000632  6ED7               	movwf	215,c	;volatile
  1782  000634  0EDC               	movlw	220
  1783  000636  6ED6               	movwf	214,c	;volatile
  1784  000638                     
  1785                           ;main.c: 302: INTCONbits.TMR0IE = 1;
  1786  000638  8AF2               	bsf	242,5,c	;volatile
  1787  00063A                     
  1788                           ;main.c: 303: INTCONbits.TMR0IF = 0;
  1789  00063A  94F2               	bcf	242,2,c	;volatile
  1790  00063C                     
  1791                           ;main.c: 304: INTCONbits.PEIE = 1;
  1792  00063C  8CF2               	bsf	242,6,c	;volatile
  1793  00063E                     
  1794                           ;main.c: 305: INTCONbits.GIE = 1;
  1795  00063E  8EF2               	bsf	242,7,c	;volatile
  1796  000640  0012               	return		;funcret
  1797  000642                     __end_of_initialisation:
  1798                           	opt callstack 0
  1799                           
  1800 ;; *************** function _srand *****************
  1801 ;; Defined at:
  1802 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  1803 ;; Parameters:    Size  Location     Type
  1804 ;;  x               2    0[COMRAM] unsigned int 
  1805 ;; Auto vars:     Size  Location     Type
  1806 ;;		None
  1807 ;; Return value:  Size  Location     Type
  1808 ;;                  1    wreg      void 
  1809 ;; Registers used:
  1810 ;;		status,2
  1811 ;; Tracked objects:
  1812 ;;		On entry : 0/0
  1813 ;;		On exit  : 0/0
  1814 ;;		Unchanged: 0/0
  1815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1816 ;;      Params:         2       0       0       0       0       0       0
  1817 ;;      Locals:         0       0       0       0       0       0       0
  1818 ;;      Temps:          0       0       0       0       0       0       0
  1819 ;;      Totals:         2       0       0       0       0       0       0
  1820 ;;Total ram usage:        2 bytes
  1821 ;; Hardware stack levels used:    1
  1822 ;; Hardware stack levels required when called:    1
  1823 ;; This function calls:
  1824 ;;		Nothing
  1825 ;; This function is called by:
  1826 ;;		_initialisation
  1827 ;; This function uses a non-reentrant model
  1828 ;;
  1829                           
  1830                           	psect	text12
  1831  0008B2                     __ptext12:
  1832                           	opt callstack 0
  1833  0008B2                     _srand:
  1834                           	opt callstack 28
  1835  0008B2  C001  F04C         	movff	srand@x,_randx
  1836  0008B6  C002  F04D         	movff	srand@x+1,_randx+1
  1837  0008BA  6A4E               	clrf	(_randx+2)^0,c
  1838  0008BC  6A4F               	clrf	(_randx+3)^0,c
  1839  0008BE  0012               	return		;funcret
  1840  0008C0                     __end_of_srand:
  1841                           	opt callstack 0
  1842                           
  1843 ;; *************** function _init_serie *****************
  1844 ;; Defined at:
  1845 ;;		line 29 in file "serie.c"
  1846 ;; Parameters:    Size  Location     Type
  1847 ;;		None
  1848 ;; Auto vars:     Size  Location     Type
  1849 ;;		None
  1850 ;; Return value:  Size  Location     Type
  1851 ;;                  1    wreg      void 
  1852 ;; Registers used:
  1853 ;;		wreg, status,2
  1854 ;; Tracked objects:
  1855 ;;		On entry : 0/0
  1856 ;;		On exit  : 0/0
  1857 ;;		Unchanged: 0/0
  1858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1859 ;;      Params:         0       0       0       0       0       0       0
  1860 ;;      Locals:         0       0       0       0       0       0       0
  1861 ;;      Temps:          0       0       0       0       0       0       0
  1862 ;;      Totals:         0       0       0       0       0       0       0
  1863 ;;Total ram usage:        0 bytes
  1864 ;; Hardware stack levels used:    1
  1865 ;; Hardware stack levels required when called:    1
  1866 ;; This function calls:
  1867 ;;		Nothing
  1868 ;; This function is called by:
  1869 ;;		_main
  1870 ;; This function uses a non-reentrant model
  1871 ;;
  1872                           
  1873                           	psect	text13
  1874  000880                     __ptext13:
  1875                           	opt callstack 0
  1876  000880                     _init_serie:
  1877                           	opt callstack 29
  1878  000880                     
  1879                           ;serie.c: 32: TRISCbits.TRISC7=1;
  1880  000880  8E94               	bsf	148,7,c	;volatile
  1881                           
  1882                           ;serie.c: 33: TRISCbits.TRISC6=1;
  1883  000882  8C94               	bsf	148,6,c	;volatile
  1884  000884                     
  1885                           ;serie.c: 37: SPBRGH=0x00;
  1886  000884  0E00               	movlw	0
  1887  000886  6EB0               	movwf	176,c	;volatile
  1888                           
  1889                           ;serie.c: 38: SPBRG=25;
  1890  000888  0E19               	movlw	25
  1891  00088A  6EAF               	movwf	175,c	;volatile
  1892  00088C                     
  1893                           ;serie.c: 39: BAUDCONbits.BRG16=1;
  1894  00088C  86B8               	bsf	184,3,c	;volatile
  1895  00088E                     
  1896                           ;serie.c: 40: TXSTAbits.BRGH=1;
  1897  00088E  84AC               	bsf	172,2,c	;volatile
  1898  000890                     
  1899                           ;serie.c: 43: TXSTAbits.SYNC=0;
  1900  000890  98AC               	bcf	172,4,c	;volatile
  1901  000892                     
  1902                           ;serie.c: 44: TXSTAbits.TXEN=1;
  1903  000892  8AAC               	bsf	172,5,c	;volatile
  1904  000894                     
  1905                           ;serie.c: 45: RCSTAbits.CREN = 1;
  1906  000894  88AB               	bsf	171,4,c	;volatile
  1907  000896                     
  1908                           ;serie.c: 46: RCSTAbits.SPEN=1;
  1909  000896  8EAB               	bsf	171,7,c	;volatile
  1910                           
  1911                           ;serie.c: 47: ANSEL = 0;
  1912  000898  0E00               	movlw	0
  1913  00089A  6E7E               	movwf	126,c	;volatile
  1914  00089C  0012               	return		;funcret
  1915  00089E                     __end_of_init_serie:
  1916                           	opt callstack 0
  1917                           
  1918 ;; *************** function _afficheAliens *****************
  1919 ;; Defined at:
  1920 ;;		line 191 in file "main.c"
  1921 ;; Parameters:    Size  Location     Type
  1922 ;;		None
  1923 ;; Auto vars:     Size  Location     Type
  1924 ;;  i               1    8[COMRAM] unsigned char 
  1925 ;; Return value:  Size  Location     Type
  1926 ;;                  1    wreg      void 
  1927 ;; Registers used:
  1928 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1929 ;; Tracked objects:
  1930 ;;		On entry : 0/0
  1931 ;;		On exit  : 0/0
  1932 ;;		Unchanged: 0/0
  1933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1934 ;;      Params:         0       0       0       0       0       0       0
  1935 ;;      Locals:         1       0       0       0       0       0       0
  1936 ;;      Temps:          0       0       0       0       0       0       0
  1937 ;;      Totals:         1       0       0       0       0       0       0
  1938 ;;Total ram usage:        1 bytes
  1939 ;; Hardware stack levels used:    1
  1940 ;; Hardware stack levels required when called:    6
  1941 ;; This function calls:
  1942 ;;		_lcd_gotoXY
  1943 ;;		_lcd_putMessage
  1944 ;; This function is called by:
  1945 ;;		_main
  1946 ;; This function uses a non-reentrant model
  1947 ;;
  1948                           
  1949                           	psect	text14
  1950  0007CE                     __ptext14:
  1951                           	opt callstack 0
  1952  0007CE                     _afficheAliens:
  1953                           	opt callstack 24
  1954  0007CE                     
  1955                           ;main.c: 193: for(char i =0; i<4;i++)
  1956  0007CE  0E00               	movlw	0
  1957  0007D0  6E09               	movwf	afficheAliens@i^0,c
  1958  0007D2                     l1819:
  1959                           
  1960                           ;main.c: 194: {;main.c: 195: lcd_gotoXY(1,i+1);
  1961  0007D2  2809               	incf	afficheAliens@i^0,w,c
  1962  0007D4  6E04               	movwf	lcd_gotoXY@y^0,c
  1963  0007D6  0E01               	movlw	1
  1964  0007D8  EC05  F002         	call	_lcd_gotoXY
  1965  0007DC                     
  1966                           ;main.c: 196: lcd_putMessage(m_aliens[i]);
  1967  0007DC  5009               	movf	afficheAliens@i^0,w,c
  1968  0007DE  0D15               	mullw	21
  1969  0007E0  0EA0               	movlw	low _m_aliens
  1970  0007E2  24F3               	addwf	243,w,c
  1971  0007E4  6E06               	movwf	lcd_putMessage@chaine^0,c
  1972  0007E6  0E00               	movlw	high _m_aliens
  1973  0007E8  20F4               	addwfc	prodh,w,c
  1974  0007EA  6E07               	movwf	(lcd_putMessage@chaine+1)^0,c
  1975  0007EC  ECAE  F003         	call	_lcd_putMessage	;wreg free
  1976  0007F0  2A09               	incf	afficheAliens@i^0,f,c
  1977  0007F2  0E03               	movlw	3
  1978  0007F4  6409               	cpfsgt	afficheAliens@i^0,c
  1979  0007F6  EFFF  F003         	goto	u511
  1980  0007FA  EF01  F004         	goto	u510
  1981  0007FE                     u511:
  1982  0007FE  EFE9  F003         	goto	l1819
  1983  000802                     u510:
  1984  000802  0012               	return		;funcret
  1985  000804                     __end_of_afficheAliens:
  1986                           	opt callstack 0
  1987                           
  1988 ;; *************** function _lcd_putMessage *****************
  1989 ;; Defined at:
  1990 ;;		line 387 in file "Lcd4Lignes.c"
  1991 ;; Parameters:    Size  Location     Type
  1992 ;;  chaine          2    5[COMRAM] PTR const unsigned char 
  1993 ;;		 -> m_aliens(84), 
  1994 ;; Auto vars:     Size  Location     Type
  1995 ;;  j               1    7[COMRAM] unsigned char 
  1996 ;; Return value:  Size  Location     Type
  1997 ;;                  1    wreg      void 
  1998 ;; Registers used:
  1999 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2000 ;; Tracked objects:
  2001 ;;		On entry : 0/0
  2002 ;;		On exit  : 0/0
  2003 ;;		Unchanged: 0/0
  2004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2005 ;;      Params:         2       0       0       0       0       0       0
  2006 ;;      Locals:         1       0       0       0       0       0       0
  2007 ;;      Temps:          0       0       0       0       0       0       0
  2008 ;;      Totals:         3       0       0       0       0       0       0
  2009 ;;Total ram usage:        3 bytes
  2010 ;; Hardware stack levels used:    1
  2011 ;; Hardware stack levels required when called:    5
  2012 ;; This function calls:
  2013 ;;		_lcd_ecritChar
  2014 ;; This function is called by:
  2015 ;;		_afficheAliens
  2016 ;; This function uses a non-reentrant model
  2017 ;;
  2018                           
  2019                           	psect	text15
  2020  00075C                     __ptext15:
  2021                           	opt callstack 0
  2022  00075C                     _lcd_putMessage:
  2023                           	opt callstack 24
  2024  00075C                     
  2025                           ;Lcd4Lignes.c: 389: unsigned char j;;Lcd4Lignes.c: 391: for(j = 0; chaine[j] != 0; j++)
  2026  00075C  0E00               	movlw	0
  2027  00075E  6E08               	movwf	lcd_putMessage@j^0,c
  2028  000760  EFBC  F003         	goto	l1663
  2029  000764                     l1659:
  2030                           
  2031                           ;Lcd4Lignes.c: 392: lcd_ecritChar(chaine[j]);
  2032  000764  5008               	movf	lcd_putMessage@j^0,w,c
  2033  000766  2406               	addwf	lcd_putMessage@chaine^0,w,c
  2034  000768  6ED9               	movwf	fsr2l,c
  2035  00076A  0E00               	movlw	0
  2036  00076C  2007               	addwfc	(lcd_putMessage@chaine+1)^0,w,c
  2037  00076E  6EDA               	movwf	fsr2h,c
  2038  000770  50DF               	movf	indf2,w,c
  2039  000772  EC4A  F003         	call	_lcd_ecritChar
  2040  000776  2A08               	incf	lcd_putMessage@j^0,f,c
  2041  000778                     l1663:
  2042  000778  5008               	movf	lcd_putMessage@j^0,w,c
  2043  00077A  2406               	addwf	lcd_putMessage@chaine^0,w,c
  2044  00077C  6ED9               	movwf	fsr2l,c
  2045  00077E  0E00               	movlw	0
  2046  000780  2007               	addwfc	(lcd_putMessage@chaine+1)^0,w,c
  2047  000782  6EDA               	movwf	fsr2h,c
  2048  000784  50DF               	movf	indf2,w,c
  2049  000786  A4D8               	btfss	status,2,c
  2050  000788  EFC8  F003         	goto	u421
  2051  00078C  EFCA  F003         	goto	u420
  2052  000790                     u421:
  2053  000790  EFB2  F003         	goto	l1659
  2054  000794                     u420:
  2055  000794  0012               	return		;funcret
  2056  000796                     __end_of_lcd_putMessage:
  2057                           	opt callstack 0
  2058                           
  2059 ;; *************** function _lcd_ecritChar *****************
  2060 ;; Defined at:
  2061 ;;		line 359 in file "Lcd4Lignes.c"
  2062 ;; Parameters:    Size  Location     Type
  2063 ;;  car             1    wreg     unsigned char 
  2064 ;; Auto vars:     Size  Location     Type
  2065 ;;  car             1    3[COMRAM] unsigned char 
  2066 ;;  posRam          1    4[COMRAM] unsigned char 
  2067 ;; Return value:  Size  Location     Type
  2068 ;;                  1    wreg      void 
  2069 ;; Registers used:
  2070 ;;		wreg, status,2, status,0, cstack
  2071 ;; Tracked objects:
  2072 ;;		On entry : 0/0
  2073 ;;		On exit  : 0/0
  2074 ;;		Unchanged: 0/0
  2075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2076 ;;      Params:         0       0       0       0       0       0       0
  2077 ;;      Locals:         2       0       0       0       0       0       0
  2078 ;;      Temps:          0       0       0       0       0       0       0
  2079 ;;      Totals:         2       0       0       0       0       0       0
  2080 ;;Total ram usage:        2 bytes
  2081 ;; Hardware stack levels used:    1
  2082 ;; Hardware stack levels required when called:    4
  2083 ;; This function calls:
  2084 ;;		_lcd_wrCom
  2085 ;;		_lcd_wrData
  2086 ;; This function is called by:
  2087 ;;		_lcd_putMessage
  2088 ;; This function uses a non-reentrant model
  2089 ;;
  2090                           
  2091                           	psect	text16
  2092  000694                     __ptext16:
  2093                           	opt callstack 0
  2094  000694                     _lcd_ecritChar:
  2095                           	opt callstack 24
  2096                           
  2097                           ;incstack = 0
  2098                           ;lcd_ecritChar@car stored from wreg
  2099  000694  6E04               	movwf	lcd_ecritChar@car^0,c
  2100  000696                     
  2101                           ;Lcd4Lignes.c: 361: unsigned char posRam;;Lcd4Lignes.c: 363: posRam = lcd_wrData(car);
  2102  000696  5004               	movf	lcd_ecritChar@car^0,w,c
  2103  000698  EC02  F004         	call	_lcd_wrData
  2104  00069C  6E05               	movwf	lcd_ecritChar@posRam^0,c
  2105                           
  2106                           ;Lcd4Lignes.c: 364: switch(posRam)
  2107  00069E  EF60  F003         	goto	l1617
  2108  0006A2                     l1609:
  2109                           
  2110                           ;Lcd4Lignes.c: 367: lcd_wrCom(0xC0|0x80);
  2111  0006A2  0EC0               	movlw	192
  2112  0006A4  EC6A  F002         	call	_lcd_wrCom
  2113                           
  2114                           ;Lcd4Lignes.c: 368: break;
  2115  0006A8  EF6F  F003         	goto	l186
  2116  0006AC                     l1611:
  2117                           
  2118                           ;Lcd4Lignes.c: 370: lcd_wrCom(0x94|0x80);
  2119  0006AC  0E94               	movlw	148
  2120  0006AE  EC6A  F002         	call	_lcd_wrCom
  2121                           
  2122                           ;Lcd4Lignes.c: 371: break;
  2123  0006B2  EF6F  F003         	goto	l186
  2124  0006B6                     l1613:
  2125                           
  2126                           ;Lcd4Lignes.c: 373: lcd_wrCom(0xD4|0x80);
  2127  0006B6  0ED4               	movlw	212
  2128  0006B8  EC6A  F002         	call	_lcd_wrCom
  2129                           
  2130                           ;Lcd4Lignes.c: 374: break;
  2131  0006BC  EF6F  F003         	goto	l186
  2132  0006C0                     l1617:
  2133  0006C0  5005               	movf	lcd_ecritChar@posRam^0,w,c
  2134                           
  2135                           ; Switch size 1, requested type "simple"
  2136                           ; Number of cases is 3, Range of values is 148 to 212
  2137                           ; switch strategies available:
  2138                           ; Name         Instructions Cycles
  2139                           ; simple_byte           10     6 (average)
  2140                           ;	Chosen strategy is simple_byte
  2141  0006C2  0A94               	xorlw	148	; case 148
  2142  0006C4  B4D8               	btfsc	status,2,c
  2143  0006C6  EF51  F003         	goto	l1609
  2144  0006CA  0A54               	xorlw	84	; case 192
  2145  0006CC  B4D8               	btfsc	status,2,c
  2146  0006CE  EF5B  F003         	goto	l1613
  2147  0006D2  0A14               	xorlw	20	; case 212
  2148  0006D4  B4D8               	btfsc	status,2,c
  2149  0006D6  EF56  F003         	goto	l1611
  2150  0006DA  EF6F  F003         	goto	l186
  2151  0006DE                     l186:
  2152  0006DE  0012               	return		;funcret
  2153  0006E0                     __end_of_lcd_ecritChar:
  2154                           	opt callstack 0
  2155                           
  2156 ;; *************** function _lcd_wrData *****************
  2157 ;; Defined at:
  2158 ;;		line 188 in file "Lcd4Lignes.c"
  2159 ;; Parameters:    Size  Location     Type
  2160 ;;  caractere       1    wreg     unsigned char 
  2161 ;; Auto vars:     Size  Location     Type
  2162 ;;  caractere       1    2[COMRAM] unsigned char 
  2163 ;; Return value:  Size  Location     Type
  2164 ;;                  1    wreg      unsigned char 
  2165 ;; Registers used:
  2166 ;;		wreg, status,2, status,0, cstack
  2167 ;; Tracked objects:
  2168 ;;		On entry : 0/0
  2169 ;;		On exit  : 0/0
  2170 ;;		Unchanged: 0/0
  2171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2172 ;;      Params:         0       0       0       0       0       0       0
  2173 ;;      Locals:         1       0       0       0       0       0       0
  2174 ;;      Temps:          0       0       0       0       0       0       0
  2175 ;;      Totals:         1       0       0       0       0       0       0
  2176 ;;Total ram usage:        1 bytes
  2177 ;; Hardware stack levels used:    1
  2178 ;; Hardware stack levels required when called:    3
  2179 ;; This function calls:
  2180 ;;		_lcd_busy
  2181 ;;		_lcd_ecrireDonnees
  2182 ;;		_lcd_strobeEnableBit
  2183 ;; This function is called by:
  2184 ;;		_lcd_ecritChar
  2185 ;;		_lcd_initCGRam
  2186 ;;		_lcd_effaceChar
  2187 ;; This function uses a non-reentrant model
  2188 ;;
  2189                           
  2190                           	psect	text17
  2191  000804                     __ptext17:
  2192                           	opt callstack 0
  2193  000804                     _lcd_wrData:
  2194                           	opt callstack 25
  2195                           
  2196                           ;incstack = 0
  2197                           ;lcd_wrData@caractere stored from wreg
  2198  000804  6E03               	movwf	lcd_wrData@caractere^0,c
  2199  000806                     
  2200                           ;Lcd4Lignes.c: 190: lcd_busy();
  2201  000806  ECCB  F003         	call	_lcd_busy	;wreg free
  2202  00080A                     
  2203                           ;Lcd4Lignes.c: 191: TRISD = 0b00000000;
  2204  00080A  0E00               	movlw	0
  2205  00080C  6E95               	movwf	149,c	;volatile
  2206  00080E                     
  2207                           ;Lcd4Lignes.c: 194: PORTAbits.RA0 = 1;
  2208  00080E  8080               	bsf	128,0,c	;volatile
  2209  000810                     
  2210                           ;Lcd4Lignes.c: 195: PORTAbits.RA1 = 0;
  2211  000810  9280               	bcf	128,1,c	;volatile
  2212  000812                     
  2213                           ;Lcd4Lignes.c: 197: lcd_ecrireDonnees(caractere >> 4);
  2214  000812  3803               	swapf	lcd_wrData@caractere^0,w,c
  2215  000814  0B0F               	andlw	15
  2216  000816  EC4F  F004         	call	_lcd_ecrireDonnees
  2217  00081A                     
  2218                           ;Lcd4Lignes.c: 198: lcd_strobeEnableBit();
  2219  00081A  EC64  F004         	call	_lcd_strobeEnableBit	;wreg free
  2220  00081E                     
  2221                           ;Lcd4Lignes.c: 201: lcd_ecrireDonnees(caractere);
  2222  00081E  5003               	movf	lcd_wrData@caractere^0,w,c
  2223  000820  EC4F  F004         	call	_lcd_ecrireDonnees
  2224  000824                     
  2225                           ;Lcd4Lignes.c: 202: lcd_strobeEnableBit();
  2226  000824  EC64  F004         	call	_lcd_strobeEnableBit	;wreg free
  2227  000828                     
  2228                           ;Lcd4Lignes.c: 205: TRISD = 0b00001111;
  2229  000828  0E0F               	movlw	15
  2230  00082A  6E95               	movwf	149,c	;volatile
  2231  00082C                     
  2232                           ;Lcd4Lignes.c: 206: _delay((unsigned long)((2)*(1000000/4000000.0)));
  2233                           ;Lcd4Lignes.c: 207: return(lcd_busy());
  2234  00082C  ECCB  F003         	call	_lcd_busy	;wreg free
  2235  000830  0012               	return		;funcret
  2236  000832                     __end_of_lcd_wrData:
  2237                           	opt callstack 0
  2238                           
  2239 ;; *************** function _lcd_gotoXY *****************
  2240 ;; Defined at:
  2241 ;;		line 314 in file "Lcd4Lignes.c"
  2242 ;; Parameters:    Size  Location     Type
  2243 ;;  x               1    wreg     unsigned char 
  2244 ;;  y               1    3[COMRAM] unsigned char 
  2245 ;; Auto vars:     Size  Location     Type
  2246 ;;  x               1    4[COMRAM] unsigned char 
  2247 ;; Return value:  Size  Location     Type
  2248 ;;                  1    wreg      void 
  2249 ;; Registers used:
  2250 ;;		wreg, status,2, status,0, cstack
  2251 ;; Tracked objects:
  2252 ;;		On entry : 0/0
  2253 ;;		On exit  : 0/0
  2254 ;;		Unchanged: 0/0
  2255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2256 ;;      Params:         1       0       0       0       0       0       0
  2257 ;;      Locals:         1       0       0       0       0       0       0
  2258 ;;      Temps:          0       0       0       0       0       0       0
  2259 ;;      Totals:         2       0       0       0       0       0       0
  2260 ;;Total ram usage:        2 bytes
  2261 ;; Hardware stack levels used:    1
  2262 ;; Hardware stack levels required when called:    4
  2263 ;; This function calls:
  2264 ;;		_lcd_wrCom
  2265 ;; This function is called by:
  2266 ;;		_afficheAliens
  2267 ;;		_lcd_effaceLigne
  2268 ;; This function uses a non-reentrant model
  2269 ;;
  2270                           
  2271                           	psect	text18
  2272  00040A                     __ptext18:
  2273                           	opt callstack 0
  2274  00040A                     _lcd_gotoXY:
  2275                           	opt callstack 25
  2276                           
  2277                           ;incstack = 0
  2278                           ;lcd_gotoXY@x stored from wreg
  2279  00040A  6E05               	movwf	lcd_gotoXY@x^0,c
  2280  00040C                     
  2281                           ;Lcd4Lignes.c: 316: switch(y)
  2282  00040C  EF24  F002         	goto	l1655
  2283  000410                     l1645:
  2284                           
  2285                           ;Lcd4Lignes.c: 319: lcd_wrCom((x-1+0x80)|0x80);
  2286  000410  5005               	movf	lcd_gotoXY@x^0,w,c
  2287  000412  0F7F               	addlw	127
  2288  000414  0980               	iorlw	128
  2289  000416  EC6A  F002         	call	_lcd_wrCom
  2290                           
  2291                           ;Lcd4Lignes.c: 320: break;
  2292  00041A  EF37  F002         	goto	l175
  2293  00041E                     l1647:
  2294                           
  2295                           ;Lcd4Lignes.c: 322: lcd_wrCom((x-1+0xC0)|0x80);
  2296  00041E  5005               	movf	lcd_gotoXY@x^0,w,c
  2297  000420  0FBF               	addlw	191
  2298  000422  0980               	iorlw	128
  2299  000424  EC6A  F002         	call	_lcd_wrCom
  2300                           
  2301                           ;Lcd4Lignes.c: 323: break;
  2302  000428  EF37  F002         	goto	l175
  2303  00042C                     l1649:
  2304                           
  2305                           ;Lcd4Lignes.c: 325: lcd_wrCom((x-1+0x94)|0x80);
  2306  00042C  5005               	movf	lcd_gotoXY@x^0,w,c
  2307  00042E  0F93               	addlw	147
  2308  000430  0980               	iorlw	128
  2309  000432  EC6A  F002         	call	_lcd_wrCom
  2310                           
  2311                           ;Lcd4Lignes.c: 326: break;
  2312  000436  EF37  F002         	goto	l175
  2313  00043A                     l1651:
  2314                           
  2315                           ;Lcd4Lignes.c: 328: lcd_wrCom((x-1+0xD4)|0x80);
  2316  00043A  5005               	movf	lcd_gotoXY@x^0,w,c
  2317  00043C  0FD3               	addlw	211
  2318  00043E  0980               	iorlw	128
  2319  000440  EC6A  F002         	call	_lcd_wrCom
  2320                           
  2321                           ;Lcd4Lignes.c: 329: break;
  2322  000444  EF37  F002         	goto	l175
  2323  000448                     l1655:
  2324  000448  5004               	movf	lcd_gotoXY@y^0,w,c
  2325                           
  2326                           ; Switch size 1, requested type "simple"
  2327                           ; Number of cases is 4, Range of values is 1 to 4
  2328                           ; switch strategies available:
  2329                           ; Name         Instructions Cycles
  2330                           ; simple_byte           13     7 (average)
  2331                           ;	Chosen strategy is simple_byte
  2332  00044A  0A01               	xorlw	1	; case 1
  2333  00044C  B4D8               	btfsc	status,2,c
  2334  00044E  EF08  F002         	goto	l1645
  2335  000452  0A03               	xorlw	3	; case 2
  2336  000454  B4D8               	btfsc	status,2,c
  2337  000456  EF0F  F002         	goto	l1647
  2338  00045A  0A01               	xorlw	1	; case 3
  2339  00045C  B4D8               	btfsc	status,2,c
  2340  00045E  EF16  F002         	goto	l1649
  2341  000462  0A07               	xorlw	7	; case 4
  2342  000464  B4D8               	btfsc	status,2,c
  2343  000466  EF1D  F002         	goto	l1651
  2344  00046A  EF37  F002         	goto	l175
  2345  00046E                     l175:
  2346  00046E  0012               	return		;funcret
  2347  000470                     __end_of_lcd_gotoXY:
  2348                           	opt callstack 0
  2349                           
  2350 ;; *************** function _lcd_wrCom *****************
  2351 ;; Defined at:
  2352 ;;		line 156 in file "Lcd4Lignes.c"
  2353 ;; Parameters:    Size  Location     Type
  2354 ;;  commande        1    wreg     unsigned char 
  2355 ;; Auto vars:     Size  Location     Type
  2356 ;;  commande        1    2[COMRAM] unsigned char 
  2357 ;; Return value:  Size  Location     Type
  2358 ;;                  1    wreg      unsigned char 
  2359 ;; Registers used:
  2360 ;;		wreg, status,2, status,0, cstack
  2361 ;; Tracked objects:
  2362 ;;		On entry : 0/0
  2363 ;;		On exit  : 0/0
  2364 ;;		Unchanged: 0/0
  2365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2366 ;;      Params:         0       0       0       0       0       0       0
  2367 ;;      Locals:         1       0       0       0       0       0       0
  2368 ;;      Temps:          0       0       0       0       0       0       0
  2369 ;;      Totals:         1       0       0       0       0       0       0
  2370 ;;Total ram usage:        1 bytes
  2371 ;; Hardware stack levels used:    1
  2372 ;; Hardware stack levels required when called:    3
  2373 ;; This function calls:
  2374 ;;		_lcd_busy
  2375 ;;		_lcd_ecrireDonnees
  2376 ;;		_lcd_strobeEnableBit
  2377 ;; This function is called by:
  2378 ;;		_lcd_init
  2379 ;;		_lcd_curseurHome
  2380 ;;		_lcd_gotoXY
  2381 ;;		_lcd_ecritChar
  2382 ;;		_lcd_initCGRam
  2383 ;;		_lcd_effaceAffichage
  2384 ;;		_lcd_cacheCurseur
  2385 ;;		_lcd_montreCurseur
  2386 ;; This function uses a non-reentrant model
  2387 ;;
  2388                           
  2389                           	psect	text19
  2390  0004D4                     __ptext19:
  2391                           	opt callstack 0
  2392  0004D4                     _lcd_wrCom:
  2393                           	opt callstack 26
  2394                           
  2395                           ;incstack = 0
  2396                           ;lcd_wrCom@commande stored from wreg
  2397  0004D4  6E03               	movwf	lcd_wrCom@commande^0,c
  2398  0004D6                     
  2399                           ;Lcd4Lignes.c: 158: lcd_busy();
  2400  0004D6  ECCB  F003         	call	_lcd_busy	;wreg free
  2401  0004DA                     
  2402                           ;Lcd4Lignes.c: 160: TRISD = 0b00000000;
  2403  0004DA  0E00               	movlw	0
  2404  0004DC  6E95               	movwf	149,c	;volatile
  2405  0004DE                     
  2406                           ;Lcd4Lignes.c: 163: PORTAbits.RA0 = 0;
  2407  0004DE  9080               	bcf	128,0,c	;volatile
  2408  0004E0                     
  2409                           ;Lcd4Lignes.c: 164: PORTAbits.RA1 = 0;
  2410  0004E0  9280               	bcf	128,1,c	;volatile
  2411  0004E2                     
  2412                           ;Lcd4Lignes.c: 166: lcd_ecrireDonnees(commande >> 4);
  2413  0004E2  3803               	swapf	lcd_wrCom@commande^0,w,c
  2414  0004E4  0B0F               	andlw	15
  2415  0004E6  EC4F  F004         	call	_lcd_ecrireDonnees
  2416  0004EA                     
  2417                           ;Lcd4Lignes.c: 167: lcd_strobeEnableBit();
  2418  0004EA  EC64  F004         	call	_lcd_strobeEnableBit	;wreg free
  2419  0004EE                     
  2420                           ;Lcd4Lignes.c: 170: lcd_ecrireDonnees(commande);
  2421  0004EE  5003               	movf	lcd_wrCom@commande^0,w,c
  2422  0004F0  EC4F  F004         	call	_lcd_ecrireDonnees
  2423  0004F4                     
  2424                           ;Lcd4Lignes.c: 171: lcd_strobeEnableBit();
  2425  0004F4  EC64  F004         	call	_lcd_strobeEnableBit	;wreg free
  2426  0004F8                     
  2427                           ;Lcd4Lignes.c: 172: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2428  0004F8  0E03               	movlw	3
  2429  0004FA                     u727:
  2430  0004FA  2EE8               	decfsz	wreg,f,c
  2431  0004FC  D7FE               	bra	u727
  2432  0004FE  F000               	nop	
  2433  000500                     
  2434                           ;Lcd4Lignes.c: 174: if ((commande == 0x01) || commande == 0x02)
  2435  000500  0403               	decf	lcd_wrCom@commande^0,w,c
  2436  000502  B4D8               	btfsc	status,2,c
  2437  000504  EF86  F002         	goto	u371
  2438  000508  EF88  F002         	goto	u370
  2439  00050C                     u371:
  2440  00050C  EF91  F002         	goto	l1567
  2441  000510                     u370:
  2442  000510  0E02               	movlw	2
  2443  000512  1803               	xorwf	lcd_wrCom@commande^0,w,c
  2444  000514  A4D8               	btfss	status,2,c
  2445  000516  EF8F  F002         	goto	u381
  2446  00051A  EF91  F002         	goto	u380
  2447  00051E                     u381:
  2448  00051E  EF96  F002         	goto	l1569
  2449  000522                     u380:
  2450  000522                     l1567:
  2451                           
  2452                           ;Lcd4Lignes.c: 175: _delay((unsigned long)((2)*(1000000/4000.0)));
  2453  000522  0EA6               	movlw	166
  2454  000524                     u737:
  2455  000524  2EE8               	decfsz	wreg,f,c
  2456  000526  D7FE               	bra	u737
  2457  000528  F000 F000          	nop2	
  2458  00052C                     l1569:
  2459                           
  2460                           ;Lcd4Lignes.c: 177: TRISD = 0b00001111;
  2461  00052C  0E0F               	movlw	15
  2462  00052E  6E95               	movwf	149,c	;volatile
  2463  000530                     
  2464                           ;Lcd4Lignes.c: 179: return(lcd_busy());;	Return value of _lcd_wrCom is never used
  2465  000530  ECCB  F003         	call	_lcd_busy	;wreg free
  2466  000534  0012               	return		;funcret
  2467  000536                     __end_of_lcd_wrCom:
  2468                           	opt callstack 0
  2469                           
  2470 ;; *************** function _lcd_strobeEnableBit *****************
  2471 ;; Defined at:
  2472 ;;		line 431 in file "Lcd4Lignes.c"
  2473 ;; Parameters:    Size  Location     Type
  2474 ;;		None
  2475 ;; Auto vars:     Size  Location     Type
  2476 ;;		None
  2477 ;; Return value:  Size  Location     Type
  2478 ;;                  1    wreg      void 
  2479 ;; Registers used:
  2480 ;;		None
  2481 ;; Tracked objects:
  2482 ;;		On entry : 0/0
  2483 ;;		On exit  : 0/0
  2484 ;;		Unchanged: 0/0
  2485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2486 ;;      Params:         0       0       0       0       0       0       0
  2487 ;;      Locals:         0       0       0       0       0       0       0
  2488 ;;      Temps:          0       0       0       0       0       0       0
  2489 ;;      Totals:         0       0       0       0       0       0       0
  2490 ;;Total ram usage:        0 bytes
  2491 ;; Hardware stack levels used:    1
  2492 ;; Hardware stack levels required when called:    1
  2493 ;; This function calls:
  2494 ;;		Nothing
  2495 ;; This function is called by:
  2496 ;;		_lcd_wrCom
  2497 ;;		_lcd_wrData
  2498 ;;		_lcd_resetSequence
  2499 ;; This function uses a non-reentrant model
  2500 ;;
  2501                           
  2502                           	psect	text20
  2503  0008C8                     __ptext20:
  2504                           	opt callstack 0
  2505  0008C8                     _lcd_strobeEnableBit:
  2506                           	opt callstack 27
  2507  0008C8                     
  2508                           ;Lcd4Lignes.c: 433: PORTAbits.RA2 = 1;
  2509  0008C8  8480               	bsf	128,2,c	;volatile
  2510                           
  2511                           ;Lcd4Lignes.c: 434: __nop();
  2512  0008CA  F000               	nop	
  2513                           
  2514                           ;Lcd4Lignes.c: 435: PORTAbits.RA2 = 0;
  2515  0008CC  9480               	bcf	128,2,c	;volatile
  2516  0008CE  0012               	return		;funcret
  2517  0008D0                     __end_of_lcd_strobeEnableBit:
  2518                           	opt callstack 0
  2519                           
  2520 ;; *************** function _lcd_ecrireDonnees *****************
  2521 ;; Defined at:
  2522 ;;		line 107 in file "Lcd4Lignes.c"
  2523 ;; Parameters:    Size  Location     Type
  2524 ;;  donnee          1    wreg     unsigned char 
  2525 ;; Auto vars:     Size  Location     Type
  2526 ;;  donnee          1    1[COMRAM] unsigned char 
  2527 ;; Return value:  Size  Location     Type
  2528 ;;                  1    wreg      void 
  2529 ;; Registers used:
  2530 ;;		wreg, status,2, status,0
  2531 ;; Tracked objects:
  2532 ;;		On entry : 0/0
  2533 ;;		On exit  : 0/0
  2534 ;;		Unchanged: 0/0
  2535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2536 ;;      Params:         0       0       0       0       0       0       0
  2537 ;;      Locals:         1       0       0       0       0       0       0
  2538 ;;      Temps:          1       0       0       0       0       0       0
  2539 ;;      Totals:         2       0       0       0       0       0       0
  2540 ;;Total ram usage:        2 bytes
  2541 ;; Hardware stack levels used:    1
  2542 ;; Hardware stack levels required when called:    1
  2543 ;; This function calls:
  2544 ;;		Nothing
  2545 ;; This function is called by:
  2546 ;;		_lcd_wrCom
  2547 ;;		_lcd_wrData
  2548 ;;		_lcd_resetSequence
  2549 ;; This function uses a non-reentrant model
  2550 ;;
  2551                           
  2552                           	psect	text21
  2553  00089E                     __ptext21:
  2554                           	opt callstack 0
  2555  00089E                     _lcd_ecrireDonnees:
  2556                           	opt callstack 27
  2557                           
  2558                           ;incstack = 0
  2559                           ;lcd_ecrireDonnees@donnee stored from wreg
  2560  00089E  6E02               	movwf	lcd_ecrireDonnees@donnee^0,c
  2561  0008A0                     
  2562                           ;Lcd4Lignes.c: 110: PORTD = (donnee & 0x0F) | (PORTD & 0xF0);
  2563  0008A0  CF83 F001          	movff	3971,??_lcd_ecrireDonnees	;volatile
  2564  0008A4  0EF0               	movlw	240
  2565  0008A6  1601               	andwf	??_lcd_ecrireDonnees^0,f,c
  2566  0008A8  5002               	movf	lcd_ecrireDonnees@donnee^0,w,c
  2567  0008AA  0B0F               	andlw	15
  2568  0008AC  1001               	iorwf	??_lcd_ecrireDonnees^0,w,c
  2569  0008AE  6E83               	movwf	131,c	;volatile
  2570  0008B0  0012               	return		;funcret
  2571  0008B2                     __end_of_lcd_ecrireDonnees:
  2572                           	opt callstack 0
  2573                           
  2574 ;; *************** function _lcd_busy *****************
  2575 ;; Defined at:
  2576 ;;		line 124 in file "Lcd4Lignes.c"
  2577 ;; Parameters:    Size  Location     Type
  2578 ;;		None
  2579 ;; Auto vars:     Size  Location     Type
  2580 ;;  adresse         1    1[COMRAM] unsigned char 
  2581 ;; Return value:  Size  Location     Type
  2582 ;;                  1    wreg      unsigned char 
  2583 ;; Registers used:
  2584 ;;		wreg, status,2, status,0, cstack
  2585 ;; Tracked objects:
  2586 ;;		On entry : 0/0
  2587 ;;		On exit  : 0/0
  2588 ;;		Unchanged: 0/0
  2589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2590 ;;      Params:         0       0       0       0       0       0       0
  2591 ;;      Locals:         1       0       0       0       0       0       0
  2592 ;;      Temps:          1       0       0       0       0       0       0
  2593 ;;      Totals:         2       0       0       0       0       0       0
  2594 ;;Total ram usage:        2 bytes
  2595 ;; Hardware stack levels used:    1
  2596 ;; Hardware stack levels required when called:    2
  2597 ;; This function calls:
  2598 ;;		_lcd_lireDonnees
  2599 ;; This function is called by:
  2600 ;;		_lcd_wrCom
  2601 ;;		_lcd_wrData
  2602 ;; This function uses a non-reentrant model
  2603 ;;
  2604                           
  2605                           	psect	text22
  2606  000796                     __ptext22:
  2607                           	opt callstack 0
  2608  000796                     _lcd_busy:
  2609                           	opt callstack 26
  2610  000796                     
  2611                           ;Lcd4Lignes.c: 126: unsigned char adresse;;Lcd4Lignes.c: 128: PORTAbits.RA0 = 0;
  2612  000796  9080               	bcf	128,0,c	;volatile
  2613                           
  2614                           ;Lcd4Lignes.c: 129: PORTAbits.RA1 = 1;
  2615  000798  8280               	bsf	128,1,c	;volatile
  2616  00079A                     l137:
  2617                           
  2618                           ;Lcd4Lignes.c: 132: {;Lcd4Lignes.c: 133: PORTAbits.RA2 = 1;
  2619  00079A  8480               	bsf	128,2,c	;volatile
  2620                           
  2621                           ;Lcd4Lignes.c: 134: __nop();
  2622  00079C  F000               	nop	
  2623  00079E                     
  2624                           ;Lcd4Lignes.c: 135: adresse = lcd_lireDonnees() << 4;
  2625  00079E  EC68  F004         	call	_lcd_lireDonnees	;wreg free
  2626  0007A2  6E01               	movwf	??_lcd_busy^0,c
  2627  0007A4  3801               	swapf	??_lcd_busy^0,w,c
  2628  0007A6  0BF0               	andlw	240
  2629  0007A8  6E02               	movwf	lcd_busy@adresse^0,c
  2630  0007AA                     
  2631                           ;Lcd4Lignes.c: 136: PORTAbits.RA2 = 0;
  2632  0007AA  9480               	bcf	128,2,c	;volatile
  2633  0007AC                     
  2634                           ;Lcd4Lignes.c: 138: PORTAbits.RA2 = 1;
  2635  0007AC  8480               	bsf	128,2,c	;volatile
  2636  0007AE                     
  2637                           ;Lcd4Lignes.c: 139: __nop();
  2638  0007AE  F000               	nop	
  2639                           
  2640                           ;Lcd4Lignes.c: 140: adresse |= lcd_lireDonnees();
  2641  0007B0  EC68  F004         	call	_lcd_lireDonnees	;wreg free
  2642  0007B4  1202               	iorwf	lcd_busy@adresse^0,f,c
  2643  0007B6                     
  2644                           ;Lcd4Lignes.c: 141: PORTAbits.RA2 = 0;
  2645  0007B6  9480               	bcf	128,2,c	;volatile
  2646  0007B8                     
  2647                           ;Lcd4Lignes.c: 143: };Lcd4Lignes.c: 144: while(adresse&0x80);
  2648  0007B8  BE02               	btfsc	lcd_busy@adresse^0,7,c
  2649  0007BA  EFE1  F003         	goto	u361
  2650  0007BE  EFE3  F003         	goto	u360
  2651  0007C2                     u361:
  2652  0007C2  EFCD  F003         	goto	l137
  2653  0007C6                     u360:
  2654  0007C6                     
  2655                           ;Lcd4Lignes.c: 146: PORTAbits.RA1 = 0;
  2656  0007C6  9280               	bcf	128,1,c	;volatile
  2657  0007C8                     
  2658                           ;Lcd4Lignes.c: 147: return(adresse&0x7f);
  2659  0007C8  5002               	movf	lcd_busy@adresse^0,w,c
  2660  0007CA  0B7F               	andlw	127
  2661  0007CC  0012               	return		;funcret
  2662  0007CE                     __end_of_lcd_busy:
  2663                           	opt callstack 0
  2664                           
  2665 ;; *************** function _lcd_lireDonnees *****************
  2666 ;; Defined at:
  2667 ;;		line 93 in file "Lcd4Lignes.c"
  2668 ;; Parameters:    Size  Location     Type
  2669 ;;		None
  2670 ;; Auto vars:     Size  Location     Type
  2671 ;;		None
  2672 ;; Return value:  Size  Location     Type
  2673 ;;                  1    wreg      unsigned char 
  2674 ;; Registers used:
  2675 ;;		wreg, status,2, status,0
  2676 ;; Tracked objects:
  2677 ;;		On entry : 0/0
  2678 ;;		On exit  : 0/0
  2679 ;;		Unchanged: 0/0
  2680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2681 ;;      Params:         0       0       0       0       0       0       0
  2682 ;;      Locals:         0       0       0       0       0       0       0
  2683 ;;      Temps:          0       0       0       0       0       0       0
  2684 ;;      Totals:         0       0       0       0       0       0       0
  2685 ;;Total ram usage:        0 bytes
  2686 ;; Hardware stack levels used:    1
  2687 ;; Hardware stack levels required when called:    1
  2688 ;; This function calls:
  2689 ;;		Nothing
  2690 ;; This function is called by:
  2691 ;;		_lcd_busy
  2692 ;; This function uses a non-reentrant model
  2693 ;;
  2694                           
  2695                           	psect	text23
  2696  0008D0                     __ptext23:
  2697                           	opt callstack 0
  2698  0008D0                     _lcd_lireDonnees:
  2699                           	opt callstack 26
  2700  0008D0                     
  2701                           ;Lcd4Lignes.c: 96: return (PORTD & 0x0f);
  2702  0008D0  5083               	movf	131,w,c	;volatile
  2703  0008D2  0B0F               	andlw	15
  2704  0008D4  0012               	return		;funcret
  2705  0008D6                     __end_of_lcd_lireDonnees:
  2706                           	opt callstack 0
  2707                           
  2708 ;; *************** function _high_isr *****************
  2709 ;; Defined at:
  2710 ;;		line 315 in file "main.c"
  2711 ;; Parameters:    Size  Location     Type
  2712 ;;		None
  2713 ;; Auto vars:     Size  Location     Type
  2714 ;;		None
  2715 ;; Return value:  Size  Location     Type
  2716 ;;                  1    wreg      void 
  2717 ;; Registers used:
  2718 ;;		wreg, status,2
  2719 ;; Tracked objects:
  2720 ;;		On entry : 0/0
  2721 ;;		On exit  : 0/0
  2722 ;;		Unchanged: 0/0
  2723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2724 ;;      Params:         0       0       0       0       0       0       0
  2725 ;;      Locals:         0       0       0       0       0       0       0
  2726 ;;      Temps:          0       0       0       0       0       0       0
  2727 ;;      Totals:         0       0       0       0       0       0       0
  2728 ;;Total ram usage:        0 bytes
  2729 ;; Hardware stack levels used:    1
  2730 ;; This function calls:
  2731 ;;		Nothing
  2732 ;; This function is called by:
  2733 ;;		Interrupt level 2
  2734 ;; This function uses a non-reentrant model
  2735 ;;
  2736                           
  2737                           	psect	intcode
  2738  000008                     __pintcode:
  2739                           	opt callstack 0
  2740  000008                     _high_isr:
  2741                           	opt callstack 24
  2742                           
  2743                           ;incstack = 0
  2744  000008  8250               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2745  00000A                     
  2746                           ;main.c: 317: if (INTCONbits.TMR0IF)
  2747  00000A  A4F2               	btfss	242,2,c	;volatile
  2748  00000C  EF0A  F000         	goto	i2u31_41
  2749  000010  EF0C  F000         	goto	i2u31_40
  2750  000014                     i2u31_41:
  2751  000014  EF13  F000         	goto	i2l112
  2752  000018                     i2u31_40:
  2753  000018                     
  2754                           ;main.c: 318: {;main.c: 319: INTCONbits.TMR0IF = 0;
  2755  000018  94F2               	bcf	242,2,c	;volatile
  2756  00001A                     
  2757                           ;main.c: 321: TMR0 = 0x0BDC;
  2758  00001A  0E0B               	movlw	11
  2759  00001C  6ED7               	movwf	215,c	;volatile
  2760  00001E  0EDC               	movlw	220
  2761  000020  6ED6               	movwf	214,c	;volatile
  2762                           
  2763                           ;main.c: 322: m_tempsDAfficher = 1;
  2764  000022  0E01               	movlw	1
  2765  000024  6E4B               	movwf	_m_tempsDAfficher^0,c
  2766  000026                     i2l112:
  2767  000026  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2768  000028  0011               	retfie		f
  2769  00002A                     __end_of_high_isr:
  2770                           	opt callstack 0
  2771  0000                     
  2772                           	psect	rparam
  2773  0000                     
  2774                           	psect	temp
  2775  000050                     btemp:
  2776                           	opt callstack 0
  2777  000050                     	ds	1
  2778  0000                     int$flags	set	btemp
  2779  0000                     wtemp8	set	btemp+1
  2780  0000                     ttemp5	set	btemp+1
  2781  0000                     ttemp6	set	btemp+4
  2782  0000                     ttemp7	set	btemp+8
  2783                           tosu	equ	0xFFF
  2784                           tosh	equ	0xFFE
  2785                           tosl	equ	0xFFD
  2786                           stkptr	equ	0xFFC
  2787                           pclatu	equ	0xFFB
  2788                           pclath	equ	0xFFA
  2789                           pcl	equ	0xFF9
  2790                           tblptru	equ	0xFF8
  2791                           tblptrh	equ	0xFF7
  2792                           tblptrl	equ	0xFF6
  2793                           tablat	equ	0xFF5
  2794                           prodh	equ	0xFF4
  2795                           prodl	equ	0xFF3
  2796                           indf0	equ	0xFEF
  2797                           postinc0	equ	0xFEE
  2798                           postdec0	equ	0xFED
  2799                           preinc0	equ	0xFEC
  2800                           plusw0	equ	0xFEB
  2801                           fsr0h	equ	0xFEA
  2802                           fsr0l	equ	0xFE9
  2803                           wreg	equ	0xFE8
  2804                           indf1	equ	0xFE7
  2805                           postinc1	equ	0xFE6
  2806                           postdec1	equ	0xFE5
  2807                           preinc1	equ	0xFE4
  2808                           plusw1	equ	0xFE3
  2809                           fsr1h	equ	0xFE2
  2810                           fsr1l	equ	0xFE1
  2811                           bsr	equ	0xFE0
  2812                           indf2	equ	0xFDF
  2813                           postinc2	equ	0xFDE
  2814                           postdec2	equ	0xFDD
  2815                           preinc2	equ	0xFDC
  2816                           plusw2	equ	0xFDB
  2817                           fsr2h	equ	0xFDA
  2818                           fsr2l	equ	0xFD9
  2819                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        152
    BSS         21
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     54      79
    BANK0           160      0     148
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           239      0       0

Pointer List with Targets:

    strcpy@from	PTR const unsigned char  size(2) Largest target is 84
		 -> m_aliens(BANK0[84]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 84
		 -> m_aliens(BANK0[84]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 84
		 -> m_aliens(BANK0[84]), 

    lcd_putMessage@chaine	PTR const unsigned char  size(2) Largest target is 84
		 -> m_aliens(BANK0[84]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 84
		 -> m_aliens(BANK0[84]), 


Critical Paths under _main in COMRAM

    _main->_nouveauxAliens
    _nouveauxAliens->___awmod
    _strcpy->___wmul
    _rand->___lmul
    ___awmod->_rand
    _lcd_init->_lcd_initCGRam
    _lcd_resetSequence->_lcd_ecrireDonnees
    _lcd_initCGRam->_lcd_wrCom
    _lcd_initCGRam->_lcd_wrData
    _lcd_curseurHome->_lcd_wrCom
    _initialisation->_srand
    _afficheAliens->_lcd_putMessage
    _lcd_putMessage->_lcd_ecritChar
    _lcd_ecritChar->_lcd_wrCom
    _lcd_ecritChar->_lcd_wrData
    _lcd_wrData->_lcd_busy
    _lcd_wrData->_lcd_ecrireDonnees
    _lcd_gotoXY->_lcd_wrCom
    _lcd_wrCom->_lcd_busy
    _lcd_wrCom->_lcd_ecrireDonnees

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    4040
                                             52 COMRAM     2     2      0
                      _afficheAliens
                         _init_serie
                     _initialisation
                           _lcd_init
                     _nouveauxAliens
 ---------------------------------------------------------------------------------
 (1) _nouveauxAliens                                      32    32      0    2141
                                             20 COMRAM    32    32      0
                            ___awmod
                             ___wmul
                               _rand
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               6     2      4     227
                                              6 COMRAM     6     2      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _rand                                                 2     0      2     370
                                             12 COMRAM     2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     370
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     463
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     600
                                             14 COMRAM     6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     738
                      _lcd_initCGRam
                  _lcd_resetSequence
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (2) _lcd_resetSequence                                    1     1      0      22
                                              2 COMRAM     1     1      0
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (2) _lcd_initCGRam                                        4     4      0     560
                                              3 COMRAM     4     4      0
                    _lcd_curseurHome
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (3) _lcd_curseurHome                                      0     0      0     156
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0      98
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_serie                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _afficheAliens                                        1     1      0    1063
                                              8 COMRAM     1     1      0
                         _lcd_gotoXY
                     _lcd_putMessage
 ---------------------------------------------------------------------------------
 (2) _lcd_putMessage                                       3     1      2     479
                                              5 COMRAM     3     1      2
                      _lcd_ecritChar
 ---------------------------------------------------------------------------------
 (3) _lcd_ecritChar                                        2     2      0     313
                                              3 COMRAM     2     2      0
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (3) _lcd_wrData                                           1     1      0     112
                                              2 COMRAM     1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (2) _lcd_gotoXY                                           2     1      1     494
                                              3 COMRAM     2     1      1
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (2) _lcd_wrCom                                            1     1      0     156
                                              2 COMRAM     1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (3) _lcd_strobeEnableBit                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _lcd_ecrireDonnees                                    2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _lcd_busy                                             2     2      0      46
                                              0 COMRAM     2     2      0
                    _lcd_lireDonnees
 ---------------------------------------------------------------------------------
 (4) _lcd_lireDonnees                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _high_isr                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _afficheAliens
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_putMessage
       _lcd_ecritChar
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
         _lcd_wrData
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
   _init_serie
   _initialisation
     _srand
   _lcd_init
     _lcd_initCGRam
       _lcd_curseurHome
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_resetSequence
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _nouveauxAliens
     ___awmod
       _rand (ARG)
         ___lmul
     ___wmul
     _rand
       ___lmul
     _strcpy
       ___wmul (ARG)

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5EE      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK5            EF      0       0      15        0.0%
BANK5               EF      0       0      13        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0      94       4       92.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     36      4F       1       84.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      E3      14        0.0%
DATA                 0      0      E3      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Nov 15 12:51:52 2019

                          l61 06EC                            l91 0802                            l85 025A  
                          l86 025A           ___wmul@multiplicand 0003                  __CFG_CP0$OFF 000000  
                __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000  
__size_of_lcd_strobeEnableBit 0008                           l106 0640                           l131 08D4  
                         l205 0592                           l134 08B0                           l231 089C  
                         l151 04D2                           l208 08CE                           l160 08C6  
                         l137 079A                           l145 0534                           l138 07C6  
                         l154 0858                           l139 07CC                           l148 0830  
                         l502 030A                           l270 0408                           l175 046E  
                         l192 0794                           l186 06DE                           l258 087E  
                         l269 03F8                           l922 08BE                           l931 075A  
                         l925 0692                  __CFG_CPB$OFF 000000                           u400 03F8  
                         u401 03F4                           u410 075A                           u411 0756  
                         u420 0794                           u500 02FA                           u421 0790  
                         u501 02F6                           u510 0802                           u430 057C  
                         u511 07FE                           u431 0578                           u360 07C6  
                         u440 058E                           u600 0208                           u361 07C2  
                         u441 058A                           u601 0204                           u521 0034  
                         u370 0510                           u450 026E                           u610 0228  
                         u530 00AA                  __CFG_CPD$OFF 000000                           u371 050C  
                         u451 026A                           u611 0224                           u531 00A6  
                         u380 0522                           u460 0288                           u620 0238  
                         u540 00E2                           u381 051E                           u461 0284  
                         u621 0234                           u541 00DE                           u470 02A2  
                         u390 03BE                           u550 0124                           u471 029E  
                         u391 03BA                           u551 0120                           u480 02C0  
                         u560 0140                           u640 0716                           u481 02BC  
                         u561 013C                           u641 0712                           u490 02D6  
                         u570 0180                           u707 04B6                           u491 02D2  
                         u571 017C                           u580 01A6                           u717 04C8  
                         u581 01A2                           u590 01E6                           u727 04FA  
                         u591 01E2                           u737 0524                           u657 06FA  
                         u667 0242                           u677 047A                           u687 0492  
                         u697 04A4                  __CFG_BORV$18 000000                  ___awmod@sign 0014  
                         prod 000FF3                   lcd_gotoXY@x 0005                           wreg 000FE8  
                 lcd_gotoXY@y 0004                  __CFG_LVP$OFF 000000                          l1511 08D0  
                        l1351 088C                          l1521 07AA                          l1601 082C  
                        l1361 0896                          l1353 088E                          l1531 07B8  
                        l1523 07AC                          l1515 08A0                          l1611 06AC  
                        l1355 0890                          l1347 0880                          l1533 07B8  
                        l1525 07AC                          l1517 0796                          l1541 04D6  
                        l1613 06B6                          l1357 0892                          l1349 0884  
                        l1605 08C0                          l1701 0536                          l1621 03B0  
                        l1535 07C8                          l1527 07AE                          l1519 079E  
                        l1551 04E2                          l1543 04DA                          l1607 0696  
                        l1359 0894                          l1703 053C                          l1623 03BE  
                        l1631 072E                          l1529 07B6                          l1561 04F8  
                        l1553 04EA                          l1545 04DE                          l1609 06A2  
                        l1617 06C0                          l1801 0638                          l1721 057C  
                        l1625 03CE                          l1633 0736                          l1539 08C8  
                        l1571 0530                          l1563 0500                          l1555 04EE  
                        l1547 04DE                          l1651 043A                          l1643 040C  
                        l1803 063A                          l1723 057E                          l1715 0544  
                        l1811 0854                          l1627 03D8                          l1619 03A0  
                        l1635 0642                          l1573 0530                          l1565 0510  
                        l1557 04EE                          l1549 04E0                          l1645 0410  
                        l1581 080E                          l1661 0776                          l1821 07DC  
                        l1813 07CE                          l1805 063C                          l1725 058E  
                        l1717 056A                          l1709 0540                          l1741 027A  
                        l1733 025C                          l1637 0676                          l1629 0722  
                        l1901 0238                          l1567 0522                          l1559 04F4  
                        l1647 041E                          l1655 0448                          l1591 081E  
                        l1583 080E                          l1663 0778                          l1823 07F0  
                        l1807 063E                          l1719 056C                          l1671 0482  
                        l1751 02B2                          l1743 0288                          l1735 0260  
                        l1727 085A                          l1639 0686                          l1903 024E  
                        l1831 003E                          l1569 052C                          l1649 042C  
                        l1593 081E                          l1585 0810                          l1577 0806  
                        l1657 075C                          l1825 07F2                          l1665 08B2  
                        l1681 0498                          l1673 0484                          l1809 0832  
                        l1753 02C0                          l1761 02EA                          l1745 0290  
                        l1737 026E                          l1729 0876                          l1905 0256  
                        l1841 008A                          l1833 003E                          l1921 06F0  
                        l1595 0824                          l1587 0812                          l1579 080A  
                        l1659 0764                          l1819 07D2                          l1771 05F6  
                        l1691 04B4                          l1683 049E                          l1675 0486  
                        l1667 0470                          l1763 02FA                          l1755 02D6  
                        l1747 02A2                          l1739 0276                          l1851 00B2  
                        l1843 0090                          l1827 002E                          l1923 0706  
                        l1915 06E0                          l1597 0828                          l1589 081A  
                        l1781 0612                          l1773 0600                          l1693 04BC  
                        l1685 04A2                          l1677 048C                          l1669 0474  
                        l1765 0302                          l1757 02DE                          l1749 02AA  
                        l1853 00C2                          l1845 00AA                          l1829 003A  
                        l1925 0716                          l1917 06E4                          l1599 0828  
                        l1791 0622                          l1783 0616                          l1775 0602  
                        l1695 04C2                          l1687 04AA                          l1679 0490  
                        l1759 02E4                          l1871 0160                          l1863 00EA  
                        l1855 00C6                          l1839 0046                          l1919 06E8  
                        l1793 0624                          l1785 0618                          l1777 060E  
                        l1769 05EE                          l1697 04C6                          l1689 04B0  
                        l1881 0188                          l1873 0164                          l1865 0106  
                        l1857 00E2                          l1795 0626                          l1787 061C  
                        l1779 0610                          l1699 04CE                          l1891 01F6  
                        l1883 01A6                          l1875 0180                          l1867 0124  
                        l1797 0628                          l1789 0620                          l1885 01AC  
                        l1893 01F8                          l1869 0140                          l1799 0630  
                        l1887 01C8                          l1895 0208                          l1897 020C  
                        l1889 01E6                          l1899 0228                          _RCIF 007CF5  
                        _TMR0 000FD6                          _TMR1 000FCE              ??_initialisation 0003  
                        _main 06E0                          _rand 0642                          fsr1h 000FE2  
                        fsr2h 000FDA                          indf1 000FE7                          indf2 000FDF  
                        fsr1l 000FE1                          fsr2l 000FD9                          btemp 0050  
                        prodh 000FF4                          prodl 000FF3                          start 002A  
             ?_lcd_putMessage 0006                 __CFG_IESO$OFF 000000                 __CFG_MCLRE$ON 000000  
                ___param_bank 000000               ??_lcd_ecritChar 0004                         ?_main 0001  
                       ?_rand 000D               __end_of___awmod 030C                         _ANSEL 000F7E  
                       i2l112 0026                         _RCREG 000FAE                         _SPBRG 000FAF  
                       _PORTD 000F83                         _TRISA 000F92                         _TRISB 000F93  
                       _TRISD 000F95                         _TXREG 000FAD                 __CFG_PWRT$OFF 000000  
               __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000  
         ___lmul@multiplicand 0005                 __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000  
              __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000  
              __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000  
               __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000               ??_lcd_initCGRam 0004  
                       _randx 004C                         _srand 08B2                         tablat 000FF5  
                       ttemp5 0051                         ttemp6 0054                         ttemp7 0058  
                       status 000FD8                         wtemp8 0051                __CFG_HFOFST$ON 000000  
              __CFG_PBADEN$ON 000000               __initialization 0594                  __end_of_main 0722  
                __end_of_rand 0694          lcd_putMessage@chaine 0006                        ??_main 0035  
                      ??_rand 000F                 __activetblptr 000002                        _ADCON1 000FC1  
                      _ADRESH 000FC4                        ?_srand 0001                        _ANSELH 000F7F  
                      i2l1491 001A                __CFG_WDTEN$OFF 000000                        i2l1487 000A  
                      i2l1489 0018                        _SPBRGH 000FB0                __CFG_XINST$OFF 000000  
              lcd_initCGRam@i 0006                lcd_initCGRam@j 0007              __end_of_lcd_busy 07CE  
            __end_of_lcd_init 085A              __end_of_high_isr 002A                        ___lmul 03A0  
                      ___wmul 085A                __CFG_STVREN$ON 000000                     ??___awmod 0013  
            ??_nouveauxAliens 0015                        clear_0 05DA               ___awmod@divisor 0011  
             ___awmod@counter 0013                        _strcpy 0722                  __pdataCOMRAM 004C  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
                      srand@x 0001        __size_of_afficheAliens 0036             _lcd_resetSequence 0470  
                  __accesstop 0060       __end_of__initialization 05E0           _lcd_strobeEnableBit 08C8  
          ?_lcd_resetSequence 0001                 ___rparam_used 000001                __pcstackCOMRAM 0001  
                __pidataBANK0 030C           ??_lcd_resetSequence 0003                 __end_of_srand 08C0  
        ?_lcd_strobeEnableBit 0001            __size_of_lcd_wrCom 0062     __end_of_lcd_resetSequence 04D4  
                     ??_srand 0003      __size_of_lcd_lireDonnees 0006             _lcd_ecrireDonnees 089E  
            ??_lcd_putMessage 0008            ?_lcd_ecrireDonnees 0001      __size_of_lcd_curseurHome 0008  
         ??_lcd_ecrireDonnees 0001                 _afficheAliens 07CE                       ?___lmul 0001  
                     ?___wmul 0001                ___lmul@product 0009         ??_lcd_strobeEnableBit 0001  
                     ?_strcpy 0007                    _lcd_gotoXY 040A                       i2u31_40 0018  
                     i2u31_41 0014                    _lcd_wrData 0804     __end_of_lcd_ecrireDonnees 08B2  
                   ?_lcd_busy 0001                     ?_lcd_init 0001       lcd_ecrireDonnees@donnee 0002  
                   ?_high_isr 0001                       __Hparam 0000                       __Lparam 0000  
              ?_afficheAliens 0001               nouveauxAliens@i 0032               nouveauxAliens@j 0030  
             nouveauxAliens@k 002C               nouveauxAliens@v 002E             __end_of_lcd_wrCom 0536  
             __size_of___lmul 006A                       ___awmod 025C               __size_of___wmul 0026  
                     __pcinit 0594                    _init_serie 0880                     _ANSELbits 000F7E  
                     __ramtop 0600                       __ptext0 06E0                       __ptext1 002E  
                     __ptext2 0722                       __ptext3 0642                       __ptext4 03A0  
                     __ptext5 085A                       __ptext6 025C                       __ptext7 0832  
                     __ptext8 0470                       __ptext9 0536         __end_of_lcd_ecritChar 06E0  
                   _T0CONbits 000FD5               lcd_busy@adresse 0002               __size_of_strcpy 003A  
                   _T1CONbits 000FCD              ___awmod@dividend 000F              lcd_ecritChar@car 0004  
         nouveauxAliens@F2849 0037                    ??_lcd_busy 0001                    ??_lcd_init 0008  
  __size_of_lcd_resetSequence 0064                    ??_high_isr 0001              _m_tempsDAfficher 004B  
        end_of_initialization 05E0         __end_of_lcd_initCGRam 0594                 __Lmediumconst 0000  
           ??_lcd_lireDonnees 0001                     _RCSTAbits 000FAB                       postdec1 000FE5  
                     postinc0 000FEE                       postinc2 000FDE       __size_of_initialisation 0054  
           ??_lcd_curseurHome 0004           lcd_ecritChar@posRam 0005                     _PORTAbits 000F80  
                 ?_lcd_gotoXY 0004                     _TRISCbits 000F94                   ?_lcd_wrData 0001  
  __size_of_lcd_ecrireDonnees 0014                     _TXSTAbits 000FAC               ??_afficheAliens 0009  
              __end_of___lmul 040A                __end_of___wmul 0880                   _BAUDCONbits 000FB8  
                 ?_init_serie 0001                 __pidataCOMRAM 08D6                __end_of_strcpy 075C  
         start_initialization 0594           __size_of_lcd_gotoXY 0066                      ??___lmul 0009  
                    ??___wmul 0005           __size_of_lcd_wrData 002E                   __pdataBANK0 0060  
            __CFG_LPT1OSC$OFF 000000                      ??_strcpy 000B                   __pbssCOMRAM 0037  
     __size_of_nouveauxAliens 022E             __size_of_lcd_busy 0038             __size_of_lcd_init 0028  
           __size_of_high_isr 0022           __size_of_init_serie 001E             __CFG_CCP2MX$PORTC 000000  
 __end_of_lcd_strobeEnableBit 08D0                     __pintcode 0008                _initialisation 05EE  
                    ?___awmod 000F                     _lcd_wrCom 04D4               _lcd_lireDonnees 08D0  
         lcd_wrData@caractere 0003                __size_of_srand 000E               _lcd_curseurHome 08C0  
              ___wmul@product 0005        __end_of_initialisation 0642              __CFG_WDTPS$32768 000000  
     __size_of_lcd_putMessage 003A                    ?_lcd_wrCom 0001                    _ADCON0bits 000FC2  
                  _ADCON2bits 000FC0             ___wmul@multiplier 0001                  ??_lcd_gotoXY 0005  
                ??_lcd_wrData 0003             lcd_wrCom@commande 0003             ___lmul@multiplier 0001  
                   copy_data0 05A8                     copy_data1 05C8        __size_of_lcd_ecritChar 004C  
                    __Hrparam 0000               ?_initialisation 0001                      __Lrparam 0000  
          __CFG_BOREN$SBORDIS 000000            __end_of_lcd_gotoXY 0470            __end_of_lcd_wrData 0832  
            __size_of___awmod 00B0                  ??_init_serie 0001        __size_of_lcd_initCGRam 005E  
             lcd_putMessage@j 0008       __end_of_lcd_lireDonnees 08D6                _nouveauxAliens 002E  
                    _matCGRAM 0060       __end_of_lcd_curseurHome 08C8                      __ptext10 08C0  
                    __ptext11 05EE                      __ptext20 08C8                      __ptext12 08B2  
                    __ptext21 089E                      __ptext13 0880                      __ptext22 0796  
                    __ptext14 07CE                      __ptext23 08D0                      __ptext15 075C  
                    __ptext16 0694                      __ptext17 0804                      __ptext18 040A  
                    __ptext19 04D4         nouveauxAliens@counter 002B                      _m_aliens 00A0  
                    _lcd_busy 0796                      _lcd_init 0832                      _high_isr 0008  
                  strcpy@from 0009         nouveauxAliens@verifie 0017                 __size_of_main 0042  
               __size_of_rand 0052            __end_of_init_serie 089E         __end_of_afficheAliens 0804  
                    int$flags 0050                   ??_lcd_wrCom 0003        __end_of_nouveauxAliens 025C  
              afficheAliens@i 0009                 _lcd_ecritChar 0694                    _INTCONbits 000FF2  
                    intlevel2 0000                 _lcd_initCGRam 0536          nouveauxAliens@random 0034  
              _lcd_putMessage 075C                ?_lcd_ecritChar 0001               ?_nouveauxAliens 0001  
            ?_lcd_lireDonnees 0001                      strcpy@cp 000B                      strcpy@to 0007  
            ?_lcd_curseurHome 0001                ?_lcd_initCGRam 0001             __CFG_FOSC$INTIO67 000000  
      __end_of_lcd_putMessage 0796  
