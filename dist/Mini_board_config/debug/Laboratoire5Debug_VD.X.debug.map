Microchip MPLAB XC8 Compiler V2.10 ()

Linker command line:

--edf=C:\Program Files (x86)\Microchip\xc8\v2.10\pic\dat\en_msgs.txt -cs \
  -h+dist/Mini_board_config/debug\Laboratoire5Debug_VD.X.debug.sym \
  --cmf=dist/Mini_board_config/debug\Laboratoire5Debug_VD.X.debug.cmf -z \
  -Q18F45K20 -oC:\Users\Vincent\AppData\Local\Temp\s3o0.2 \
  --defsym=__MPLAB_BUILD=1 \
  -Mdist/Mini_board_config/debug/Laboratoire5Debug_VD.X.debug.map -E1 \
  -ver=XC8 -ASTACK=0F4h-05EEh -pstack=STACK -ACODE=00h-07D3Fh \
  -ACONST=00h-07D3Fh -ASMALLCONST=0600h-06FFhx119,07D00h-07D3Fh \
  -AMEDIUMCONST=0600h-07D3Fh -ACOMRAM=01h-05Fh -AABS1=00h-05EEh \
  -ABIGRAM=01h-05EEh -ARAM=060h-0FFh,0100h-01FFhx4,0500h-05EEh \
  -ABANK0=060h-0FFh -ABANK1=0100h-01FFh -ABANK2=0200h-02FFh \
  -ABANK3=0300h-03FFh -ABANK4=0400h-04FFh -ABANK5=0500h-05EEh \
  -ASFR=0F60h-0F9Bh,0F9Dh-0FD3h,0FD5h-0FDAh,0FE0h-0FE2h,0FE8h-0FEAh,0FF0h-0FFBh \
  -preset_vec=00h,intcode=08h,intcodelo,powerup,init -pramtop=0600h \
  -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST -pconst=CONST \
  -AFARRAM=00h-00h -ACONFIG=0300000h-030000Dh -pconfig=CONFIG \
  -AIDLOC=0200000h-0200007h -pidloc=IDLOC -AEEDATA=0F00000h-0F000FFh \
  -peeprom_data=EEDATA \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE -prparam=COMRAM \
  C:\Users\Vincent\AppData\Local\Temp\s3o0.o \
  dist/Mini_board_config/debug\Laboratoire5Debug_VD.X.debug.o 

Object code version is 3.11

Machine type is 18F45K20

Call graph: (short form)




                Name                               Link     Load   Length Selector   Space Scale
C:\Users\Vincent\AppData\Local\Temp\s3o0.o
                init                                 2A       2A        4        4       0
                reset_vec                             0        0        4        0       0
                idloc                            200000   200000        8   200000       0
                config                           300000   300000        E   300000       0
dist/Mini_board_config/debug\Laboratoire5Debug_VD.X.debug.o
                intcode                               8        8       22        4       0
                temp                                 57       57        1        1       1
                smallconst                          600      600       16      300       0
                text30                             1290     1290        6      30B       0
                text29                             114E     114E       38      30B       0
                text28                             1248     1248       14      30B       0
                text27                             1288     1288        8      30B       0
                text26                              E6A      E6A       62      30B       0
                text25                              DA0      DA0       66      30B       0
                text24                             1186     1186       2E      30B       0
                text23                             1080     1080       4C      30B       0
                text22                              B78      B78       9C      30B       0
                text21                             10CC     10CC       48      30B       0
                text20                             126A     126A        E      30B       0
                text19                              F2A      F2A       5A      30B       0
                text18                             11DC     11DC       28      30B       0
                text17                             1280     1280        8      30B       0
                text16                              A08      A08       C0      30B       0
                text15                              948      948       C0      30B       0
                text14                             122A     122A       1E      30B       0
                text13                             125C     125C        E      30B       0
                text12                              FDA      FDA       54      30B       0
                text11                             1278     1278        8      30B       0
                text10                              ECC      ECC       5E      30B       0
                text9                               E06      E06       64      30B       0
                text8                              11B4     11B4       28      30B       0
                text7                               AC8      AC8       B0      30B       0
                text6                              1204     1204       26      30B       0
                text5                               D36      D36       6A      30B       0
                text4                              102E     102E       52      30B       0
                text3                              1114     1114       3A      30B       0
                text2                               616      616      256      30B       0
                text1                               CA8      CA8       8E      30B       0
                text0                               86C      86C       DC      30B       0
                cstackCOMRAM                          1        1       3D        1       1
                dataBANK0                            60       60       94       60       1
                dataCOMRAM                           53       53        4        1       1
                bssCOMRAM                            3E       3E       15        1       1
                cinit                               F84      F84       56      30B       0
                idataBANK0                          C14      C14       94      30B       0
                idataCOMRAM                        1296     1296        4      30B       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                intcode                               8        8       22         0
                init                                 2A       2A        4         0
                reset_vec                             0        0        4         0
                text30                             1290     1290        6         0
                text29                             114E     114E       38         0
                text28                             1248     1248       14         0
                text27                             1288     1288        8         0
                text26                              E6A      E6A       62         0
                text25                              DA0      DA0       66         0
                text24                             1186     1186       2E         0
                text23                             1080     1080       4C         0
                text22                              B78      B78       9C         0
                text21                             10CC     10CC       48         0
                text20                             126A     126A        E         0
                text19                              F2A      F2A       5A         0
                text18                             11DC     11DC       28         0
                text17                             1280     1280        8         0
                text16                              A08      A08       C0         0
                text15                              948      948       C0         0
                text14                             122A     122A       1E         0
                text13                             125C     125C        E         0
                text12                              FDA      FDA       54         0
                text11                             1278     1278        8         0
                text10                              ECC      ECC       5E         0
                text9                               E06      E06       64         0
                text8                              11B4     11B4       28         0
                text7                               AC8      AC8       B0         0
                text6                              1204     1204       26         0
                text5                               D36      D36       6A         0
                text4                              102E     102E       52         0
                text3                              1114     1114       3A         0
                text2                               616      616      256         0
                text1                               CA8      CA8       8E         0
                text0                               86C      86C       DC         0
                cinit                               F84      F84       56         0
                idataBANK0                          C14      C14       94         0
                idataCOMRAM                        1296     1296        4         0

        CLASS   CONST          

        CLASS   SMALLCONST     
                smallconst                          600      600       16         0

        CLASS   MEDIUMCONST    

        CLASS   COMRAM         
                temp                                 57       57        1         1
                cstackCOMRAM                          1        1       3D         1
                dataCOMRAM                           53       53        4         1
                bssCOMRAM                            3E       3E       15         1

        CLASS   ABS1           

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   BANK0          
                dataBANK0                            60       60       94         1

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   BANK4          

        CLASS   BANK5          

        CLASS   SFR            

        CLASS   FARRAM         

        CLASS   CONFIG         
                config                           300000   300000        E         0

        CLASS   IDLOC          
                idloc                            200000   200000        8         0

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                reset_vec                      000000  000004  000004         0       0  CODE    
                cstackCOMRAM                   000001  000057  000058         1       1  COMRAM  
                intcode                        000008  000026  00002E         4       0  CODE    
                dataBANK0                      000060  000094  0000F4        60       1  BANK0   
                smallconst                     000600  000016  000616       300       0  SMALLCON
                text2                          000616  000C84  00129A       30B       0  CODE    
                idloc                          200000  000008  200008    200000       0  IDLOC   
                config                         300000  00000E  30000E    300000       0  CONFIG  


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0000F4-0000FF                C
        BANK1            000100-0001FF              100
        BANK2            000200-0002FF              100
        BANK3            000300-0003FF              100
        BANK4            000400-0004FF              100
        BANK5            000500-0005EE               EF
        BIGRAM           000058-00005F                8
                         0000F4-0005EE              4FB
        CODE             000004-000007                4
                         00002E-0005FF              5D2
                         00129A-007D3F             6AA6
        COMRAM           000058-00005F                8
        CONST            000004-000007                4
                         00002E-0005FF              5D2
                         00129A-007D3F             6AA6
        EEDATA           F00000-F000FF              100
        MEDIUMCONST      00129A-007D3F             6AA6
        RAM              0000F4-0005EE              100
        SFR              000F60-000F9B               3C
                         000F9D-000FD3               37
                         000FD5-000FDA                6
                         000FE0-000FE2                3
                         000FE8-000FEA                3
                         000FF0-000FFB                C
        SMALLCONST       00129A-007D3F              100
        STACK            0000F4-0005EE              4FB

                                  Symbol Table

?___awmod                     cstackCOMRAM 00000F
?___lmul                      cstackCOMRAM 000001
?___wmul                      cstackCOMRAM 000001
?_rand                        cstackCOMRAM 00000D
_ADCON0bits                   (abs)        000FC2
_ADCON1                       (abs)        000FC1
_ADCON2bits                   (abs)        000FC0
_ADRESH                       (abs)        000FC4
_ANSEL                        (abs)        000F7E
_ANSELH                       (abs)        000F7F
_ANSELbits                    (abs)        000F7E
_BAUDCONbits                  (abs)        000FB8
_INTCONbits                   (abs)        000FF2
_PORTAbits                    (abs)        000F80
_PORTBbits                    (abs)        000F81
_PORTD                        (abs)        000F83
_RCIF                         (abs)        007CF5
_RCREG                        (abs)        000FAE
_RCSTAbits                    (abs)        000FAB
_SPBRG                        (abs)        000FAF
_SPBRGH                       (abs)        000FB0
_T0CONbits                    (abs)        000FD5
_T1CONbits                    (abs)        000FCD
_TMR0                         (abs)        000FD6
_TMR1                         (abs)        000FCE
_TRISA                        (abs)        000F92
_TRISB                        (abs)        000F93
_TRISCbits                    (abs)        000F94
_TRISD                        (abs)        000F95
_TXREG                        (abs)        000FAD
_TXSTAbits                    (abs)        000FAC
__CFG_BOREN$SBORDIS           (abs)        000000
__CFG_BORV$18                 (abs)        000000
__CFG_CCP2MX$PORTC            (abs)        000000
__CFG_CP0$OFF                 (abs)        000000
__CFG_CP1$OFF                 (abs)        000000
__CFG_CP2$OFF                 (abs)        000000
__CFG_CP3$OFF                 (abs)        000000
__CFG_CPB$OFF                 (abs)        000000
__CFG_CPD$OFF                 (abs)        000000
__CFG_EBTR0$OFF               (abs)        000000
__CFG_EBTR1$OFF               (abs)        000000
__CFG_EBTR2$OFF               (abs)        000000
__CFG_EBTR3$OFF               (abs)        000000
__CFG_EBTRB$OFF               (abs)        000000
__CFG_FCMEN$OFF               (abs)        000000
__CFG_FOSC$INTIO67            (abs)        000000
__CFG_HFOFST$ON               (abs)        000000
__CFG_IESO$OFF                (abs)        000000
__CFG_LPT1OSC$OFF             (abs)        000000
__CFG_LVP$OFF                 (abs)        000000
__CFG_MCLRE$ON                (abs)        000000
__CFG_PBADEN$ON               (abs)        000000
__CFG_PWRT$OFF                (abs)        000000
__CFG_STVREN$ON               (abs)        000000
__CFG_WDTEN$OFF               (abs)        000000
__CFG_WDTPS$32768             (abs)        000000
__CFG_WRT0$OFF                (abs)        000000
__CFG_WRT1$OFF                (abs)        000000
__CFG_WRT2$OFF                (abs)        000000
__CFG_WRT3$OFF                (abs)        000000
__CFG_WRTB$OFF                (abs)        000000
__CFG_WRTC$OFF                (abs)        000000
__CFG_WRTD$OFF                (abs)        000000
__CFG_XINST$OFF               (abs)        000000
__HRAM                        (abs)        000000
__Habs1                       abs1         000000
__Hbank0                      bank0        000000
__Hbank1                      bank1        000000
__Hbank2                      bank2        000000
__Hbank3                      bank3        000000
__Hbank4                      bank4        000000
__Hbank5                      bank5        000000
__Hbigbss                     bigbss       000000
__Hbigdata                    bigdata      000000
__Hbigram                     bigram       000000
__Hbss                        bss          000000
__HbssCOMRAM                  bssCOMRAM    000000
__Hcinit                      cinit        000000
__Hclrtext                    clrtext      000000
__Hcomram                     comram       000000
__Hconfig                     config       30000E
__Hconst                      const        000000
__HcstackCOMRAM               cstackCOMRAM 000000
__Hdata                       data         000000
__HdataBANK0                  dataBANK0    000000
__HdataCOMRAM                 dataCOMRAM   000000
__Heeprom_data                eeprom_data  000000
__Hfarbss                     farbss       000000
__Hfardata                    fardata      000000
__Hibigdata                   ibigdata     000000
__Hidata                      idata        000000
__HidataBANK0                 idataBANK0   000000
__HidataCOMRAM                idataCOMRAM  000000
__Hidloc                      idloc        200008
__Hifardata                   ifardata     000000
__Hinit                       init         00002E
__Hintcode                    intcode      00002A
__Hintcode_body               intcode_body 000000
__Hintcodelo                  intcodelo    00002A
__Hintentry                   intentry     000000
__Hintret                     intret       000000
__Hintsave_regs               intsave_regs 000000
__Hirdata                     irdata       000000
__Hmediumconst                mediumconst  000000
__HnvFARRAM                   nvFARRAM     000000
__Hnvbit                      nvbit        000000
__Hnvrram                     nvrram       000000
__Hparam                      rparam       000000
__Hpowerup                    powerup      00002A
__Hram                        ram          000000
__Hramtop                     ramtop       000600
__Hrbit                       rbit         000000
__Hrbss                       rbss         000000
__Hrdata                      rdata        000000
__Hreset_vec                  reset_vec    000004
__Hrparam                     rparam       000000
__Hsfr                        sfr          000000
__Hsmallconst                 smallconst   000616
__Hspace_0                    (abs)        30000E
__Hspace_1                    (abs)        0000F4
__Hspace_2                    (abs)        000000
__Hstack                      stack        000000
__Hstruct                     struct       000000
__Htemp                       temp         000058
__Htext                       text         000000
__Htext0                      text0        000000
__Htext1                      text1        000000
__Htext10                     text10       000000
__Htext11                     text11       000000
__Htext12                     text12       000000
__Htext13                     text13       000000
__Htext14                     text14       000000
__Htext15                     text15       000000
__Htext16                     text16       000000
__Htext17                     text17       000000
__Htext18                     text18       000000
__Htext19                     text19       000000
__Htext2                      text2        000000
__Htext20                     text20       000000
__Htext21                     text21       000000
__Htext22                     text22       000000
__Htext23                     text23       000000
__Htext24                     text24       000000
__Htext25                     text25       000000
__Htext26                     text26       000000
__Htext27                     text27       000000
__Htext28                     text28       000000
__Htext29                     text29       000000
__Htext3                      text3        000000
__Htext30                     text30       000000
__Htext4                      text4        000000
__Htext5                      text5        000000
__Htext6                      text6        000000
__Htext7                      text7        000000
__Htext8                      text8        000000
__Htext9                      text9        000000
__LRAM                        (abs)        000001
__Labs1                       abs1         000000
__Lbank0                      bank0        000000
__Lbank1                      bank1        000000
__Lbank2                      bank2        000000
__Lbank3                      bank3        000000
__Lbank4                      bank4        000000
__Lbank5                      bank5        000000
__Lbigbss                     bigbss       000000
__Lbigdata                    bigdata      000000
__Lbigram                     bigram       000000
__Lbss                        bss          000000
__LbssCOMRAM                  bssCOMRAM    000000
__Lcinit                      cinit        000000
__Lclrtext                    clrtext      000000
__Lcomram                     comram       000000
__Lconfig                     config       300000
__Lconst                      const        000000
__LcstackCOMRAM               cstackCOMRAM 000000
__Ldata                       data         000000
__LdataBANK0                  dataBANK0    000000
__LdataCOMRAM                 dataCOMRAM   000000
__Leeprom_data                eeprom_data  000000
__Lfarbss                     farbss       000000
__Lfardata                    fardata      000000
__Libigdata                   ibigdata     000000
__Lidata                      idata        000000
__LidataBANK0                 idataBANK0   000000
__LidataCOMRAM                idataCOMRAM  000000
__Lidloc                      idloc        200000
__Lifardata                   ifardata     000000
__Linit                       init         00002A
__Lintcode                    intcode      000008
__Lintcode_body               intcode_body 000000
__Lintcodelo                  intcodelo    00002A
__Lintentry                   intentry     000000
__Lintret                     intret       000000
__Lintsave_regs               intsave_regs 000000
__Lirdata                     irdata       000000
__Lmediumconst                mediumconst  000000
__LnvFARRAM                   nvFARRAM     000000
__Lnvbit                      nvbit        000000
__Lnvrram                     nvrram       000000
__Lparam                      rparam       000000
__Lpowerup                    powerup      00002A
__Lram                        ram          000000
__Lramtop                     ramtop       000600
__Lrbit                       rbit         000000
__Lrbss                       rbss         000000
__Lrdata                      rdata        000000
__Lreset_vec                  reset_vec    000000
__Lrparam                     rparam       000000
__Lsfr                        sfr          000000
__Lsmallconst                 smallconst   000600
__Lspace_0                    (abs)        000000
__Lspace_1                    (abs)        000000
__Lspace_2                    (abs)        000000
__Lstack                      stack        000000
__Lstruct                     struct       000000
__Ltemp                       temp         000057
__Ltext                       text         000000
__Ltext0                      text0        000000
__Ltext1                      text1        000000
__Ltext10                     text10       000000
__Ltext11                     text11       000000
__Ltext12                     text12       000000
__Ltext13                     text13       000000
__Ltext14                     text14       000000
__Ltext15                     text15       000000
__Ltext16                     text16       000000
__Ltext17                     text17       000000
__Ltext18                     text18       000000
__Ltext19                     text19       000000
__Ltext2                      text2        000000
__Ltext20                     text20       000000
__Ltext21                     text21       000000
__Ltext22                     text22       000000
__Ltext23                     text23       000000
__Ltext24                     text24       000000
__Ltext25                     text25       000000
__Ltext26                     text26       000000
__Ltext27                     text27       000000
__Ltext28                     text28       000000
__Ltext29                     text29       000000
__Ltext3                      text3        000000
__Ltext30                     text30       000000
__Ltext4                      text4        000000
__Ltext5                      text5        000000
__Ltext6                      text6        000000
__Ltext7                      text7        000000
__Ltext8                      text8        000000
__Ltext9                      text9        000000
__S0                          (abs)        30000E
__S1                          (abs)        0000F4
__S2                          (abs)        000000
___awmod                      text7        000AC8
___awmod@counter              cstackCOMRAM 000013
___awmod@dividend             cstackCOMRAM 00000F
___awmod@divisor              cstackCOMRAM 000011
___awmod@sign                 cstackCOMRAM 000014
___inthi_sp                   stack        000000
___intlo_sp                   stack        000000
___lmul                       text5        000D36
___lmul@multiplicand          cstackCOMRAM 000005
___lmul@multiplier            cstackCOMRAM 000001
___lmul@product               cstackCOMRAM 000009
___param_bank                 (abs)        000000
___rparam_used                (abs)        000001
___sp                         stack        000000
___wmul                       text6        001204
___wmul@multiplicand          cstackCOMRAM 000003
___wmul@multiplier            cstackCOMRAM 000001
___wmul@product               cstackCOMRAM 000005
__accesstop                   (abs)        000060
__activetblptr                (abs)        000003
__end_of___awmod              text7        000B78
__end_of___lmul               text5        000DA0
__end_of___wmul               text6        00122A
__end_of__initialization      cinit        000FD0
__end_of_afficheAliens        text21       001114
__end_of_affichePerdu         text19       000F84
__end_of_deplace              text16       000AC8
__end_of_feu                  text15       000A08
__end_of_getAnalog            text18       001204
__end_of_high_isr             intcode      00002A
__end_of_init_serie           text14       001248
__end_of_initialisation       text12       00102E
__end_of_lcd_busy             text29       001186
__end_of_lcd_curseurHome      text11       001280
__end_of_lcd_ecrireDonnees    text28       00125C
__end_of_lcd_ecritChar        text23       0010CC
__end_of_lcd_effaceAffichage  text20       001278
__end_of_lcd_gotoXY           text25       000E06
__end_of_lcd_init             text8        0011DC
__end_of_lcd_initCGRam        text10       000F2A
__end_of_lcd_lireDonnees      text30       001296
__end_of_lcd_montreCurseur    text17       001288
__end_of_lcd_putMessage       text22       000C14
__end_of_lcd_resetSequence    text9        000E6A
__end_of_lcd_strobeEnableBit  text27       001290
__end_of_lcd_wrCom            text26       000ECC
__end_of_lcd_wrData           text24       0011B4
__end_of_main                 text0        000948
__end_of_nouveauxAliens       text2        00086C
__end_of_perdu                text1        000D36
__end_of_rand                 text4        001080
__end_of_srand                text13       00126A
__end_of_strcpy               text3        00114E
__initialization              cinit        000F84
__mediumconst                 mediumconst  000000
__pbssCOMRAM                  bssCOMRAM    00003E
__pcinit                      cinit        000F84
__pcstackCOMRAM               cstackCOMRAM 000001
__pdataBANK0                  dataBANK0    000060
__pdataCOMRAM                 dataCOMRAM   000053
__pidataBANK0                 idataBANK0   000C14
__pidataCOMRAM                idataCOMRAM  001296
__pintcode                    intcode      000008
__psmallconst                 smallconst   000600
__ptext0                      text0        00086C
__ptext1                      text1        000CA8
__ptext10                     text10       000ECC
__ptext11                     text11       001278
__ptext12                     text12       000FDA
__ptext13                     text13       00125C
__ptext14                     text14       00122A
__ptext15                     text15       000948
__ptext16                     text16       000A08
__ptext17                     text17       001280
__ptext18                     text18       0011DC
__ptext19                     text19       000F2A
__ptext2                      text2        000616
__ptext20                     text20       00126A
__ptext21                     text21       0010CC
__ptext22                     text22       000B78
__ptext23                     text23       001080
__ptext24                     text24       001186
__ptext25                     text25       000DA0
__ptext26                     text26       000E6A
__ptext27                     text27       001288
__ptext28                     text28       001248
__ptext29                     text29       00114E
__ptext3                      text3        001114
__ptext30                     text30       001290
__ptext4                      text4        00102E
__ptext5                      text5        000D36
__ptext6                      text6        001204
__ptext7                      text7        000AC8
__ptext8                      text8        0011B4
__ptext9                      text9        000E06
__ramtop                      ramtop       000600
__size_of___awmod             (abs)        000000
__size_of___lmul              (abs)        000000
__size_of___wmul              (abs)        000000
__size_of_afficheAliens       (abs)        000000
__size_of_affichePerdu        (abs)        000000
__size_of_deplace             (abs)        000000
__size_of_feu                 (abs)        000000
__size_of_getAnalog           (abs)        000000
__size_of_high_isr            (abs)        000000
__size_of_init_serie          (abs)        000000
__size_of_initialisation      (abs)        000000
__size_of_lcd_busy            (abs)        000000
__size_of_lcd_curseurHome     (abs)        000000
__size_of_lcd_ecrireDonnees   (abs)        000000
__size_of_lcd_ecritChar       (abs)        000000
__size_of_lcd_effaceAffichage (abs)        000000
__size_of_lcd_gotoXY          (abs)        000000
__size_of_lcd_init            (abs)        000000
__size_of_lcd_initCGRam       (abs)        000000
__size_of_lcd_lireDonnees     (abs)        000000
__size_of_lcd_montreCurseur   (abs)        000000
__size_of_lcd_putMessage      (abs)        000000
__size_of_lcd_resetSequence   (abs)        000000
__size_of_lcd_strobeEnableBit (abs)        000000
__size_of_lcd_wrCom           (abs)        000000
__size_of_lcd_wrData          (abs)        000000
__size_of_main                (abs)        000000
__size_of_nouveauxAliens      (abs)        000000
__size_of_perdu               (abs)        000000
__size_of_rand                (abs)        000000
__size_of_srand               (abs)        000000
__size_of_strcpy              (abs)        000000
__smallconst                  smallconst   000600
_afficheAliens                text21       0010CC
_affichePerdu                 text19       000F2A
_deplace                      text16       000A08
_feu                          text15       000948
_getAnalog                    text18       0011DC
_high_isr                     intcode      000008
_init_serie                   text14       00122A
_initialisation               text12       000FDA
_lcd_busy                     text29       00114E
_lcd_curseurHome              text11       001278
_lcd_ecrireDonnees            text28       001248
_lcd_ecritChar                text23       001080
_lcd_effaceAffichage          text20       00126A
_lcd_gotoXY                   text25       000DA0
_lcd_init                     text8        0011B4
_lcd_initCGRam                text10       000ECC
_lcd_lireDonnees              text30       001290
_lcd_montreCurseur            text17       001280
_lcd_putMessage               text22       000B78
_lcd_resetSequence            text9        000E06
_lcd_strobeEnableBit          text27       001288
_lcd_wrCom                    text26       000E6A
_lcd_wrData                   text24       001186
_m_aliens                     dataBANK0    0000A0
_m_tempsDAfficher             bssCOMRAM    000052
_main                         text0        00086C
_matCGRAM                     dataBANK0    000060
_nouveauxAliens               text2        000616
_perdu                        text1        000CA8
_rand                         text4        00102E
_randx                        dataCOMRAM   000053
_srand                        text13       00125C
_strcpy                       text3        001114
afficheAliens@i               cstackCOMRAM 000011
affichePerdu@pts              cstackCOMRAM 00000F
btemp                         temp         000057
deplace@analog                cstackCOMRAM 000009
deplace@x                     cstackCOMRAM 000006
end_of_initialization         cinit        000FD0
feu@pts                       cstackCOMRAM 000001
feu@x                         cstackCOMRAM 000004
getAnalog@canal               cstackCOMRAM 000002
int$flags                     temp         000057
intlevel0                     text         000000
intlevel1                     text         000000
intlevel2                     text         000000
intlevel3                     text         000000
lcd_busy@adresse              cstackCOMRAM 000002
lcd_ecrireDonnees@donnee      cstackCOMRAM 000002
lcd_ecritChar@car             cstackCOMRAM 000004
lcd_ecritChar@posRam          cstackCOMRAM 000005
lcd_gotoXY@x                  cstackCOMRAM 000005
lcd_gotoXY@y                  cstackCOMRAM 000004
lcd_initCGRam@i               cstackCOMRAM 000006
lcd_initCGRam@j               cstackCOMRAM 000007
lcd_putMessage@chaine         cstackCOMRAM 000006
lcd_putMessage@j              cstackCOMRAM 00000E
lcd_wrCom@commande            cstackCOMRAM 000003
lcd_wrData@caractere          cstackCOMRAM 000003
main@n                        cstackCOMRAM 00003A
main@points                   cstackCOMRAM 00003B
main@posX                     cstackCOMRAM 00003D
nouveauxAliens@counter        cstackCOMRAM 00002E
nouveauxAliens@i              cstackCOMRAM 000035
nouveauxAliens@j              cstackCOMRAM 000031
nouveauxAliens@k              cstackCOMRAM 00002C
nouveauxAliens@k_479          cstackCOMRAM 000033
nouveauxAliens@random         cstackCOMRAM 000037
nouveauxAliens@v              cstackCOMRAM 00002F
nouveauxAliens@verifie        cstackCOMRAM 000016
perdu@counter                 cstackCOMRAM 000002
perdu@i                       cstackCOMRAM 000004
srand@x                       cstackCOMRAM 000001
stackhi                       (abs)        0005EE
stacklo                       (abs)        0000F4
start                         init         00002A
start_initialization          cinit        000F84
strcpy@cp                     cstackCOMRAM 00000B
strcpy@from                   cstackCOMRAM 000009
strcpy@to                     cstackCOMRAM 000007
ttemp5                        temp         000058
ttemp6                        temp         00005B
ttemp7                        temp         00005F
wtemp8                        temp         000058


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 75 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  points          2   58[COMRAM] PTR unsigned char 
		 -> NULL(0), 
  posX            1   60[COMRAM] unsigned char 
  n               1   57[COMRAM] unsigned char 
  verifie         1    0        unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         5       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels required when called:    7
 This function calls:
		_afficheAliens
		_affichePerdu
		_deplace
		_feu
		_init_serie
		_initialisation
		_lcd_effaceAffichage
		_lcd_gotoXY
		_lcd_init
		_nouveauxAliens
		_perdu
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _perdu *****************
 Defined at:
		line 310 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               2    3[COMRAM] int 
  counter         2    1[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0
      Totals:         5       0       0       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _nouveauxAliens *****************
 Defined at:
		line 141 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  k               2   50[COMRAM] int 
  j               2   48[COMRAM] int 
  v               2   46[COMRAM] int 
  i               2   52[COMRAM] int 
  verifie        20   21[COMRAM] unsigned char [20]
  k               2   43[COMRAM] int 
  cAlien          2    0        int 
  random          1   54[COMRAM] unsigned char 
  counter         1   45[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:        34       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0
      Totals:        35       0       0       0       0       0       0
Total ram usage:       35 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___awmod
		___wmul
		_rand
		_strcpy
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _strcpy *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strcpy.c"
 Parameters:    Size  Location     Type
  to              2    6[COMRAM] PTR unsigned char 
		 -> m_aliens(84), 
  from            2    8[COMRAM] PTR const unsigned char 
		 -> m_aliens(84), 
 Auto vars:     Size  Location     Type
  cp              2   10[COMRAM] PTR unsigned char 
		 -> m_aliens(84), 
 Return value:  Size  Location     Type
                  2    6[COMRAM] PTR unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_nouveauxAliens
 This function uses a non-reentrant model


 *************** function _rand *****************
 Defined at:
		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2   12[COMRAM] int 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		___lmul
 This function is called by:
		_nouveauxAliens
 This function uses a non-reentrant model


 *************** function ___lmul *****************
 Defined at:
		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul32.c"
 Parameters:    Size  Location     Type
  multiplier      4    0[COMRAM] unsigned long 
  multiplicand    4    4[COMRAM] unsigned long 
 Auto vars:     Size  Location     Type
  product         4    8[COMRAM] unsigned long 
 Return value:  Size  Location     Type
                  4    0[COMRAM] unsigned long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         8       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:        12       0       0       0       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_rand
 This function uses a non-reentrant model


 *************** function ___wmul *****************
 Defined at:
		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
 Parameters:    Size  Location     Type
  multiplier      2    0[COMRAM] unsigned int 
  multiplicand    2    2[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  product         2    4[COMRAM] unsigned int 
 Return value:  Size  Location     Type
                  2    0[COMRAM] unsigned int 
 Registers used:
		wreg, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_nouveauxAliens
 This function uses a non-reentrant model


 *************** function ___awmod *****************
 Defined at:
		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
 Parameters:    Size  Location     Type
  dividend        2   14[COMRAM] int 
  divisor         2   16[COMRAM] int 
 Auto vars:     Size  Location     Type
  sign            1   19[COMRAM] unsigned char 
  counter         1   18[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2   14[COMRAM] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_nouveauxAliens
 This function uses a non-reentrant model


 *************** function _lcd_init *****************
 Defined at:
		line 258 in file "Lcd4Lignes.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_lcd_initCGRam
		_lcd_resetSequence
		_lcd_wrCom
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _lcd_resetSequence *****************
 Defined at:
		line 221 in file "Lcd4Lignes.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_lcd_ecrireDonnees
		_lcd_strobeEnableBit
 This function is called by:
		_lcd_init
 This function uses a non-reentrant model


 *************** function _lcd_initCGRam *****************
 Defined at:
		line 417 in file "Lcd4Lignes.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  j               1    6[COMRAM] unsigned char 
  i               1    5[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_lcd_curseurHome
		_lcd_wrCom
		_lcd_wrData
 This function is called by:
		_lcd_init
 This function uses a non-reentrant model


 *************** function _lcd_curseurHome *****************
 Defined at:
		line 288 in file "Lcd4Lignes.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_lcd_wrCom
 This function is called by:
		_lcd_initCGRam
 This function uses a non-reentrant model


 *************** function _initialisation *****************
 Defined at:
		line 369 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_srand
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _srand *****************
 Defined at:
		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
 Parameters:    Size  Location     Type
  x               2    0[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_initialisation
 This function uses a non-reentrant model


 *************** function _init_serie *****************
 Defined at:
		line 29 in file "serie.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _feu *****************
 Defined at:
		line 280 in file "main.c"
 Parameters:    Size  Location     Type
  x               1    wreg     unsigned char 
  pts             2    0[COMRAM] PTR int 
		 -> main@points(2), 
 Auto vars:     Size  Location     Type
  x               1    3[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _deplace *****************
 Defined at:
		line 243 in file "main.c"
 Parameters:    Size  Location     Type
  x               2    5[COMRAM] PTR unsigned char 
		 -> main@posX(1), 
 Auto vars:     Size  Location     Type
  analog          1    8[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_getAnalog
		_lcd_gotoXY
		_lcd_montreCurseur
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _lcd_montreCurseur *****************
 Defined at:
		line 412 in file "Lcd4Lignes.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_lcd_wrCom
 This function is called by:
		_deplace
 This function uses a non-reentrant model


 *************** function _getAnalog *****************
 Defined at:
		line 352 in file "main.c"
 Parameters:    Size  Location     Type
  canal           1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  canal           1    1[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_deplace
 This function uses a non-reentrant model


 *************** function _affichePerdu *****************
 Defined at:
		line 337 in file "main.c"
 Parameters:    Size  Location     Type
  pts             2   14[COMRAM] int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          3       0       0       0       0       0       0
      Totals:         5       0       0       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_lcd_effaceAffichage
		_lcd_gotoXY
		_lcd_putMessage
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _lcd_effaceAffichage *****************
 Defined at:
		line 276 in file "Lcd4Lignes.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_lcd_wrCom
 This function is called by:
		_main
		_affichePerdu
 This function uses a non-reentrant model


 *************** function _afficheAliens *****************
 Defined at:
		line 225 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               1   16[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_lcd_gotoXY
		_lcd_putMessage
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _lcd_putMessage *****************
 Defined at:
		line 387 in file "Lcd4Lignes.c"
 Parameters:    Size  Location     Type
  chaine          3    5[COMRAM] PTR const unsigned char 
		 -> ROM(32767), STR_1(19), m_aliens(84), 
 Auto vars:     Size  Location     Type
  j               1   13[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         3       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          5       0       0       0       0       0       0
      Totals:         9       0       0       0       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_lcd_ecritChar
 This function is called by:
		_afficheAliens
		_affichePerdu
 This function uses a non-reentrant model


 *************** function _lcd_ecritChar *****************
 Defined at:
		line 359 in file "Lcd4Lignes.c"
 Parameters:    Size  Location     Type
  car             1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  car             1    3[COMRAM] unsigned char 
  posRam          1    4[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_lcd_wrCom
		_lcd_wrData
 This function is called by:
		_lcd_putMessage
 This function uses a non-reentrant model


 *************** function _lcd_wrData *****************
 Defined at:
		line 188 in file "Lcd4Lignes.c"
 Parameters:    Size  Location     Type
  caractere       1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  caractere       1    2[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_lcd_busy
		_lcd_ecrireDonnees
		_lcd_strobeEnableBit
 This function is called by:
		_lcd_ecritChar
		_lcd_initCGRam
		_lcd_effaceChar
 This function uses a non-reentrant model


 *************** function _lcd_gotoXY *****************
 Defined at:
		line 314 in file "Lcd4Lignes.c"
 Parameters:    Size  Location     Type
  x               1    wreg     unsigned char 
  y               1    3[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  x               1    4[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         1       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_lcd_wrCom
 This function is called by:
		_main
		_afficheAliens
		_deplace
		_affichePerdu
		_lcd_effaceLigne
 This function uses a non-reentrant model


 *************** function _lcd_wrCom *****************
 Defined at:
		line 156 in file "Lcd4Lignes.c"
 Parameters:    Size  Location     Type
  commande        1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  commande        1    2[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_lcd_busy
		_lcd_ecrireDonnees
		_lcd_strobeEnableBit
 This function is called by:
		_lcd_init
		_lcd_effaceAffichage
		_lcd_curseurHome
		_lcd_gotoXY
		_lcd_ecritChar
		_lcd_montreCurseur
		_lcd_initCGRam
		_lcd_cacheCurseur
 This function uses a non-reentrant model


 *************** function _lcd_strobeEnableBit *****************
 Defined at:
		line 431 in file "Lcd4Lignes.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_lcd_wrCom
		_lcd_wrData
		_lcd_resetSequence
 This function uses a non-reentrant model


 *************** function _lcd_ecrireDonnees *****************
 Defined at:
		line 107 in file "Lcd4Lignes.c"
 Parameters:    Size  Location     Type
  donnee          1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  donnee          1    1[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_lcd_wrCom
		_lcd_wrData
		_lcd_resetSequence
 This function uses a non-reentrant model


 *************** function _lcd_busy *****************
 Defined at:
		line 124 in file "Lcd4Lignes.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  adresse         1    1[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_lcd_lireDonnees
 This function is called by:
		_lcd_wrCom
		_lcd_wrData
 This function uses a non-reentrant model


 *************** function _lcd_lireDonnees *****************
 Defined at:
		line 93 in file "Lcd4Lignes.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_lcd_busy
 This function uses a non-reentrant model


 *************** function _high_isr *****************
 Defined at:
		line 415 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		Interrupt level 2
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c
		___wmul        		CODE           	1204	0000	39

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c estimated size: 39

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul32.c
		___lmul        		CODE           	0D36	0000	107

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul32.c estimated size: 107

Lcd4Lignes.c
		_lcd_ecrireDonnees		CODE           	1248	0000	21
		_lcd_busy      		CODE           	114E	0000	57
		_lcd_curseurHome		CODE           	1278	0000	9
		_lcd_initCGRam 		CODE           	0ECC	0000	95
		_lcd_effaceAffichage		CODE           	126A	0000	15
		_lcd_wrData    		CODE           	1186	0000	47
		_lcd_putMessage		CODE           	0B78	0000	157
		_lcd_resetSequence		CODE           	0E06	0000	101
		_lcd_lireDonnees		CODE           	1290	0000	7
		_lcd_gotoXY    		CODE           	0DA0	0000	103
		_lcd_wrCom     		CODE           	0E6A	0000	99
		_lcd_ecritChar 		CODE           	1080	0000	77
		_lcd_montreCurseur		CODE           	1280	0000	9
		_lcd_init      		CODE           	11B4	0000	41
		_lcd_strobeEnableBit		CODE           	1288	0000	9

Lcd4Lignes.c estimated size: 847

shared
		__initialization		CODE           	0F84	0000	77

shared estimated size: 77

serie.c
		_init_serie    		CODE           	122A	0000	31

serie.c estimated size: 31

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strcpy.c
		_strcpy        		CODE           	1114	0000	59

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strcpy.c estimated size: 59

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c
		___awmod       		CODE           	0AC8	0000	177

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c estimated size: 177

main.c
		_perdu         		CODE           	0CA8	0000	143
		_initialisation		CODE           	0FDA	0000	85
		_affichePerdu  		CODE           	0F2A	0000	91
		_afficheAliens 		CODE           	10CC	0000	73
		_main          		CODE           	086C	0000	221
		_nouveauxAliens		CODE           	0616	0000	599
		_feu           		CODE           	0948	0000	193
		_high_isr      		CODE           	0008	0000	35
		_getAnalog     		CODE           	11DC	0000	41
		_deplace       		CODE           	0A08	0000	193

main.c estimated size: 1674

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c
		_srand         		CODE           	125C	0000	15
		_rand          		CODE           	102E	0000	83

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c estimated size: 98

