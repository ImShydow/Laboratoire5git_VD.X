

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Nov 25 14:04:10 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    46                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    47                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    48  0000                     
    49                           ; Version 2.10
    50                           ; Generated 31/07/2019 GMT
    51                           ; 
    52                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC18F45K20 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83  0000                     
    84                           	psect	idataCOMRAM
    85  001296                     __pidataCOMRAM:
    86                           	opt callstack 0
    87                           
    88                           ;initializer for _randx
    89  001296  0001               	dw	1
    90  001298  0000               	dw	0
    91                           
    92                           	psect	idataBANK0
    93  000C14                     __pidataBANK0:
    94                           	opt callstack 0
    95                           
    96                           ;initializer for _matCGRAM
    97  000C14  08                 	db	8
    98  000C15  04                 	db	4
    99  000C16  04                 	db	4
   100  000C17  0A                 	db	10
   101  000C18  11                 	db	17
   102  000C19  1F                 	db	31
   103  000C1A  11                 	db	17
   104  000C1B  00                 	db	0
   105  000C1C  02                 	db	2
   106  000C1D  04                 	db	4
   107  000C1E  0E                 	db	14
   108  000C1F  11                 	db	17
   109  000C20  1F                 	db	31
   110  000C21  10                 	db	16
   111  000C22  0E                 	db	14
   112  000C23  00                 	db	0
   113  000C24  02                 	db	2
   114  000C25  04                 	db	4
   115  000C26  1F                 	db	31
   116  000C27  10                 	db	16
   117  000C28  1E                 	db	30
   118  000C29  10                 	db	16
   119  000C2A  1F                 	db	31
   120  000C2B  00                 	db	0
   121  000C2C  08                 	db	8
   122  000C2D  04                 	db	4
   123  000C2E  0E                 	db	14
   124  000C2F  11                 	db	17
   125  000C30  1F                 	db	31
   126  000C31  10                 	db	16
   127  000C32  0E                 	db	14
   128  000C33  00                 	db	0
   129  000C34  08                 	db	8
   130  000C35  04                 	db	4
   131  000C36  1F                 	db	31
   132  000C37  10                 	db	16
   133  000C38  1E                 	db	30
   134  000C39  10                 	db	16
   135  000C3A  1F                 	db	31
   136  000C3B  00                 	db	0
   137  000C3C  04                 	db	4
   138  000C3D  0A                 	db	10
   139  000C3E  0E                 	db	14
   140  000C3F  11                 	db	17
   141  000C40  1F                 	db	31
   142  000C41  10                 	db	16
   143  000C42  0E                 	db	14
   144  000C43  00                 	db	0
   145  000C44  08                 	db	8
   146  000C45  04                 	db	4
   147  000C46  0E                 	db	14
   148  000C47  01                 	db	1
   149  000C48  0F                 	db	15
   150  000C49  11                 	db	17
   151  000C4A  0F                 	db	15
   152  000C4B  00                 	db	0
   153  000C4C  04                 	db	4
   154  000C4D  0A                 	db	10
   155  000C4E  0E                 	db	14
   156  000C4F  01                 	db	1
   157  000C50  0F                 	db	15
   158  000C51  11                 	db	17
   159  000C52  0F                 	db	15
   160  000C53  00                 	db	0
   161                           
   162                           ;initializer for _m_aliens
   163  000C54  20                 	db	32
   164  000C55  20                 	db	32
   165  000C56  20                 	db	32
   166  000C57  20                 	db	32
   167  000C58  20                 	db	32
   168  000C59  20                 	db	32
   169  000C5A  2A                 	db	42
   170  000C5B  20                 	db	32
   171  000C5C  20                 	db	32
   172  000C5D  20                 	db	32
   173  000C5E  20                 	db	32
   174  000C5F  20                 	db	32
   175  000C60  20                 	db	32
   176  000C61  2A                 	db	42
   177  000C62  20                 	db	32
   178  000C63  20                 	db	32
   179  000C64  20                 	db	32
   180  000C65  20                 	db	32
   181  000C66  20                 	db	32
   182  000C67  20                 	db	32
   183  000C68  00                 	db	0
   184  000C69  20                 	db	32
   185  000C6A  20                 	db	32
   186  000C6B  20                 	db	32
   187  000C6C  20                 	db	32
   188  000C6D  20                 	db	32
   189  000C6E  20                 	db	32
   190  000C6F  20                 	db	32
   191  000C70  20                 	db	32
   192  000C71  20                 	db	32
   193  000C72  20                 	db	32
   194  000C73  20                 	db	32
   195  000C74  20                 	db	32
   196  000C75  20                 	db	32
   197  000C76  20                 	db	32
   198  000C77  20                 	db	32
   199  000C78  20                 	db	32
   200  000C79  20                 	db	32
   201  000C7A  20                 	db	32
   202  000C7B  20                 	db	32
   203  000C7C  20                 	db	32
   204  000C7D  00                 	db	0
   205  000C7E  20                 	db	32
   206  000C7F  20                 	db	32
   207  000C80  20                 	db	32
   208  000C81  20                 	db	32
   209  000C82  20                 	db	32
   210  000C83  20                 	db	32
   211  000C84  20                 	db	32
   212  000C85  20                 	db	32
   213  000C86  20                 	db	32
   214  000C87  20                 	db	32
   215  000C88  20                 	db	32
   216  000C89  20                 	db	32
   217  000C8A  20                 	db	32
   218  000C8B  20                 	db	32
   219  000C8C  20                 	db	32
   220  000C8D  20                 	db	32
   221  000C8E  20                 	db	32
   222  000C8F  20                 	db	32
   223  000C90  20                 	db	32
   224  000C91  20                 	db	32
   225  000C92  00                 	db	0
   226  000C93  20                 	db	32
   227  000C94  20                 	db	32
   228  000C95  20                 	db	32
   229  000C96  20                 	db	32
   230  000C97  20                 	db	32
   231  000C98  20                 	db	32
   232  000C99  20                 	db	32
   233  000C9A  20                 	db	32
   234  000C9B  20                 	db	32
   235  000C9C  20                 	db	32
   236  000C9D  20                 	db	32
   237  000C9E  20                 	db	32
   238  000C9F  20                 	db	32
   239  000CA0  20                 	db	32
   240  000CA1  20                 	db	32
   241  000CA2  20                 	db	32
   242  000CA3  20                 	db	32
   243  000CA4  20                 	db	32
   244  000CA5  20                 	db	32
   245  000CA6  20                 	db	32
   246  000CA7  00                 	db	0
   247  0000                     _TRISCbits	set	3988
   248  0000                     _PORTAbits	set	3968
   249  0000                     _PORTD	set	3971
   250  0000                     _ANSELbits	set	3966
   251  0000                     _TRISA	set	3986
   252  0000                     _ANSEL	set	3966
   253  0000                     _TRISB	set	3987
   254  0000                     _ANSELH	set	3967
   255  0000                     _TRISD	set	3989
   256  0000                     _PORTBbits	set	3969
   257  0000                     _TMR1	set	4046
   258  0000                     _RCREG	set	4014
   259  0000                     _TXREG	set	4013
   260  0000                     _RCSTAbits	set	4011
   261  0000                     _TXSTAbits	set	4012
   262  0000                     _BAUDCONbits	set	4024
   263  0000                     _SPBRG	set	4015
   264  0000                     _SPBRGH	set	4016
   265  0000                     _ADCON2bits	set	4032
   266  0000                     _ADCON1	set	4033
   267  0000                     _T1CONbits	set	4045
   268  0000                     _ADRESH	set	4036
   269  0000                     _ADCON0bits	set	4034
   270  0000                     _RCIF	set	31989
   271  0000                     _TMR0	set	4054
   272  0000                     _T0CONbits	set	4053
   273  0000                     _INTCONbits	set	4082
   274                           
   275                           	psect	smallconst
   276  000600                     __psmallconst:
   277                           	opt callstack 0
   278  000600  00                 	db	0
   279  000601                     STR_1:
   280  000601  4E                 	db	78	;'N'
   281  000602  6F                 	db	111	;'o'
   282  000603  6D                 	db	109	;'m'
   283  000604  62                 	db	98	;'b'
   284  000605  72                 	db	114	;'r'
   285  000606  65                 	db	101	;'e'
   286  000607  20                 	db	32
   287  000608  64                 	db	100	;'d'
   288  000609  65                 	db	101	;'e'
   289  00060A  20                 	db	32
   290  00060B  70                 	db	112	;'p'
   291  00060C  6F                 	db	111	;'o'
   292  00060D  69                 	db	105	;'i'
   293  00060E  6E                 	db	110	;'n'
   294  00060F  74                 	db	116	;'t'
   295  000610  73                 	db	115	;'s'
   296  000611  3A                 	db	58	;':'
   297  000612  20                 	db	32
   298  000613  00                 	db	0
   299                           
   300                           ; #config settings
   301  000614  00                 	db	0	; dummy byte at the end
   302  0000                     
   303                           	psect	cinit
   304  000F84                     __pcinit:
   305                           	opt callstack 0
   306  000F84                     start_initialization:
   307                           	opt callstack 0
   308  000F84                     __initialization:
   309                           	opt callstack 0
   310                           
   311                           ; Initialize objects allocated to BANK0 (148 bytes)
   312                           ; load TBLPTR registers with __pidataBANK0
   313  000F84  0E14               	movlw	low __pidataBANK0
   314  000F86  6EF6               	movwf	tblptrl,c
   315  000F88  0E0C               	movlw	high __pidataBANK0
   316  000F8A  6EF7               	movwf	tblptrh,c
   317  000F8C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   318  000F8E  6EF8               	movwf	tblptru,c
   319  000F90  EE00  F060         	lfsr	0,__pdataBANK0
   320  000F94  EE10 F094          	lfsr	1,148
   321  000F98                     copy_data0:
   322  000F98  0009               	tblrd		*+
   323  000F9A  CFF5 FFEE          	movff	tablat,postinc0
   324  000F9E  50E5               	movf	postdec1,w,c
   325  000FA0  50E1               	movf	fsr1l,w,c
   326  000FA2  E1FA               	bnz	copy_data0
   327                           
   328                           ; Initialize objects allocated to COMRAM (4 bytes)
   329                           ; load TBLPTR registers with __pidataCOMRAM
   330  000FA4  0E96               	movlw	low __pidataCOMRAM
   331  000FA6  6EF6               	movwf	tblptrl,c
   332  000FA8  0E12               	movlw	high __pidataCOMRAM
   333  000FAA  6EF7               	movwf	tblptrh,c
   334  000FAC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   335  000FAE  6EF8               	movwf	tblptru,c
   336  000FB0  EE00  F053         	lfsr	0,__pdataCOMRAM
   337  000FB4  EE10 F004          	lfsr	1,4
   338  000FB8                     copy_data1:
   339  000FB8  0009               	tblrd		*+
   340  000FBA  CFF5 FFEE          	movff	tablat,postinc0
   341  000FBE  50E5               	movf	postdec1,w,c
   342  000FC0  50E1               	movf	fsr1l,w,c
   343  000FC2  E1FA               	bnz	copy_data1
   344                           
   345                           ; Clear objects allocated to COMRAM (21 bytes)
   346  000FC4  EE00  F03E         	lfsr	0,__pbssCOMRAM
   347  000FC8  0E15               	movlw	21
   348  000FCA                     clear_0:
   349  000FCA  6AEE               	clrf	postinc0,c
   350  000FCC  06E8               	decf	wreg,f,c
   351  000FCE  E1FD               	bnz	clear_0
   352  000FD0                     end_of_initialization:
   353                           	opt callstack 0
   354  000FD0                     __end_of__initialization:
   355                           	opt callstack 0
   356  000FD0  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   357  000FD2  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   358  000FD4  0100               	movlb	0
   359  000FD6  EF36  F004         	goto	_main	;jump to C main() function
   360                           
   361                           	psect	bssCOMRAM
   362  00003E                     __pbssCOMRAM:
   363                           	opt callstack 0
   364  00003E                     	ds	20
   365  000052                     _m_tempsDAfficher:
   366                           	opt callstack 0
   367  000052                     	ds	1
   368                           
   369                           	psect	dataCOMRAM
   370  000053                     __pdataCOMRAM:
   371                           	opt callstack 0
   372  000053                     _randx:
   373                           	opt callstack 0
   374  000053                     	ds	4
   375                           
   376                           	psect	dataBANK0
   377  000060                     __pdataBANK0:
   378                           	opt callstack 0
   379  000060                     _matCGRAM:
   380                           	opt callstack 0
   381  000060                     	ds	64
   382  0000A0                     _m_aliens:
   383                           	opt callstack 0
   384  0000A0                     	ds	84
   385                           
   386                           	psect	cstackCOMRAM
   387  000001                     __pcstackCOMRAM:
   388                           	opt callstack 0
   389  000001                     ??_getAnalog:
   390  000001                     ??_lcd_ecrireDonnees:
   391  000001                     ??_lcd_busy:
   392  000001                     ?___wmul:
   393                           	opt callstack 0
   394  000001                     ?___lmul:
   395                           	opt callstack 0
   396  000001                     feu@pts:
   397                           	opt callstack 0
   398  000001                     ___wmul@multiplier:
   399                           	opt callstack 0
   400  000001                     srand@x:
   401                           	opt callstack 0
   402  000001                     ___lmul@multiplier:
   403                           	opt callstack 0
   404                           
   405                           ; 4 bytes @ 0x0
   406  000001                     	ds	1
   407  000002                     getAnalog@canal:
   408                           	opt callstack 0
   409  000002                     lcd_ecrireDonnees@donnee:
   410                           	opt callstack 0
   411  000002                     lcd_busy@adresse:
   412                           	opt callstack 0
   413  000002                     perdu@counter:
   414                           	opt callstack 0
   415                           
   416                           ; 2 bytes @ 0x1
   417  000002                     	ds	1
   418  000003                     ??_lcd_resetSequence:
   419  000003                     lcd_wrCom@commande:
   420                           	opt callstack 0
   421  000003                     lcd_wrData@caractere:
   422                           	opt callstack 0
   423  000003                     ___wmul@multiplicand:
   424                           	opt callstack 0
   425                           
   426                           ; 2 bytes @ 0x2
   427  000003                     	ds	1
   428  000004                     ??_lcd_initCGRam:
   429  000004                     feu@x:
   430                           	opt callstack 0
   431  000004                     lcd_gotoXY@y:
   432                           	opt callstack 0
   433  000004                     lcd_ecritChar@car:
   434                           	opt callstack 0
   435  000004                     perdu@i:
   436                           	opt callstack 0
   437                           
   438                           ; 2 bytes @ 0x3
   439  000004                     	ds	1
   440  000005                     lcd_gotoXY@x:
   441                           	opt callstack 0
   442  000005                     lcd_ecritChar@posRam:
   443                           	opt callstack 0
   444  000005                     ___wmul@product:
   445                           	opt callstack 0
   446  000005                     ___lmul@multiplicand:
   447                           	opt callstack 0
   448                           
   449                           ; 4 bytes @ 0x4
   450  000005                     	ds	1
   451  000006                     lcd_initCGRam@i:
   452                           	opt callstack 0
   453  000006                     deplace@x:
   454                           	opt callstack 0
   455  000006                     lcd_putMessage@chaine:
   456                           	opt callstack 0
   457                           
   458                           ; 3 bytes @ 0x5
   459  000006                     	ds	1
   460  000007                     lcd_initCGRam@j:
   461                           	opt callstack 0
   462  000007                     strcpy@to:
   463                           	opt callstack 0
   464                           
   465                           ; 2 bytes @ 0x6
   466  000007                     	ds	1
   467  000008                     
   468                           ; 1 bytes @ 0x7
   469  000008                     	ds	1
   470  000009                     ??_lcd_putMessage:
   471  000009                     deplace@analog:
   472                           	opt callstack 0
   473  000009                     strcpy@from:
   474                           	opt callstack 0
   475  000009                     ___lmul@product:
   476                           	opt callstack 0
   477                           
   478                           ; 4 bytes @ 0x8
   479  000009                     	ds	2
   480  00000B                     strcpy@cp:
   481                           	opt callstack 0
   482                           
   483                           ; 2 bytes @ 0xA
   484  00000B                     	ds	2
   485  00000D                     ?_rand:
   486                           	opt callstack 0
   487                           
   488                           ; 2 bytes @ 0xC
   489  00000D                     	ds	1
   490  00000E                     lcd_putMessage@j:
   491                           	opt callstack 0
   492                           
   493                           ; 1 bytes @ 0xD
   494  00000E                     	ds	1
   495  00000F                     ??_afficheAliens:
   496  00000F                     ?___awmod:
   497                           	opt callstack 0
   498  00000F                     affichePerdu@pts:
   499                           	opt callstack 0
   500  00000F                     ___awmod@dividend:
   501                           	opt callstack 0
   502                           
   503                           ; 2 bytes @ 0xE
   504  00000F                     	ds	2
   505  000011                     ??_affichePerdu:
   506  000011                     afficheAliens@i:
   507                           	opt callstack 0
   508  000011                     ___awmod@divisor:
   509                           	opt callstack 0
   510                           
   511                           ; 2 bytes @ 0x10
   512  000011                     	ds	2
   513  000013                     ___awmod@counter:
   514                           	opt callstack 0
   515                           
   516                           ; 1 bytes @ 0x12
   517  000013                     	ds	1
   518  000014                     ___awmod@sign:
   519                           	opt callstack 0
   520                           
   521                           ; 1 bytes @ 0x13
   522  000014                     	ds	1
   523  000015                     
   524                           ; 1 bytes @ 0x14
   525  000015                     	ds	1
   526  000016                     nouveauxAliens@verifie:
   527                           	opt callstack 0
   528                           
   529                           ; 20 bytes @ 0x15
   530  000016                     	ds	22
   531  00002C                     nouveauxAliens@k:
   532                           	opt callstack 0
   533                           
   534                           ; 2 bytes @ 0x2B
   535  00002C                     	ds	2
   536  00002E                     nouveauxAliens@counter:
   537                           	opt callstack 0
   538                           
   539                           ; 1 bytes @ 0x2D
   540  00002E                     	ds	1
   541  00002F                     nouveauxAliens@v:
   542                           	opt callstack 0
   543                           
   544                           ; 2 bytes @ 0x2E
   545  00002F                     	ds	2
   546  000031                     nouveauxAliens@j:
   547                           	opt callstack 0
   548                           
   549                           ; 2 bytes @ 0x30
   550  000031                     	ds	2
   551  000033                     nouveauxAliens@k_479:
   552                           	opt callstack 0
   553                           
   554                           ; 2 bytes @ 0x32
   555  000033                     	ds	2
   556  000035                     nouveauxAliens@i:
   557                           	opt callstack 0
   558                           
   559                           ; 2 bytes @ 0x34
   560  000035                     	ds	2
   561  000037                     nouveauxAliens@random:
   562                           	opt callstack 0
   563                           
   564                           ; 1 bytes @ 0x36
   565  000037                     	ds	1
   566  000038                     ??_main:
   567                           
   568                           ; 1 bytes @ 0x37
   569  000038                     	ds	2
   570  00003A                     main@n:
   571                           	opt callstack 0
   572                           
   573                           ; 1 bytes @ 0x39
   574  00003A                     	ds	1
   575  00003B                     main@points:
   576                           	opt callstack 0
   577                           
   578                           ; 2 bytes @ 0x3A
   579  00003B                     	ds	2
   580  00003D                     main@posX:
   581                           	opt callstack 0
   582                           
   583                           ; 1 bytes @ 0x3C
   584  00003D                     	ds	1
   585                           
   586 ;;
   587 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   588 ;;
   589 ;; *************** function _main *****************
   590 ;; Defined at:
   591 ;;		line 75 in file "main.c"
   592 ;; Parameters:    Size  Location     Type
   593 ;;		None
   594 ;; Auto vars:     Size  Location     Type
   595 ;;  points          2   58[COMRAM] PTR unsigned char 
   596 ;;		 -> NULL(0), 
   597 ;;  posX            1   60[COMRAM] unsigned char 
   598 ;;  n               1   57[COMRAM] unsigned char 
   599 ;;  verifie         1    0        unsigned char 
   600 ;; Return value:  Size  Location     Type
   601 ;;                  1    wreg      void 
   602 ;; Registers used:
   603 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   604 ;; Tracked objects:
   605 ;;		On entry : 0/0
   606 ;;		On exit  : 0/0
   607 ;;		Unchanged: 0/0
   608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   609 ;;      Params:         0       0       0       0       0       0       0
   610 ;;      Locals:         5       0       0       0       0       0       0
   611 ;;      Temps:          1       0       0       0       0       0       0
   612 ;;      Totals:         6       0       0       0       0       0       0
   613 ;;Total ram usage:        6 bytes
   614 ;; Hardware stack levels required when called:    7
   615 ;; This function calls:
   616 ;;		_afficheAliens
   617 ;;		_affichePerdu
   618 ;;		_deplace
   619 ;;		_feu
   620 ;;		_init_serie
   621 ;;		_initialisation
   622 ;;		_lcd_effaceAffichage
   623 ;;		_lcd_gotoXY
   624 ;;		_lcd_init
   625 ;;		_nouveauxAliens
   626 ;;		_perdu
   627 ;; This function is called by:
   628 ;;		Startup code after reset
   629 ;; This function uses a non-reentrant model
   630 ;;
   631                           
   632                           	psect	text0
   633  00086C                     __ptext0:
   634                           	opt callstack 0
   635  00086C                     _main:
   636                           	opt callstack 24
   637  00086C                     
   638                           ;main.c: 79: bool n =0;
   639  00086C  0E00               	movlw	0
   640  00086E  6E3A               	movwf	main@n^0,c
   641  000870                     
   642                           ;main.c: 80: char *points =0;
   643  000870  0E00               	movlw	0
   644  000872  6E3B               	movwf	main@points^0,c
   645  000874  0E00               	movlw	0
   646  000876  6E3C               	movwf	(main@points+1)^0,c
   647  000878                     
   648                           ;main.c: 81: char posX=10;
   649  000878  0E0A               	movlw	10
   650  00087A  6E3D               	movwf	main@posX^0,c
   651  00087C                     
   652                           ;main.c: 85: n = perdu();
   653  00087C  EC54  F006         	call	_perdu	;wreg free
   654  000880  6E3A               	movwf	main@n^0,c
   655  000882                     
   656                           ;main.c: 86: initialisation();
   657  000882  ECED  F007         	call	_initialisation	;wreg free
   658  000886                     
   659                           ;main.c: 87: lcd_init();
   660  000886  ECDA  F008         	call	_lcd_init	;wreg free
   661  00088A                     
   662                           ;main.c: 88: init_serie();
   663  00088A  EC15  F009         	call	_init_serie	;wreg free
   664  00088E                     
   665                           ;main.c: 90: lcd_gotoXY(10,1);
   666  00088E  0E01               	movlw	1
   667  000890  6E04               	movwf	lcd_gotoXY@y^0,c
   668  000892  0E0A               	movlw	10
   669  000894  ECD0  F006         	call	_lcd_gotoXY
   670  000898                     l2165:
   671                           
   672                           ;main.c: 102: {;main.c: 106: if(m_tempsDAfficher == 1)
   673  000898  0452               	decf	_m_tempsDAfficher^0,w,c
   674  00089A  A4D8               	btfss	status,2,c
   675  00089C  EF52  F004         	goto	u951
   676  0008A0  EF54  F004         	goto	u950
   677  0008A4                     u951:
   678  0008A4  EF7A  F004         	goto	l2185
   679  0008A8                     u950:
   680  0008A8                     
   681                           ;main.c: 107: {;main.c: 108: nouveauxAliens();
   682  0008A8  EC0B  F003         	call	_nouveauxAliens	;wreg free
   683  0008AC                     
   684                           ;main.c: 109: if(n == 1)
   685  0008AC  043A               	decf	main@n^0,w,c
   686  0008AE  A4D8               	btfss	status,2,c
   687  0008B0  EF5C  F004         	goto	u961
   688  0008B4  EF5E  F004         	goto	u960
   689  0008B8                     u961:
   690  0008B8  EF71  F004         	goto	l2179
   691  0008BC                     u960:
   692  0008BC                     
   693                           ;main.c: 110: {;main.c: 111: affichePerdu(&points);
   694  0008BC  0E00               	movlw	high main@points
   695  0008BE  6E10               	movwf	(affichePerdu@pts+1)^0,c
   696  0008C0  0E3B               	movlw	low main@points
   697  0008C2  6E0F               	movwf	affichePerdu@pts^0,c
   698  0008C4  EC95  F007         	call	_affichePerdu	;wreg free
   699  0008C8                     
   700                           ;main.c: 112: lcd_gotoXY(10,4);
   701  0008C8  0E04               	movlw	4
   702  0008CA  6E04               	movwf	lcd_gotoXY@y^0,c
   703  0008CC  0E0A               	movlw	10
   704  0008CE  ECD0  F006         	call	_lcd_gotoXY
   705  0008D2                     
   706                           ;main.c: 113: lcd_effaceAffichage();
   707  0008D2  EC35  F009         	call	_lcd_effaceAffichage	;wreg free
   708  0008D6                     
   709                           ;main.c: 114: *points = 0;
   710  0008D6  C03B  FFD9         	movff	main@points,fsr2l
   711  0008DA  C03C  FFDA         	movff	main@points+1,fsr2h
   712  0008DE  0E00               	movlw	0
   713  0008E0  6EDF               	movwf	indf2,c
   714  0008E2                     l2179:
   715                           
   716                           ;main.c: 115: };main.c: 116: afficheAliens();
   717  0008E2  EC66  F008         	call	_afficheAliens	;wreg free
   718  0008E6                     
   719                           ;main.c: 117: lcd_gotoXY(&posX,4);
   720  0008E6  0E04               	movlw	4
   721  0008E8  6E04               	movwf	lcd_gotoXY@y^0,c
   722  0008EA  0E3D               	movlw	main@posX& (0+255)
   723  0008EC  ECD0  F006         	call	_lcd_gotoXY
   724  0008F0                     
   725                           ;main.c: 118: m_tempsDAfficher =0;
   726  0008F0  0E00               	movlw	0
   727  0008F2  6E52               	movwf	_m_tempsDAfficher^0,c
   728  0008F4                     l2185:
   729                           
   730                           ;main.c: 120: };main.c: 121: deplace(&posX);
   731  0008F4  0E3D               	movlw	low main@posX
   732  0008F6  6E06               	movwf	deplace@x^0,c
   733  0008F8  0E00               	movlw	high main@posX
   734  0008FA  6E07               	movwf	(deplace@x+1)^0,c
   735  0008FC  EC04  F005         	call	_deplace	;wreg free
   736  000900                     
   737                           ;main.c: 122: if(PORTBbits.RB1 == 0)
   738  000900  B281               	btfsc	129,1,c	;volatile
   739  000902  EF85  F004         	goto	u971
   740  000906  EF87  F004         	goto	u970
   741  00090A                     u971:
   742  00090A  EF97  F004         	goto	l2193
   743  00090E                     u970:
   744  00090E                     
   745                           ;main.c: 123: {;main.c: 124: feu(posX,&points);
   746  00090E  0E3B               	movlw	low main@points
   747  000910  6E01               	movwf	feu@pts^0,c
   748  000912  0E00               	movlw	high main@points
   749  000914  6E02               	movwf	(feu@pts+1)^0,c
   750  000916  503D               	movf	main@posX^0,w,c
   751  000918  ECA4  F004         	call	_feu
   752  00091C                     
   753                           ;main.c: 125: afficheAliens();
   754  00091C  EC66  F008         	call	_afficheAliens	;wreg free
   755  000920                     l81:
   756  000920  A281               	btfss	129,1,c	;volatile
   757  000922  EF95  F004         	goto	u981
   758  000926  EF97  F004         	goto	u980
   759  00092A                     u981:
   760  00092A  EF90  F004         	goto	l81
   761  00092E                     u980:
   762  00092E                     l2193:
   763                           
   764                           ;main.c: 128: };main.c: 130: _delay((unsigned long)((100)*(1000000/4000.0)));
   765  00092E  0E21               	movlw	33
   766  000930  6E38               	movwf	??_main^0,c
   767  000932  0E76               	movlw	118
   768  000934                     u997:
   769  000934  2EE8               	decfsz	wreg,f,c
   770  000936  D7FE               	bra	u997
   771  000938  2E38               	decfsz	??_main^0,f,c
   772  00093A  D7FC               	bra	u997
   773  00093C  F000 F000          	nop2	
   774  000940  EF4C  F004         	goto	l2165
   775  000944  EF15  F000         	goto	start
   776  000948                     __end_of_main:
   777                           	opt callstack 0
   778                           
   779 ;; *************** function _perdu *****************
   780 ;; Defined at:
   781 ;;		line 310 in file "main.c"
   782 ;; Parameters:    Size  Location     Type
   783 ;;		None
   784 ;; Auto vars:     Size  Location     Type
   785 ;;  i               2    3[COMRAM] int 
   786 ;;  counter         2    1[COMRAM] int 
   787 ;; Return value:  Size  Location     Type
   788 ;;                  1    wreg      unsigned char 
   789 ;; Registers used:
   790 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   791 ;; Tracked objects:
   792 ;;		On entry : 0/0
   793 ;;		On exit  : 0/0
   794 ;;		Unchanged: 0/0
   795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   796 ;;      Params:         0       0       0       0       0       0       0
   797 ;;      Locals:         4       0       0       0       0       0       0
   798 ;;      Temps:          1       0       0       0       0       0       0
   799 ;;      Totals:         5       0       0       0       0       0       0
   800 ;;Total ram usage:        5 bytes
   801 ;; Hardware stack levels used:    1
   802 ;; Hardware stack levels required when called:    1
   803 ;; This function calls:
   804 ;;		Nothing
   805 ;; This function is called by:
   806 ;;		_main
   807 ;; This function uses a non-reentrant model
   808 ;;
   809                           
   810                           	psect	text1
   811  000CA8                     __ptext1:
   812                           	opt callstack 0
   813  000CA8                     _perdu:
   814                           	opt callstack 29
   815  000CA8                     
   816                           ;main.c: 312: int counter =0;
   817  000CA8  0E00               	movlw	0
   818  000CAA  6E03               	movwf	(perdu@counter+1)^0,c
   819  000CAC  0E00               	movlw	0
   820  000CAE  6E02               	movwf	perdu@counter^0,c
   821                           
   822                           ;main.c: 313: for(int i=0; i<20;i++)
   823  000CB0  0E00               	movlw	0
   824  000CB2  6E05               	movwf	(perdu@i+1)^0,c
   825  000CB4  0E00               	movlw	0
   826  000CB6  6E04               	movwf	perdu@i^0,c
   827  000CB8                     l1933:
   828                           
   829                           ;main.c: 314: {;main.c: 315: if(m_aliens[3][i] == '*')
   830  000CB8  0EDF               	movlw	low (_m_aliens+63)
   831  000CBA  2404               	addwf	perdu@i^0,w,c
   832  000CBC  6ED9               	movwf	fsr2l,c
   833  000CBE  0E00               	movlw	high (_m_aliens+63)
   834  000CC0  2005               	addwfc	(perdu@i+1)^0,w,c
   835  000CC2  6EDA               	movwf	fsr2h,c
   836  000CC4  0E2A               	movlw	42
   837  000CC6  18DE               	xorwf	postinc2,w,c
   838  000CC8  A4D8               	btfss	status,2,c
   839  000CCA  EF69  F006         	goto	u701
   840  000CCE  EF6B  F006         	goto	u700
   841  000CD2                     u701:
   842  000CD2  EF6E  F006         	goto	l1939
   843  000CD6                     u700:
   844  000CD6                     
   845                           ;main.c: 316: {;main.c: 317: return 1;
   846  000CD6  0E01               	movlw	1
   847  000CD8  EF9A  F006         	goto	l136
   848  000CDC                     l1939:
   849                           
   850                           ;main.c: 318: };main.c: 319: if(m_aliens[3][i] == ' ')
   851  000CDC  0EDF               	movlw	low (_m_aliens+63)
   852  000CDE  2404               	addwf	perdu@i^0,w,c
   853  000CE0  6ED9               	movwf	fsr2l,c
   854  000CE2  0E00               	movlw	high (_m_aliens+63)
   855  000CE4  2005               	addwfc	(perdu@i+1)^0,w,c
   856  000CE6  6EDA               	movwf	fsr2h,c
   857  000CE8  0E20               	movlw	32
   858  000CEA  18DE               	xorwf	postinc2,w,c
   859  000CEC  A4D8               	btfss	status,2,c
   860  000CEE  EF7B  F006         	goto	u711
   861  000CF2  EF7D  F006         	goto	u710
   862  000CF6                     u711:
   863  000CF6  EF7F  F006         	goto	l137
   864  000CFA                     u710:
   865  000CFA                     
   866                           ;main.c: 320: {;main.c: 321: counter++;
   867  000CFA  4A02               	infsnz	perdu@counter^0,f,c
   868  000CFC  2A03               	incf	(perdu@counter+1)^0,f,c
   869  000CFE                     l137:
   870  000CFE  4A04               	infsnz	perdu@i^0,f,c
   871  000D00  2A05               	incf	(perdu@i+1)^0,f,c
   872  000D02  BE05               	btfsc	(perdu@i+1)^0,7,c
   873  000D04  EF8D  F006         	goto	u721
   874  000D08  5005               	movf	(perdu@i+1)^0,w,c
   875  000D0A  E109               	bnz	u720
   876  000D0C  0E14               	movlw	20
   877  000D0E  5C04               	subwf	perdu@i^0,w,c
   878  000D10  A0D8               	btfss	status,0,c
   879  000D12  EF8D  F006         	goto	u721
   880  000D16  EF8F  F006         	goto	u720
   881  000D1A                     u721:
   882  000D1A  EF5C  F006         	goto	l1933
   883  000D1E                     u720:
   884  000D1E                     
   885                           ;main.c: 322: };main.c: 323: };main.c: 324: if(counter == 20)
   886  000D1E  0E14               	movlw	20
   887  000D20  1802               	xorwf	perdu@counter^0,w,c
   888  000D22  1003               	iorwf	(perdu@counter+1)^0,w,c
   889  000D24  A4D8               	btfss	status,2,c
   890  000D26  EF97  F006         	goto	u731
   891  000D2A  EF99  F006         	goto	u730
   892  000D2E                     u731:
   893  000D2E  EF9A  F006         	goto	l136
   894  000D32                     u730:
   895  000D32                     
   896                           ;main.c: 325: {;main.c: 326: return 0;
   897  000D32  0E00               	movlw	0
   898  000D34                     l136:
   899  000D34  0012               	return		;funcret
   900  000D36                     __end_of_perdu:
   901                           	opt callstack 0
   902                           
   903 ;; *************** function _nouveauxAliens *****************
   904 ;; Defined at:
   905 ;;		line 141 in file "main.c"
   906 ;; Parameters:    Size  Location     Type
   907 ;;		None
   908 ;; Auto vars:     Size  Location     Type
   909 ;;  k               2   50[COMRAM] int 
   910 ;;  j               2   48[COMRAM] int 
   911 ;;  v               2   46[COMRAM] int 
   912 ;;  i               2   52[COMRAM] int 
   913 ;;  verifie        20   21[COMRAM] unsigned char [20]
   914 ;;  k               2   43[COMRAM] int 
   915 ;;  cAlien          2    0        int 
   916 ;;  random          1   54[COMRAM] unsigned char 
   917 ;;  counter         1   45[COMRAM] unsigned char 
   918 ;; Return value:  Size  Location     Type
   919 ;;                  1    wreg      void 
   920 ;; Registers used:
   921 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   922 ;; Tracked objects:
   923 ;;		On entry : 0/0
   924 ;;		On exit  : 0/0
   925 ;;		Unchanged: 0/0
   926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   927 ;;      Params:         0       0       0       0       0       0       0
   928 ;;      Locals:        34       0       0       0       0       0       0
   929 ;;      Temps:          1       0       0       0       0       0       0
   930 ;;      Totals:        35       0       0       0       0       0       0
   931 ;;Total ram usage:       35 bytes
   932 ;; Hardware stack levels used:    1
   933 ;; Hardware stack levels required when called:    3
   934 ;; This function calls:
   935 ;;		___awmod
   936 ;;		___wmul
   937 ;;		_rand
   938 ;;		_strcpy
   939 ;; This function is called by:
   940 ;;		_main
   941 ;; This function uses a non-reentrant model
   942 ;;
   943                           
   944                           	psect	text2
   945  000616                     __ptext2:
   946                           	opt callstack 0
   947  000616                     _nouveauxAliens:
   948                           	opt callstack 27
   949  000616                     
   950                           ;main.c: 143: bool verifie[20] = {0};
   951  000616  EE20  F016         	lfsr	2,nouveauxAliens@verifie
   952  00061A  0E13               	movlw	19
   953  00061C                     u741:
   954  00061C  6ADE               	clrf	postinc2,c
   955  00061E  06E8               	decf	wreg,f,c
   956  000620  E2FD               	bc	u741
   957  000622                     
   958                           ;main.c: 144: char counter=0;
   959  000622  0E00               	movlw	0
   960  000624  6E2E               	movwf	nouveauxAliens@counter^0,c
   961  000626                     
   962                           ;main.c: 147: int k =0;
   963  000626  0E00               	movlw	0
   964  000628  6E2D               	movwf	(nouveauxAliens@k+1)^0,c
   965  00062A  0E00               	movlw	0
   966  00062C  6E2C               	movwf	nouveauxAliens@k^0,c
   967  00062E                     
   968                           ;main.c: 148: for(int i=5; i>1;i--)
   969  00062E  0E00               	movlw	0
   970  000630  6E36               	movwf	(nouveauxAliens@i+1)^0,c
   971  000632  0E05               	movlw	5
   972  000634  6E35               	movwf	nouveauxAliens@i^0,c
   973  000636                     l2011:
   974                           
   975                           ;main.c: 149: {;main.c: 150: strcpy(m_aliens[i-2],m_aliens[i-3]);
   976  000636  C035  F001         	movff	nouveauxAliens@i,___wmul@multiplier
   977  00063A  C036  F002         	movff	nouveauxAliens@i+1,___wmul@multiplier+1
   978  00063E  0E00               	movlw	0
   979  000640  6E04               	movwf	(___wmul@multiplicand+1)^0,c
   980  000642  0E15               	movlw	21
   981  000644  6E03               	movwf	___wmul@multiplicand^0,c
   982  000646  EC02  F009         	call	___wmul	;wreg free
   983  00064A  0E76               	movlw	low (_m_aliens+65494)
   984  00064C  2401               	addwf	?___wmul^0,w,c
   985  00064E  6E07               	movwf	strcpy@to^0,c
   986  000650  0E00               	movlw	high (_m_aliens+65494)
   987  000652  2002               	addwfc	(?___wmul+1)^0,w,c
   988  000654  6E08               	movwf	(strcpy@to+1)^0,c
   989  000656  C035  F001         	movff	nouveauxAliens@i,___wmul@multiplier
   990  00065A  C036  F002         	movff	nouveauxAliens@i+1,___wmul@multiplier+1
   991  00065E  0E00               	movlw	0
   992  000660  6E04               	movwf	(___wmul@multiplicand+1)^0,c
   993  000662  0E15               	movlw	21
   994  000664  6E03               	movwf	___wmul@multiplicand^0,c
   995  000666  EC02  F009         	call	___wmul	;wreg free
   996  00066A  0E61               	movlw	low (_m_aliens+65473)
   997  00066C  2401               	addwf	?___wmul^0,w,c
   998  00066E  6E09               	movwf	strcpy@from^0,c
   999  000670  0E00               	movlw	high (_m_aliens+65473)
  1000  000672  2002               	addwfc	(?___wmul+1)^0,w,c
  1001  000674  6E0A               	movwf	(strcpy@from+1)^0,c
  1002  000676  EC8A  F008         	call	_strcpy	;wreg free
  1003  00067A  0635               	decf	nouveauxAliens@i^0,f,c
  1004  00067C  A0D8               	btfss	status,0,c
  1005  00067E  0636               	decf	(nouveauxAliens@i+1)^0,f,c
  1006  000680  BE36               	btfsc	(nouveauxAliens@i+1)^0,7,c
  1007  000682  EF4E  F003         	goto	u750
  1008  000686  5036               	movf	(nouveauxAliens@i+1)^0,w,c
  1009  000688  E107               	bnz	u751
  1010  00068A  0E02               	movlw	2
  1011  00068C  5C35               	subwf	nouveauxAliens@i^0,w,c
  1012  00068E  B0D8               	btfsc	status,0,c
  1013  000690  EF4C  F003         	goto	u751
  1014  000694  EF4E  F003         	goto	u750
  1015  000698                     u751:
  1016  000698  EF1B  F003         	goto	l2011
  1017  00069C                     u750:
  1018  00069C                     
  1019                           ;main.c: 151: };main.c: 152: for(int v=0; v<20; v++)
  1020  00069C  0E00               	movlw	0
  1021  00069E  6E30               	movwf	(nouveauxAliens@v+1)^0,c
  1022  0006A0  0E00               	movlw	0
  1023  0006A2  6E2F               	movwf	nouveauxAliens@v^0,c
  1024  0006A4                     l2023:
  1025                           
  1026                           ;main.c: 153: {;main.c: 154: m_aliens[0][v] = ' ';
  1027  0006A4  0EA0               	movlw	low _m_aliens
  1028  0006A6  242F               	addwf	nouveauxAliens@v^0,w,c
  1029  0006A8  6ED9               	movwf	fsr2l,c
  1030  0006AA  0E00               	movlw	high _m_aliens
  1031  0006AC  2030               	addwfc	(nouveauxAliens@v+1)^0,w,c
  1032  0006AE  6EDA               	movwf	fsr2h,c
  1033  0006B0  0E20               	movlw	32
  1034  0006B2  6EDF               	movwf	indf2,c
  1035  0006B4  4A2F               	infsnz	nouveauxAliens@v^0,f,c
  1036  0006B6  2A30               	incf	(nouveauxAliens@v+1)^0,f,c
  1037  0006B8  BE30               	btfsc	(nouveauxAliens@v+1)^0,7,c
  1038  0006BA  EF68  F003         	goto	u761
  1039  0006BE  5030               	movf	(nouveauxAliens@v+1)^0,w,c
  1040  0006C0  E109               	bnz	u760
  1041  0006C2  0E14               	movlw	20
  1042  0006C4  5C2F               	subwf	nouveauxAliens@v^0,w,c
  1043  0006C6  A0D8               	btfss	status,0,c
  1044  0006C8  EF68  F003         	goto	u761
  1045  0006CC  EF6A  F003         	goto	u760
  1046  0006D0                     u761:
  1047  0006D0  EF52  F003         	goto	l2023
  1048  0006D4                     u760:
  1049  0006D4  EFA9  F003         	goto	l2039
  1050  0006D8                     l2029:
  1051                           
  1052                           ;main.c: 158: {;main.c: 159: random = rand() %20;
  1053  0006D8  EC17  F008         	call	_rand	;wreg free
  1054  0006DC  C00D  F00F         	movff	?_rand,___awmod@dividend
  1055  0006E0  C00E  F010         	movff	?_rand+1,___awmod@dividend+1
  1056  0006E4  0E00               	movlw	0
  1057  0006E6  6E12               	movwf	(___awmod@divisor+1)^0,c
  1058  0006E8  0E14               	movlw	20
  1059  0006EA  6E11               	movwf	___awmod@divisor^0,c
  1060  0006EC  EC64  F005         	call	___awmod	;wreg free
  1061  0006F0  500F               	movf	?___awmod^0,w,c
  1062  0006F2  6E37               	movwf	nouveauxAliens@random^0,c
  1063  0006F4                     
  1064                           ;main.c: 160: if(((m_aliens[0][random]) == ' ') && (verifie[random] == 0))
  1065  0006F4  0EA0               	movlw	low _m_aliens
  1066  0006F6  2437               	addwf	nouveauxAliens@random^0,w,c
  1067  0006F8  6ED9               	movwf	fsr2l,c
  1068  0006FA  6ADA               	clrf	fsr2h,c
  1069  0006FC  0E00               	movlw	high _m_aliens
  1070  0006FE  22DA               	addwfc	fsr2h,f,c
  1071  000700  0E20               	movlw	32
  1072  000702  18DE               	xorwf	postinc2,w,c
  1073  000704  A4D8               	btfss	status,2,c
  1074  000706  EF87  F003         	goto	u771
  1075  00070A  EF89  F003         	goto	u770
  1076  00070E                     u771:
  1077  00070E  EFA9  F003         	goto	l2039
  1078  000712                     u770:
  1079  000712  0E16               	movlw	low nouveauxAliens@verifie
  1080  000714  2437               	addwf	nouveauxAliens@random^0,w,c
  1081  000716  6ED9               	movwf	fsr2l,c
  1082  000718  6ADA               	clrf	fsr2h,c
  1083  00071A  0E00               	movlw	high nouveauxAliens@verifie
  1084  00071C  22DA               	addwfc	fsr2h,f,c
  1085  00071E  50DF               	movf	indf2,w,c
  1086  000720  A4D8               	btfss	status,2,c
  1087  000722  EF95  F003         	goto	u781
  1088  000726  EF97  F003         	goto	u780
  1089  00072A                     u781:
  1090  00072A  EFA9  F003         	goto	l2039
  1091  00072E                     u780:
  1092  00072E                     
  1093                           ;main.c: 161: {;main.c: 163: m_aliens[0][random] = '*';
  1094  00072E  0EA0               	movlw	low _m_aliens
  1095  000730  2437               	addwf	nouveauxAliens@random^0,w,c
  1096  000732  6ED9               	movwf	fsr2l,c
  1097  000734  6ADA               	clrf	fsr2h,c
  1098  000736  0E00               	movlw	high _m_aliens
  1099  000738  22DA               	addwfc	fsr2h,f,c
  1100  00073A  0E2A               	movlw	42
  1101  00073C  6EDF               	movwf	indf2,c
  1102                           
  1103                           ;main.c: 164: verifie[random] = 1;
  1104  00073E  0E16               	movlw	low nouveauxAliens@verifie
  1105  000740  2437               	addwf	nouveauxAliens@random^0,w,c
  1106  000742  6ED9               	movwf	fsr2l,c
  1107  000744  6ADA               	clrf	fsr2h,c
  1108  000746  0E00               	movlw	high nouveauxAliens@verifie
  1109  000748  22DA               	addwfc	fsr2h,f,c
  1110  00074A  0E01               	movlw	1
  1111  00074C  6EDF               	movwf	indf2,c
  1112  00074E                     
  1113                           ;main.c: 165: k++;
  1114  00074E  4A2C               	infsnz	nouveauxAliens@k^0,f,c
  1115  000750  2A2D               	incf	(nouveauxAliens@k+1)^0,f,c
  1116  000752                     l2039:
  1117  000752  BE2D               	btfsc	(nouveauxAliens@k+1)^0,7,c
  1118  000754  EFB5  F003         	goto	u791
  1119  000758  502D               	movf	(nouveauxAliens@k+1)^0,w,c
  1120  00075A  E109               	bnz	u790
  1121  00075C  0E04               	movlw	4
  1122  00075E  5C2C               	subwf	nouveauxAliens@k^0,w,c
  1123  000760  A0D8               	btfss	status,0,c
  1124  000762  EFB5  F003         	goto	u791
  1125  000766  EFB7  F003         	goto	u790
  1126  00076A                     u791:
  1127  00076A  EF6C  F003         	goto	l2029
  1128  00076E                     u790:
  1129  00076E                     
  1130                           ;main.c: 167: };main.c: 169: };main.c: 171: for(int j=0; j<20; j++)
  1131  00076E  0E00               	movlw	0
  1132  000770  6E32               	movwf	(nouveauxAliens@j+1)^0,c
  1133  000772  0E00               	movlw	0
  1134  000774  6E31               	movwf	nouveauxAliens@j^0,c
  1135  000776                     l2047:
  1136                           
  1137                           ;main.c: 172: {;main.c: 173: if(m_aliens[0][j] == '*')
  1138  000776  0EA0               	movlw	low _m_aliens
  1139  000778  2431               	addwf	nouveauxAliens@j^0,w,c
  1140  00077A  6ED9               	movwf	fsr2l,c
  1141  00077C  0E00               	movlw	high _m_aliens
  1142  00077E  2032               	addwfc	(nouveauxAliens@j+1)^0,w,c
  1143  000780  6EDA               	movwf	fsr2h,c
  1144  000782  0E2A               	movlw	42
  1145  000784  18DE               	xorwf	postinc2,w,c
  1146  000786  A4D8               	btfss	status,2,c
  1147  000788  EFC8  F003         	goto	u801
  1148  00078C  EFCA  F003         	goto	u800
  1149  000790                     u801:
  1150  000790  EFFB  F003         	goto	l2061
  1151  000794                     u800:
  1152  000794                     
  1153                           ;main.c: 174: {;main.c: 175: counter++;
  1154  000794  2A2E               	incf	nouveauxAliens@counter^0,f,c
  1155                           
  1156                           ;main.c: 177: while(counter > 4)
  1157  000796  EFF3  F003         	goto	l2059
  1158  00079A                     l2051:
  1159                           
  1160                           ;main.c: 178: {;main.c: 179: random = rand() %20;
  1161  00079A  EC17  F008         	call	_rand	;wreg free
  1162  00079E  C00D  F00F         	movff	?_rand,___awmod@dividend
  1163  0007A2  C00E  F010         	movff	?_rand+1,___awmod@dividend+1
  1164  0007A6  0E00               	movlw	0
  1165  0007A8  6E12               	movwf	(___awmod@divisor+1)^0,c
  1166  0007AA  0E14               	movlw	20
  1167  0007AC  6E11               	movwf	___awmod@divisor^0,c
  1168  0007AE  EC64  F005         	call	___awmod	;wreg free
  1169  0007B2  500F               	movf	?___awmod^0,w,c
  1170  0007B4  6E37               	movwf	nouveauxAliens@random^0,c
  1171  0007B6                     
  1172                           ;main.c: 180: if(m_aliens[0][random]== '*')
  1173  0007B6  0EA0               	movlw	low _m_aliens
  1174  0007B8  2437               	addwf	nouveauxAliens@random^0,w,c
  1175  0007BA  6ED9               	movwf	fsr2l,c
  1176  0007BC  6ADA               	clrf	fsr2h,c
  1177  0007BE  0E00               	movlw	high _m_aliens
  1178  0007C0  22DA               	addwfc	fsr2h,f,c
  1179  0007C2  0E2A               	movlw	42
  1180  0007C4  18DE               	xorwf	postinc2,w,c
  1181  0007C6  A4D8               	btfss	status,2,c
  1182  0007C8  EFE8  F003         	goto	u811
  1183  0007CC  EFEA  F003         	goto	u810
  1184  0007D0                     u811:
  1185  0007D0  EFF3  F003         	goto	l2059
  1186  0007D4                     u810:
  1187  0007D4                     
  1188                           ;main.c: 181: {;main.c: 182: m_aliens[0][random] = ' ';
  1189  0007D4  0EA0               	movlw	low _m_aliens
  1190  0007D6  2437               	addwf	nouveauxAliens@random^0,w,c
  1191  0007D8  6ED9               	movwf	fsr2l,c
  1192  0007DA  6ADA               	clrf	fsr2h,c
  1193  0007DC  0E00               	movlw	high _m_aliens
  1194  0007DE  22DA               	addwfc	fsr2h,f,c
  1195  0007E0  0E20               	movlw	32
  1196  0007E2  6EDF               	movwf	indf2,c
  1197  0007E4                     
  1198                           ;main.c: 183: counter--;
  1199  0007E4  062E               	decf	nouveauxAliens@counter^0,f,c
  1200  0007E6                     l2059:
  1201  0007E6  0E05               	movlw	5
  1202  0007E8  602E               	cpfslt	nouveauxAliens@counter^0,c
  1203  0007EA  EFF9  F003         	goto	u821
  1204  0007EE  EFFB  F003         	goto	u820
  1205  0007F2                     u821:
  1206  0007F2  EFCD  F003         	goto	l2051
  1207  0007F6                     u820:
  1208  0007F6                     l2061:
  1209  0007F6  4A31               	infsnz	nouveauxAliens@j^0,f,c
  1210  0007F8  2A32               	incf	(nouveauxAliens@j+1)^0,f,c
  1211  0007FA  BE32               	btfsc	(nouveauxAliens@j+1)^0,7,c
  1212  0007FC  EF09  F004         	goto	u831
  1213  000800  5032               	movf	(nouveauxAliens@j+1)^0,w,c
  1214  000802  E109               	bnz	u830
  1215  000804  0E14               	movlw	20
  1216  000806  5C31               	subwf	nouveauxAliens@j^0,w,c
  1217  000808  A0D8               	btfss	status,0,c
  1218  00080A  EF09  F004         	goto	u831
  1219  00080E  EF0B  F004         	goto	u830
  1220  000812                     u831:
  1221  000812  EFBB  F003         	goto	l2047
  1222  000816                     u830:
  1223  000816                     
  1224                           ;main.c: 184: };main.c: 185: };main.c: 187: };main.c: 189: };main.c: 193: for(int k=0; k
      +                          <20;k++)
  1225  000816  0E00               	movlw	0
  1226  000818  6E34               	movwf	(nouveauxAliens@k_479+1)^0,c
  1227  00081A  0E00               	movlw	0
  1228  00081C  6E33               	movwf	nouveauxAliens@k_479^0,c
  1229  00081E                     l2071:
  1230                           
  1231                           ;main.c: 194: {;main.c: 195: m_aliens[3][k] = ' ';
  1232  00081E  0EDF               	movlw	low (_m_aliens+63)
  1233  000820  2433               	addwf	nouveauxAliens@k_479^0,w,c
  1234  000822  6ED9               	movwf	fsr2l,c
  1235  000824  0E00               	movlw	high (_m_aliens+63)
  1236  000826  2034               	addwfc	(nouveauxAliens@k_479+1)^0,w,c
  1237  000828  6EDA               	movwf	fsr2h,c
  1238  00082A  0E20               	movlw	32
  1239  00082C  6EDF               	movwf	indf2,c
  1240  00082E  4A33               	infsnz	nouveauxAliens@k_479^0,f,c
  1241  000830  2A34               	incf	(nouveauxAliens@k_479+1)^0,f,c
  1242  000832  BE34               	btfsc	(nouveauxAliens@k_479+1)^0,7,c
  1243  000834  EF25  F004         	goto	u841
  1244  000838  5034               	movf	(nouveauxAliens@k_479+1)^0,w,c
  1245  00083A  E109               	bnz	u840
  1246  00083C  0E14               	movlw	20
  1247  00083E  5C33               	subwf	nouveauxAliens@k_479^0,w,c
  1248  000840  A0D8               	btfss	status,0,c
  1249  000842  EF25  F004         	goto	u841
  1250  000846  EF27  F004         	goto	u840
  1251  00084A                     u841:
  1252  00084A  EF0F  F004         	goto	l2071
  1253  00084E                     u840:
  1254  00084E                     
  1255                           ;main.c: 196: };main.c: 197: if(m_tempsDAfficher == 0)
  1256  00084E  5052               	movf	_m_tempsDAfficher^0,w,c
  1257  000850  A4D8               	btfss	status,2,c
  1258  000852  EF2D  F004         	goto	u851
  1259  000856  EF2F  F004         	goto	u850
  1260  00085A                     u851:
  1261  00085A  EF33  F004         	goto	l2081
  1262  00085E                     u850:
  1263  00085E                     
  1264                           ;main.c: 198: {;main.c: 200: m_tempsDAfficher = 1;
  1265  00085E  0E01               	movlw	1
  1266  000860  6E52               	movwf	_m_tempsDAfficher^0,c
  1267                           
  1268                           ;main.c: 201: }
  1269  000862  EF35  F004         	goto	l109
  1270  000866                     l2081:
  1271                           
  1272                           ;main.c: 202: else;main.c: 203: {;main.c: 205: m_tempsDAfficher = 0;
  1273  000866  0E00               	movlw	0
  1274  000868  6E52               	movwf	_m_tempsDAfficher^0,c
  1275  00086A                     l109:
  1276  00086A  0012               	return		;funcret
  1277  00086C                     __end_of_nouveauxAliens:
  1278                           	opt callstack 0
  1279                           
  1280 ;; *************** function _strcpy *****************
  1281 ;; Defined at:
  1282 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strcpy.c"
  1283 ;; Parameters:    Size  Location     Type
  1284 ;;  to              2    6[COMRAM] PTR unsigned char 
  1285 ;;		 -> m_aliens(84), 
  1286 ;;  from            2    8[COMRAM] PTR const unsigned char 
  1287 ;;		 -> m_aliens(84), 
  1288 ;; Auto vars:     Size  Location     Type
  1289 ;;  cp              2   10[COMRAM] PTR unsigned char 
  1290 ;;		 -> m_aliens(84), 
  1291 ;; Return value:  Size  Location     Type
  1292 ;;                  2    6[COMRAM] PTR unsigned char 
  1293 ;; Registers used:
  1294 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1295 ;; Tracked objects:
  1296 ;;		On entry : 0/0
  1297 ;;		On exit  : 0/0
  1298 ;;		Unchanged: 0/0
  1299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1300 ;;      Params:         4       0       0       0       0       0       0
  1301 ;;      Locals:         2       0       0       0       0       0       0
  1302 ;;      Temps:          0       0       0       0       0       0       0
  1303 ;;      Totals:         6       0       0       0       0       0       0
  1304 ;;Total ram usage:        6 bytes
  1305 ;; Hardware stack levels used:    1
  1306 ;; Hardware stack levels required when called:    1
  1307 ;; This function calls:
  1308 ;;		Nothing
  1309 ;; This function is called by:
  1310 ;;		_nouveauxAliens
  1311 ;; This function uses a non-reentrant model
  1312 ;;
  1313                           
  1314                           	psect	text3
  1315  001114                     __ptext3:
  1316                           	opt callstack 0
  1317  001114                     _strcpy:
  1318                           	opt callstack 28
  1319  001114  C007  F00B         	movff	strcpy@to,strcpy@cp
  1320  001118  C008  F00C         	movff	strcpy@to+1,strcpy@cp+1
  1321  00111C  EF94  F008         	goto	l1803
  1322  001120                     l1801:
  1323  001120  4A0B               	infsnz	strcpy@cp^0,f,c
  1324  001122  2A0C               	incf	(strcpy@cp+1)^0,f,c
  1325  001124  4A09               	infsnz	strcpy@from^0,f,c
  1326  001126  2A0A               	incf	(strcpy@from+1)^0,f,c
  1327  001128                     l1803:
  1328  001128  C009  FFD9         	movff	strcpy@from,fsr2l
  1329  00112C  C00A  FFDA         	movff	strcpy@from+1,fsr2h
  1330  001130  C00B  FFE1         	movff	strcpy@cp,fsr1l
  1331  001134  C00C  FFE2         	movff	strcpy@cp+1,fsr1h
  1332  001138  CFDF FFE7          	movff	indf2,indf1
  1333  00113C  50E7               	movf	indf1,w,c
  1334  00113E  A4D8               	btfss	status,2,c
  1335  001140  EFA4  F008         	goto	u581
  1336  001144  EFA6  F008         	goto	u580
  1337  001148                     u581:
  1338  001148  EF90  F008         	goto	l1801
  1339  00114C                     u580:
  1340  00114C  0012               	return		;funcret
  1341  00114E                     __end_of_strcpy:
  1342                           	opt callstack 0
  1343                           
  1344 ;; *************** function _rand *****************
  1345 ;; Defined at:
  1346 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  1347 ;; Parameters:    Size  Location     Type
  1348 ;;		None
  1349 ;; Auto vars:     Size  Location     Type
  1350 ;;		None
  1351 ;; Return value:  Size  Location     Type
  1352 ;;                  2   12[COMRAM] int 
  1353 ;; Registers used:
  1354 ;;		wreg, status,2, status,0, cstack
  1355 ;; Tracked objects:
  1356 ;;		On entry : 0/0
  1357 ;;		On exit  : 0/0
  1358 ;;		Unchanged: 0/0
  1359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1360 ;;      Params:         2       0       0       0       0       0       0
  1361 ;;      Locals:         0       0       0       0       0       0       0
  1362 ;;      Temps:          0       0       0       0       0       0       0
  1363 ;;      Totals:         2       0       0       0       0       0       0
  1364 ;;Total ram usage:        2 bytes
  1365 ;; Hardware stack levels used:    1
  1366 ;; Hardware stack levels required when called:    2
  1367 ;; This function calls:
  1368 ;;		___lmul
  1369 ;; This function is called by:
  1370 ;;		_nouveauxAliens
  1371 ;; This function uses a non-reentrant model
  1372 ;;
  1373                           
  1374                           	psect	text4
  1375  00102E                     __ptext4:
  1376                           	opt callstack 0
  1377  00102E                     _rand:
  1378                           	opt callstack 27
  1379  00102E  C053  F001         	movff	_randx,___lmul@multiplier
  1380  001032  C054  F002         	movff	_randx+1,___lmul@multiplier+1
  1381  001036  C055  F003         	movff	_randx+2,___lmul@multiplier+2
  1382  00103A  C056  F004         	movff	_randx+3,___lmul@multiplier+3
  1383  00103E  0E6D               	movlw	109
  1384  001040  6E05               	movwf	___lmul@multiplicand^0,c
  1385  001042  0E4E               	movlw	78
  1386  001044  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  1387  001046  0EC6               	movlw	198
  1388  001048  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  1389  00104A  0E41               	movlw	65
  1390  00104C  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  1391  00104E  EC9B  F006         	call	___lmul	;wreg free
  1392  001052  C001  F053         	movff	?___lmul,_randx
  1393  001056  C002  F054         	movff	?___lmul+1,_randx+1
  1394  00105A  C003  F055         	movff	?___lmul+2,_randx+2
  1395  00105E  C004  F056         	movff	?___lmul+3,_randx+3
  1396  001062  0E39               	movlw	57
  1397  001064  2653               	addwf	_randx^0,f,c
  1398  001066  0E30               	movlw	48
  1399  001068  2254               	addwfc	(_randx+1)^0,f,c
  1400  00106A  0E00               	movlw	0
  1401  00106C  2255               	addwfc	(_randx+2)^0,f,c
  1402  00106E  0E00               	movlw	0
  1403  001070  2256               	addwfc	(_randx+3)^0,f,c
  1404  001072  0EFF               	movlw	255
  1405  001074  1455               	andwf	(_randx+2)^0,w,c
  1406  001076  6E0D               	movwf	?_rand^0,c
  1407  001078  0E7F               	movlw	127
  1408  00107A  1456               	andwf	(_randx+3)^0,w,c
  1409  00107C  6E0E               	movwf	(?_rand+1)^0,c
  1410  00107E  0012               	return		;funcret
  1411  001080                     __end_of_rand:
  1412                           	opt callstack 0
  1413                           
  1414 ;; *************** function ___lmul *****************
  1415 ;; Defined at:
  1416 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul32.c"
  1417 ;; Parameters:    Size  Location     Type
  1418 ;;  multiplier      4    0[COMRAM] unsigned long 
  1419 ;;  multiplicand    4    4[COMRAM] unsigned long 
  1420 ;; Auto vars:     Size  Location     Type
  1421 ;;  product         4    8[COMRAM] unsigned long 
  1422 ;; Return value:  Size  Location     Type
  1423 ;;                  4    0[COMRAM] unsigned long 
  1424 ;; Registers used:
  1425 ;;		wreg, status,2, status,0
  1426 ;; Tracked objects:
  1427 ;;		On entry : 0/0
  1428 ;;		On exit  : 0/0
  1429 ;;		Unchanged: 0/0
  1430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1431 ;;      Params:         8       0       0       0       0       0       0
  1432 ;;      Locals:         4       0       0       0       0       0       0
  1433 ;;      Temps:          0       0       0       0       0       0       0
  1434 ;;      Totals:        12       0       0       0       0       0       0
  1435 ;;Total ram usage:       12 bytes
  1436 ;; Hardware stack levels used:    1
  1437 ;; Hardware stack levels required when called:    1
  1438 ;; This function calls:
  1439 ;;		Nothing
  1440 ;; This function is called by:
  1441 ;;		_rand
  1442 ;; This function uses a non-reentrant model
  1443 ;;
  1444                           
  1445                           	psect	text5
  1446  000D36                     __ptext5:
  1447                           	opt callstack 0
  1448  000D36                     ___lmul:
  1449                           	opt callstack 27
  1450  000D36  0E00               	movlw	0
  1451  000D38  6E09               	movwf	___lmul@product^0,c
  1452  000D3A  0E00               	movlw	0
  1453  000D3C  6E0A               	movwf	(___lmul@product+1)^0,c
  1454  000D3E  0E00               	movlw	0
  1455  000D40  6E0B               	movwf	(___lmul@product+2)^0,c
  1456  000D42  0E00               	movlw	0
  1457  000D44  6E0C               	movwf	(___lmul@product+3)^0,c
  1458  000D46                     l1775:
  1459  000D46  A001               	btfss	___lmul@multiplier^0,0,c
  1460  000D48  EFA8  F006         	goto	u561
  1461  000D4C  EFAA  F006         	goto	u560
  1462  000D50                     u561:
  1463  000D50  EFB2  F006         	goto	l1779
  1464  000D54                     u560:
  1465  000D54  5005               	movf	___lmul@multiplicand^0,w,c
  1466  000D56  2609               	addwf	___lmul@product^0,f,c
  1467  000D58  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  1468  000D5A  220A               	addwfc	(___lmul@product+1)^0,f,c
  1469  000D5C  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  1470  000D5E  220B               	addwfc	(___lmul@product+2)^0,f,c
  1471  000D60  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  1472  000D62  220C               	addwfc	(___lmul@product+3)^0,f,c
  1473  000D64                     l1779:
  1474  000D64  90D8               	bcf	status,0,c
  1475  000D66  3605               	rlcf	___lmul@multiplicand^0,f,c
  1476  000D68  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  1477  000D6A  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  1478  000D6C  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  1479  000D6E  90D8               	bcf	status,0,c
  1480  000D70  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  1481  000D72  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  1482  000D74  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  1483  000D76  3201               	rrcf	___lmul@multiplier^0,f,c
  1484  000D78  5001               	movf	___lmul@multiplier^0,w,c
  1485  000D7A  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  1486  000D7C  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  1487  000D7E  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  1488  000D80  A4D8               	btfss	status,2,c
  1489  000D82  EFC5  F006         	goto	u571
  1490  000D86  EFC7  F006         	goto	u570
  1491  000D8A                     u571:
  1492  000D8A  EFA3  F006         	goto	l1775
  1493  000D8E                     u570:
  1494  000D8E  C009  F001         	movff	___lmul@product,?___lmul
  1495  000D92  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  1496  000D96  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  1497  000D9A  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  1498  000D9E  0012               	return		;funcret
  1499  000DA0                     __end_of___lmul:
  1500                           	opt callstack 0
  1501                           
  1502 ;; *************** function ___wmul *****************
  1503 ;; Defined at:
  1504 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  1505 ;; Parameters:    Size  Location     Type
  1506 ;;  multiplier      2    0[COMRAM] unsigned int 
  1507 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1508 ;; Auto vars:     Size  Location     Type
  1509 ;;  product         2    4[COMRAM] unsigned int 
  1510 ;; Return value:  Size  Location     Type
  1511 ;;                  2    0[COMRAM] unsigned int 
  1512 ;; Registers used:
  1513 ;;		wreg, status,2, status,0, prodl, prodh
  1514 ;; Tracked objects:
  1515 ;;		On entry : 0/0
  1516 ;;		On exit  : 0/0
  1517 ;;		Unchanged: 0/0
  1518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1519 ;;      Params:         4       0       0       0       0       0       0
  1520 ;;      Locals:         2       0       0       0       0       0       0
  1521 ;;      Temps:          0       0       0       0       0       0       0
  1522 ;;      Totals:         6       0       0       0       0       0       0
  1523 ;;Total ram usage:        6 bytes
  1524 ;; Hardware stack levels used:    1
  1525 ;; Hardware stack levels required when called:    1
  1526 ;; This function calls:
  1527 ;;		Nothing
  1528 ;; This function is called by:
  1529 ;;		_nouveauxAliens
  1530 ;; This function uses a non-reentrant model
  1531 ;;
  1532                           
  1533                           	psect	text6
  1534  001204                     __ptext6:
  1535                           	opt callstack 0
  1536  001204                     ___wmul:
  1537                           	opt callstack 28
  1538  001204  5001               	movf	___wmul@multiplier^0,w,c
  1539  001206  0203               	mulwf	___wmul@multiplicand^0,c
  1540  001208  CFF3 F005          	movff	prodl,___wmul@product
  1541  00120C  CFF4 F006          	movff	prodh,___wmul@product+1
  1542  001210  5001               	movf	___wmul@multiplier^0,w,c
  1543  001212  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  1544  001214  50F3               	movf	243,w,c
  1545  001216  2606               	addwf	(___wmul@product+1)^0,f,c
  1546  001218  5002               	movf	(___wmul@multiplier+1)^0,w,c
  1547  00121A  0203               	mulwf	___wmul@multiplicand^0,c
  1548  00121C  50F3               	movf	243,w,c
  1549  00121E  2606               	addwf	(___wmul@product+1)^0,f,c
  1550  001220  C005  F001         	movff	___wmul@product,?___wmul
  1551  001224  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1552  001228  0012               	return		;funcret
  1553  00122A                     __end_of___wmul:
  1554                           	opt callstack 0
  1555                           
  1556 ;; *************** function ___awmod *****************
  1557 ;; Defined at:
  1558 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  1559 ;; Parameters:    Size  Location     Type
  1560 ;;  dividend        2   14[COMRAM] int 
  1561 ;;  divisor         2   16[COMRAM] int 
  1562 ;; Auto vars:     Size  Location     Type
  1563 ;;  sign            1   19[COMRAM] unsigned char 
  1564 ;;  counter         1   18[COMRAM] unsigned char 
  1565 ;; Return value:  Size  Location     Type
  1566 ;;                  2   14[COMRAM] int 
  1567 ;; Registers used:
  1568 ;;		wreg, status,2, status,0
  1569 ;; Tracked objects:
  1570 ;;		On entry : 0/0
  1571 ;;		On exit  : 0/0
  1572 ;;		Unchanged: 0/0
  1573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1574 ;;      Params:         4       0       0       0       0       0       0
  1575 ;;      Locals:         2       0       0       0       0       0       0
  1576 ;;      Temps:          0       0       0       0       0       0       0
  1577 ;;      Totals:         6       0       0       0       0       0       0
  1578 ;;Total ram usage:        6 bytes
  1579 ;; Hardware stack levels used:    1
  1580 ;; Hardware stack levels required when called:    1
  1581 ;; This function calls:
  1582 ;;		Nothing
  1583 ;; This function is called by:
  1584 ;;		_nouveauxAliens
  1585 ;; This function uses a non-reentrant model
  1586 ;;
  1587                           
  1588                           	psect	text7
  1589  000AC8                     __ptext7:
  1590                           	opt callstack 0
  1591  000AC8                     ___awmod:
  1592                           	opt callstack 28
  1593  000AC8  0E00               	movlw	0
  1594  000ACA  6E14               	movwf	___awmod@sign^0,c
  1595  000ACC  BE10               	btfsc	(___awmod@dividend+1)^0,7,c
  1596  000ACE  EF6D  F005         	goto	u640
  1597  000AD2  EF6B  F005         	goto	u641
  1598  000AD6                     u641:
  1599  000AD6  EF73  F005         	goto	l1899
  1600  000ADA                     u640:
  1601  000ADA  6C0F               	negf	___awmod@dividend^0,c
  1602  000ADC  1E10               	comf	(___awmod@dividend+1)^0,f,c
  1603  000ADE  B0D8               	btfsc	status,0,c
  1604  000AE0  2A10               	incf	(___awmod@dividend+1)^0,f,c
  1605  000AE2  0E01               	movlw	1
  1606  000AE4  6E14               	movwf	___awmod@sign^0,c
  1607  000AE6                     l1899:
  1608  000AE6  BE12               	btfsc	(___awmod@divisor+1)^0,7,c
  1609  000AE8  EF7A  F005         	goto	u650
  1610  000AEC  EF78  F005         	goto	u651
  1611  000AF0                     u651:
  1612  000AF0  EF7E  F005         	goto	l1903
  1613  000AF4                     u650:
  1614  000AF4  6C11               	negf	___awmod@divisor^0,c
  1615  000AF6  1E12               	comf	(___awmod@divisor+1)^0,f,c
  1616  000AF8  B0D8               	btfsc	status,0,c
  1617  000AFA  2A12               	incf	(___awmod@divisor+1)^0,f,c
  1618  000AFC                     l1903:
  1619  000AFC  5011               	movf	___awmod@divisor^0,w,c
  1620  000AFE  1012               	iorwf	(___awmod@divisor+1)^0,w,c
  1621  000B00  B4D8               	btfsc	status,2,c
  1622  000B02  EF85  F005         	goto	u661
  1623  000B06  EF87  F005         	goto	u660
  1624  000B0A                     u661:
  1625  000B0A  EFAB  F005         	goto	l1919
  1626  000B0E                     u660:
  1627  000B0E  0E01               	movlw	1
  1628  000B10  6E13               	movwf	___awmod@counter^0,c
  1629  000B12  EF8F  F005         	goto	l1909
  1630  000B16                     l1907:
  1631  000B16  90D8               	bcf	status,0,c
  1632  000B18  3611               	rlcf	___awmod@divisor^0,f,c
  1633  000B1A  3612               	rlcf	(___awmod@divisor+1)^0,f,c
  1634  000B1C  2A13               	incf	___awmod@counter^0,f,c
  1635  000B1E                     l1909:
  1636  000B1E  AE12               	btfss	(___awmod@divisor+1)^0,7,c
  1637  000B20  EF94  F005         	goto	u671
  1638  000B24  EF96  F005         	goto	u670
  1639  000B28                     u671:
  1640  000B28  EF8B  F005         	goto	l1907
  1641  000B2C                     u670:
  1642  000B2C                     l1911:
  1643  000B2C  5011               	movf	___awmod@divisor^0,w,c
  1644  000B2E  5C0F               	subwf	___awmod@dividend^0,w,c
  1645  000B30  5012               	movf	(___awmod@divisor+1)^0,w,c
  1646  000B32  5810               	subwfb	(___awmod@dividend+1)^0,w,c
  1647  000B34  A0D8               	btfss	status,0,c
  1648  000B36  EF9F  F005         	goto	u681
  1649  000B3A  EFA1  F005         	goto	u680
  1650  000B3E                     u681:
  1651  000B3E  EFA5  F005         	goto	l1915
  1652  000B42                     u680:
  1653  000B42  5011               	movf	___awmod@divisor^0,w,c
  1654  000B44  5E0F               	subwf	___awmod@dividend^0,f,c
  1655  000B46  5012               	movf	(___awmod@divisor+1)^0,w,c
  1656  000B48  5A10               	subwfb	(___awmod@dividend+1)^0,f,c
  1657  000B4A                     l1915:
  1658  000B4A  90D8               	bcf	status,0,c
  1659  000B4C  3212               	rrcf	(___awmod@divisor+1)^0,f,c
  1660  000B4E  3211               	rrcf	___awmod@divisor^0,f,c
  1661  000B50  2E13               	decfsz	___awmod@counter^0,f,c
  1662  000B52  EF96  F005         	goto	l1911
  1663  000B56                     l1919:
  1664  000B56  5014               	movf	___awmod@sign^0,w,c
  1665  000B58  B4D8               	btfsc	status,2,c
  1666  000B5A  EFB1  F005         	goto	u691
  1667  000B5E  EFB3  F005         	goto	u690
  1668  000B62                     u691:
  1669  000B62  EFB7  F005         	goto	l1923
  1670  000B66                     u690:
  1671  000B66  6C0F               	negf	___awmod@dividend^0,c
  1672  000B68  1E10               	comf	(___awmod@dividend+1)^0,f,c
  1673  000B6A  B0D8               	btfsc	status,0,c
  1674  000B6C  2A10               	incf	(___awmod@dividend+1)^0,f,c
  1675  000B6E                     l1923:
  1676  000B6E  C00F  F00F         	movff	___awmod@dividend,?___awmod
  1677  000B72  C010  F010         	movff	___awmod@dividend+1,?___awmod+1
  1678  000B76  0012               	return		;funcret
  1679  000B78                     __end_of___awmod:
  1680                           	opt callstack 0
  1681                           
  1682 ;; *************** function _lcd_init *****************
  1683 ;; Defined at:
  1684 ;;		line 258 in file "Lcd4Lignes.c"
  1685 ;; Parameters:    Size  Location     Type
  1686 ;;		None
  1687 ;; Auto vars:     Size  Location     Type
  1688 ;;		None
  1689 ;; Return value:  Size  Location     Type
  1690 ;;                  1    wreg      void 
  1691 ;; Registers used:
  1692 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1693 ;; Tracked objects:
  1694 ;;		On entry : 0/0
  1695 ;;		On exit  : 0/0
  1696 ;;		Unchanged: 0/0
  1697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1698 ;;      Params:         0       0       0       0       0       0       0
  1699 ;;      Locals:         0       0       0       0       0       0       0
  1700 ;;      Temps:          0       0       0       0       0       0       0
  1701 ;;      Totals:         0       0       0       0       0       0       0
  1702 ;;Total ram usage:        0 bytes
  1703 ;; Hardware stack levels used:    1
  1704 ;; Hardware stack levels required when called:    6
  1705 ;; This function calls:
  1706 ;;		_lcd_initCGRam
  1707 ;;		_lcd_resetSequence
  1708 ;;		_lcd_wrCom
  1709 ;; This function is called by:
  1710 ;;		_main
  1711 ;; This function uses a non-reentrant model
  1712 ;;
  1713                           
  1714                           	psect	text8
  1715  0011B4                     __ptext8:
  1716                           	opt callstack 0
  1717  0011B4                     _lcd_init:
  1718                           	opt callstack 24
  1719  0011B4                     
  1720                           ;Lcd4Lignes.c: 261: lcd_resetSequence();
  1721  0011B4  EC03  F007         	call	_lcd_resetSequence	;wreg free
  1722                           
  1723                           ;Lcd4Lignes.c: 262: lcd_wrCom(0x28);
  1724  0011B8  0E28               	movlw	40
  1725  0011BA  EC35  F007         	call	_lcd_wrCom
  1726                           
  1727                           ;Lcd4Lignes.c: 263: lcd_wrCom(0x0F);
  1728  0011BE  0E0F               	movlw	15
  1729  0011C0  EC35  F007         	call	_lcd_wrCom
  1730                           
  1731                           ;Lcd4Lignes.c: 264: lcd_wrCom(0x01);
  1732  0011C4  0E01               	movlw	1
  1733  0011C6  EC35  F007         	call	_lcd_wrCom
  1734                           
  1735                           ;Lcd4Lignes.c: 265: lcd_wrCom(0x06);
  1736  0011CA  0E06               	movlw	6
  1737  0011CC  EC35  F007         	call	_lcd_wrCom
  1738                           
  1739                           ;Lcd4Lignes.c: 266: lcd_wrCom(0x80);
  1740  0011D0  0E80               	movlw	128
  1741  0011D2  EC35  F007         	call	_lcd_wrCom
  1742  0011D6                     
  1743                           ;Lcd4Lignes.c: 267: lcd_initCGRam();
  1744  0011D6  EC66  F007         	call	_lcd_initCGRam	;wreg free
  1745  0011DA  0012               	return		;funcret
  1746  0011DC                     __end_of_lcd_init:
  1747                           	opt callstack 0
  1748                           
  1749 ;; *************** function _lcd_resetSequence *****************
  1750 ;; Defined at:
  1751 ;;		line 221 in file "Lcd4Lignes.c"
  1752 ;; Parameters:    Size  Location     Type
  1753 ;;		None
  1754 ;; Auto vars:     Size  Location     Type
  1755 ;;		None
  1756 ;; Return value:  Size  Location     Type
  1757 ;;                  1    wreg      void 
  1758 ;; Registers used:
  1759 ;;		wreg, status,2, status,0, cstack
  1760 ;; Tracked objects:
  1761 ;;		On entry : 0/0
  1762 ;;		On exit  : 0/0
  1763 ;;		Unchanged: 0/0
  1764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1765 ;;      Params:         0       0       0       0       0       0       0
  1766 ;;      Locals:         0       0       0       0       0       0       0
  1767 ;;      Temps:          1       0       0       0       0       0       0
  1768 ;;      Totals:         1       0       0       0       0       0       0
  1769 ;;Total ram usage:        1 bytes
  1770 ;; Hardware stack levels used:    1
  1771 ;; Hardware stack levels required when called:    2
  1772 ;; This function calls:
  1773 ;;		_lcd_ecrireDonnees
  1774 ;;		_lcd_strobeEnableBit
  1775 ;; This function is called by:
  1776 ;;		_lcd_init
  1777 ;; This function uses a non-reentrant model
  1778 ;;
  1779                           
  1780                           	psect	text9
  1781  000E06                     __ptext9:
  1782                           	opt callstack 0
  1783  000E06                     _lcd_resetSequence:
  1784                           	opt callstack 27
  1785  000E06                     
  1786                           ;Lcd4Lignes.c: 226: TRISD = 0b00000000;
  1787  000E06  0E00               	movlw	0
  1788  000E08  6E95               	movwf	149,c	;volatile
  1789  000E0A                     
  1790                           ;Lcd4Lignes.c: 228: _delay((unsigned long)((40)*(1000000/4000.0)));
  1791  000E0A  0E0D               	movlw	13
  1792  000E0C  6E03               	movwf	??_lcd_resetSequence^0,c
  1793  000E0E  0EFC               	movlw	252
  1794  000E10                     u1007:
  1795  000E10  2EE8               	decfsz	wreg,f,c
  1796  000E12  D7FE               	bra	u1007
  1797  000E14  2E03               	decfsz	??_lcd_resetSequence^0,f,c
  1798  000E16  D7FC               	bra	u1007
  1799  000E18                     
  1800                           ;Lcd4Lignes.c: 229: PORTAbits.RA0 = 0;
  1801  000E18  9080               	bcf	128,0,c	;volatile
  1802  000E1A                     
  1803                           ;Lcd4Lignes.c: 230: PORTAbits.RA1 = 0;
  1804  000E1A  9280               	bcf	128,1,c	;volatile
  1805  000E1C                     
  1806                           ;Lcd4Lignes.c: 232: lcd_ecrireDonnees(0x03);
  1807  000E1C  0E03               	movlw	3
  1808  000E1E  EC24  F009         	call	_lcd_ecrireDonnees
  1809  000E22                     
  1810                           ;Lcd4Lignes.c: 233: lcd_strobeEnableBit();
  1811  000E22  EC44  F009         	call	_lcd_strobeEnableBit	;wreg free
  1812  000E26                     
  1813                           ;Lcd4Lignes.c: 234: _delay((unsigned long)((40)*(1000000/4000000.0)));
  1814  000E26  0E03               	movlw	3
  1815  000E28                     u1017:
  1816  000E28  2EE8               	decfsz	wreg,f,c
  1817  000E2A  D7FE               	bra	u1017
  1818  000E2C  F000               	nop	
  1819  000E2E                     
  1820                           ;Lcd4Lignes.c: 237: lcd_ecrireDonnees(0x03);
  1821  000E2E  0E03               	movlw	3
  1822  000E30  EC24  F009         	call	_lcd_ecrireDonnees
  1823  000E34                     
  1824                           ;Lcd4Lignes.c: 238: lcd_strobeEnableBit();
  1825  000E34  EC44  F009         	call	_lcd_strobeEnableBit	;wreg free
  1826  000E38                     
  1827                           ;Lcd4Lignes.c: 239: _delay((unsigned long)((40)*(1000000/4000000.0)));
  1828  000E38  0E03               	movlw	3
  1829  000E3A                     u1027:
  1830  000E3A  2EE8               	decfsz	wreg,f,c
  1831  000E3C  D7FE               	bra	u1027
  1832  000E3E  F000               	nop	
  1833  000E40                     
  1834                           ;Lcd4Lignes.c: 241: lcd_ecrireDonnees(0x03);
  1835  000E40  0E03               	movlw	3
  1836  000E42  EC24  F009         	call	_lcd_ecrireDonnees
  1837  000E46                     
  1838                           ;Lcd4Lignes.c: 242: lcd_strobeEnableBit();
  1839  000E46  EC44  F009         	call	_lcd_strobeEnableBit	;wreg free
  1840  000E4A                     
  1841                           ;Lcd4Lignes.c: 243: _delay((unsigned long)((40)*(1000000/4000000.0)));
  1842  000E4A  0E03               	movlw	3
  1843  000E4C                     u1037:
  1844  000E4C  2EE8               	decfsz	wreg,f,c
  1845  000E4E  D7FE               	bra	u1037
  1846  000E50  F000               	nop	
  1847  000E52                     
  1848                           ;Lcd4Lignes.c: 245: lcd_ecrireDonnees(0x02);
  1849  000E52  0E02               	movlw	2
  1850  000E54  EC24  F009         	call	_lcd_ecrireDonnees
  1851  000E58                     
  1852                           ;Lcd4Lignes.c: 246: lcd_strobeEnableBit();
  1853  000E58  EC44  F009         	call	_lcd_strobeEnableBit	;wreg free
  1854  000E5C                     
  1855                           ;Lcd4Lignes.c: 247: _delay((unsigned long)((40)*(1000000/4000000.0)));
  1856  000E5C  0E03               	movlw	3
  1857  000E5E                     u1047:
  1858  000E5E  2EE8               	decfsz	wreg,f,c
  1859  000E60  D7FE               	bra	u1047
  1860  000E62  F000               	nop	
  1861  000E64                     
  1862                           ;Lcd4Lignes.c: 249: TRISD = 0b00001111;
  1863  000E64  0E0F               	movlw	15
  1864  000E66  6E95               	movwf	149,c	;volatile
  1865  000E68  0012               	return		;funcret
  1866  000E6A                     __end_of_lcd_resetSequence:
  1867                           	opt callstack 0
  1868                           
  1869 ;; *************** function _lcd_initCGRam *****************
  1870 ;; Defined at:
  1871 ;;		line 417 in file "Lcd4Lignes.c"
  1872 ;; Parameters:    Size  Location     Type
  1873 ;;		None
  1874 ;; Auto vars:     Size  Location     Type
  1875 ;;  j               1    6[COMRAM] unsigned char 
  1876 ;;  i               1    5[COMRAM] unsigned char 
  1877 ;; Return value:  Size  Location     Type
  1878 ;;                  1    wreg      void 
  1879 ;; Registers used:
  1880 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1881 ;; Tracked objects:
  1882 ;;		On entry : 0/0
  1883 ;;		On exit  : 0/0
  1884 ;;		Unchanged: 0/0
  1885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1886 ;;      Params:         0       0       0       0       0       0       0
  1887 ;;      Locals:         2       0       0       0       0       0       0
  1888 ;;      Temps:          2       0       0       0       0       0       0
  1889 ;;      Totals:         4       0       0       0       0       0       0
  1890 ;;Total ram usage:        4 bytes
  1891 ;; Hardware stack levels used:    1
  1892 ;; Hardware stack levels required when called:    5
  1893 ;; This function calls:
  1894 ;;		_lcd_curseurHome
  1895 ;;		_lcd_wrCom
  1896 ;;		_lcd_wrData
  1897 ;; This function is called by:
  1898 ;;		_lcd_init
  1899 ;; This function uses a non-reentrant model
  1900 ;;
  1901                           
  1902                           	psect	text10
  1903  000ECC                     __ptext10:
  1904                           	opt callstack 0
  1905  000ECC                     _lcd_initCGRam:
  1906                           	opt callstack 24
  1907  000ECC                     
  1908                           ;Lcd4Lignes.c: 419: char i,j;;Lcd4Lignes.c: 421: lcd_wrCom(0x40);
  1909  000ECC  0E40               	movlw	64
  1910  000ECE  EC35  F007         	call	_lcd_wrCom
  1911  000ED2                     
  1912                           ;Lcd4Lignes.c: 422: for(i=0;i<8;i++)
  1913  000ED2  0E00               	movlw	0
  1914  000ED4  6E06               	movwf	lcd_initCGRam@i^0,c
  1915  000ED6                     l1867:
  1916                           
  1917                           ;Lcd4Lignes.c: 423: {;Lcd4Lignes.c: 424: for(j=0;j<8;j++)
  1918  000ED6  0E00               	movlw	0
  1919  000ED8  6E07               	movwf	lcd_initCGRam@j^0,c
  1920  000EDA                     l1873:
  1921                           
  1922                           ;Lcd4Lignes.c: 425: lcd_wrData(matCGRAM[i][j]);
  1923  000EDA  5006               	movf	lcd_initCGRam@i^0,w,c
  1924  000EDC  0D08               	mullw	8
  1925  000EDE  0E60               	movlw	low _matCGRAM
  1926  000EE0  6E04               	movwf	??_lcd_initCGRam^0,c
  1927  000EE2  0E00               	movlw	high _matCGRAM
  1928  000EE4  6E05               	movwf	(??_lcd_initCGRam+1)^0,c
  1929  000EE6  50F3               	movf	243,w,c
  1930  000EE8  2604               	addwf	??_lcd_initCGRam^0,f,c
  1931  000EEA  50F4               	movf	244,w,c
  1932  000EEC  2205               	addwfc	(??_lcd_initCGRam+1)^0,f,c
  1933  000EEE  5007               	movf	lcd_initCGRam@j^0,w,c
  1934  000EF0  2404               	addwf	??_lcd_initCGRam^0,w,c
  1935  000EF2  6ED9               	movwf	fsr2l,c
  1936  000EF4  0E00               	movlw	0
  1937  000EF6  2005               	addwfc	(??_lcd_initCGRam+1)^0,w,c
  1938  000EF8  6EDA               	movwf	fsr2h,c
  1939  000EFA  50DF               	movf	indf2,w,c
  1940  000EFC  ECC3  F008         	call	_lcd_wrData
  1941  000F00  2A07               	incf	lcd_initCGRam@j^0,f,c
  1942  000F02  0E07               	movlw	7
  1943  000F04  6407               	cpfsgt	lcd_initCGRam@j^0,c
  1944  000F06  EF87  F007         	goto	u621
  1945  000F0A  EF89  F007         	goto	u620
  1946  000F0E                     u621:
  1947  000F0E  EF6D  F007         	goto	l1873
  1948  000F12                     u620:
  1949  000F12  2A06               	incf	lcd_initCGRam@i^0,f,c
  1950  000F14  0E07               	movlw	7
  1951  000F16  6406               	cpfsgt	lcd_initCGRam@i^0,c
  1952  000F18  EF90  F007         	goto	u631
  1953  000F1C  EF92  F007         	goto	u630
  1954  000F20                     u631:
  1955  000F20  EF6B  F007         	goto	l1867
  1956  000F24                     u630:
  1957  000F24                     
  1958                           ;Lcd4Lignes.c: 426: };Lcd4Lignes.c: 427: lcd_curseurHome();
  1959  000F24  EC3C  F009         	call	_lcd_curseurHome	;wreg free
  1960  000F28  0012               	return		;funcret
  1961  000F2A                     __end_of_lcd_initCGRam:
  1962                           	opt callstack 0
  1963                           
  1964 ;; *************** function _lcd_curseurHome *****************
  1965 ;; Defined at:
  1966 ;;		line 288 in file "Lcd4Lignes.c"
  1967 ;; Parameters:    Size  Location     Type
  1968 ;;		None
  1969 ;; Auto vars:     Size  Location     Type
  1970 ;;		None
  1971 ;; Return value:  Size  Location     Type
  1972 ;;                  1    wreg      void 
  1973 ;; Registers used:
  1974 ;;		wreg, status,2, status,0, cstack
  1975 ;; Tracked objects:
  1976 ;;		On entry : 0/0
  1977 ;;		On exit  : 0/0
  1978 ;;		Unchanged: 0/0
  1979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1980 ;;      Params:         0       0       0       0       0       0       0
  1981 ;;      Locals:         0       0       0       0       0       0       0
  1982 ;;      Temps:          0       0       0       0       0       0       0
  1983 ;;      Totals:         0       0       0       0       0       0       0
  1984 ;;Total ram usage:        0 bytes
  1985 ;; Hardware stack levels used:    1
  1986 ;; Hardware stack levels required when called:    4
  1987 ;; This function calls:
  1988 ;;		_lcd_wrCom
  1989 ;; This function is called by:
  1990 ;;		_lcd_initCGRam
  1991 ;; This function uses a non-reentrant model
  1992 ;;
  1993                           
  1994                           	psect	text11
  1995  001278                     __ptext11:
  1996                           	opt callstack 0
  1997  001278                     _lcd_curseurHome:
  1998                           	opt callstack 24
  1999  001278                     
  2000                           ;Lcd4Lignes.c: 290: lcd_wrCom(0x02);
  2001  001278  0E02               	movlw	2
  2002  00127A  EC35  F007         	call	_lcd_wrCom
  2003  00127E  0012               	return		;funcret
  2004  001280                     __end_of_lcd_curseurHome:
  2005                           	opt callstack 0
  2006                           
  2007 ;; *************** function _initialisation *****************
  2008 ;; Defined at:
  2009 ;;		line 369 in file "main.c"
  2010 ;; Parameters:    Size  Location     Type
  2011 ;;		None
  2012 ;; Auto vars:     Size  Location     Type
  2013 ;;		None
  2014 ;; Return value:  Size  Location     Type
  2015 ;;                  1    wreg      void 
  2016 ;; Registers used:
  2017 ;;		wreg, status,2, cstack
  2018 ;; Tracked objects:
  2019 ;;		On entry : 0/0
  2020 ;;		On exit  : 0/0
  2021 ;;		Unchanged: 0/0
  2022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2023 ;;      Params:         0       0       0       0       0       0       0
  2024 ;;      Locals:         0       0       0       0       0       0       0
  2025 ;;      Temps:          0       0       0       0       0       0       0
  2026 ;;      Totals:         0       0       0       0       0       0       0
  2027 ;;Total ram usage:        0 bytes
  2028 ;; Hardware stack levels used:    1
  2029 ;; Hardware stack levels required when called:    2
  2030 ;; This function calls:
  2031 ;;		_srand
  2032 ;; This function is called by:
  2033 ;;		_main
  2034 ;; This function uses a non-reentrant model
  2035 ;;
  2036                           
  2037                           	psect	text12
  2038  000FDA                     __ptext12:
  2039                           	opt callstack 0
  2040  000FDA                     _initialisation:
  2041                           	opt callstack 28
  2042  000FDA                     
  2043                           ;main.c: 371: TRISD = 0;
  2044  000FDA  0E00               	movlw	0
  2045  000FDC  6E95               	movwf	149,c	;volatile
  2046                           
  2047                           ;main.c: 373: ANSELH = 0;
  2048  000FDE  0E00               	movlw	0
  2049  000FE0  6E7F               	movwf	127,c	;volatile
  2050  000FE2                     
  2051                           ;main.c: 374: TRISB = 0xFF;
  2052  000FE2  6893               	setf	147,c	;volatile
  2053                           
  2054                           ;main.c: 376: ANSEL = 0;
  2055  000FE4  0E00               	movlw	0
  2056  000FE6  6E7E               	movwf	126,c	;volatile
  2057                           
  2058                           ;main.c: 377: TRISA = 0;
  2059  000FE8  0E00               	movlw	0
  2060  000FEA  6E92               	movwf	146,c	;volatile
  2061  000FEC                     
  2062                           ;main.c: 381: T1CONbits.TMR1ON = 1;
  2063  000FEC  80CD               	bsf	205,0,c	;volatile
  2064  000FEE                     
  2065                           ;main.c: 382: srand(TMR1);
  2066  000FEE  CFCE F001          	movff	4046,srand@x	;volatile
  2067  000FF2  CFCF F002          	movff	4047,srand@x+1	;volatile
  2068  000FF6  EC2E  F009         	call	_srand	;wreg free
  2069  000FFA                     
  2070                           ;main.c: 385: ANSELbits.ANS7 = 1;
  2071  000FFA  8E7E               	bsf	126,7,c	;volatile
  2072  000FFC                     
  2073                           ;main.c: 387: ADCON0bits.ADON = 1;
  2074  000FFC  80C2               	bsf	194,0,c	;volatile
  2075  000FFE                     
  2076                           ;main.c: 388: ADCON1 = 0;
  2077  000FFE  0E00               	movlw	0
  2078  001000  6EC1               	movwf	193,c	;volatile
  2079  001002                     
  2080                           ;main.c: 390: ADCON2bits.ADFM = 0;
  2081  001002  9EC0               	bcf	192,7,c	;volatile
  2082  001004                     
  2083                           ;main.c: 391: ADCON2bits.ACQT = 0;
  2084  001004  0EC7               	movlw	-57
  2085  001006  16C0               	andwf	192,f,c	;volatile
  2086  001008                     
  2087                           ;main.c: 392: ADCON2bits.ADCS = 0;
  2088  001008  0EF8               	movlw	-8
  2089  00100A  16C0               	andwf	192,f,c	;volatile
  2090  00100C                     
  2091                           ;main.c: 396: T0CONbits.TMR0ON = 1;
  2092  00100C  8ED5               	bsf	213,7,c	;volatile
  2093  00100E                     
  2094                           ;main.c: 397: T0CONbits.T08BIT = 0;
  2095  00100E  9CD5               	bcf	213,6,c	;volatile
  2096  001010                     
  2097                           ;main.c: 398: T0CONbits.T0CS = 0;
  2098  001010  9AD5               	bcf	213,5,c	;volatile
  2099  001012                     
  2100                           ;main.c: 399: T0CONbits.PSA = 0;
  2101  001012  96D5               	bcf	213,3,c	;volatile
  2102  001014                     
  2103                           ;main.c: 400: T0CONbits.T0PS = 0b010;
  2104  001014  50D5               	movf	213,w,c	;volatile
  2105  001016  0BF8               	andlw	-8
  2106  001018  0902               	iorlw	2
  2107  00101A  6ED5               	movwf	213,c	;volatile
  2108  00101C                     
  2109                           ;main.c: 401: TMR0 = 0x0BDC;
  2110  00101C  0E0B               	movlw	11
  2111  00101E  6ED7               	movwf	215,c	;volatile
  2112  001020  0EDC               	movlw	220
  2113  001022  6ED6               	movwf	214,c	;volatile
  2114  001024                     
  2115                           ;main.c: 402: INTCONbits.TMR0IE = 1;
  2116  001024  8AF2               	bsf	242,5,c	;volatile
  2117  001026                     
  2118                           ;main.c: 403: INTCONbits.TMR0IF = 0;
  2119  001026  94F2               	bcf	242,2,c	;volatile
  2120  001028                     
  2121                           ;main.c: 404: INTCONbits.PEIE = 1;
  2122  001028  8CF2               	bsf	242,6,c	;volatile
  2123  00102A                     
  2124                           ;main.c: 405: INTCONbits.GIE = 1;
  2125  00102A  8EF2               	bsf	242,7,c	;volatile
  2126  00102C  0012               	return		;funcret
  2127  00102E                     __end_of_initialisation:
  2128                           	opt callstack 0
  2129                           
  2130 ;; *************** function _srand *****************
  2131 ;; Defined at:
  2132 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  2133 ;; Parameters:    Size  Location     Type
  2134 ;;  x               2    0[COMRAM] unsigned int 
  2135 ;; Auto vars:     Size  Location     Type
  2136 ;;		None
  2137 ;; Return value:  Size  Location     Type
  2138 ;;                  1    wreg      void 
  2139 ;; Registers used:
  2140 ;;		status,2
  2141 ;; Tracked objects:
  2142 ;;		On entry : 0/0
  2143 ;;		On exit  : 0/0
  2144 ;;		Unchanged: 0/0
  2145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2146 ;;      Params:         2       0       0       0       0       0       0
  2147 ;;      Locals:         0       0       0       0       0       0       0
  2148 ;;      Temps:          0       0       0       0       0       0       0
  2149 ;;      Totals:         2       0       0       0       0       0       0
  2150 ;;Total ram usage:        2 bytes
  2151 ;; Hardware stack levels used:    1
  2152 ;; Hardware stack levels required when called:    1
  2153 ;; This function calls:
  2154 ;;		Nothing
  2155 ;; This function is called by:
  2156 ;;		_initialisation
  2157 ;; This function uses a non-reentrant model
  2158 ;;
  2159                           
  2160                           	psect	text13
  2161  00125C                     __ptext13:
  2162                           	opt callstack 0
  2163  00125C                     _srand:
  2164                           	opt callstack 28
  2165  00125C  C001  F053         	movff	srand@x,_randx
  2166  001260  C002  F054         	movff	srand@x+1,_randx+1
  2167  001264  6A55               	clrf	(_randx+2)^0,c
  2168  001266  6A56               	clrf	(_randx+3)^0,c
  2169  001268  0012               	return		;funcret
  2170  00126A                     __end_of_srand:
  2171                           	opt callstack 0
  2172                           
  2173 ;; *************** function _init_serie *****************
  2174 ;; Defined at:
  2175 ;;		line 29 in file "serie.c"
  2176 ;; Parameters:    Size  Location     Type
  2177 ;;		None
  2178 ;; Auto vars:     Size  Location     Type
  2179 ;;		None
  2180 ;; Return value:  Size  Location     Type
  2181 ;;                  1    wreg      void 
  2182 ;; Registers used:
  2183 ;;		wreg, status,2
  2184 ;; Tracked objects:
  2185 ;;		On entry : 0/0
  2186 ;;		On exit  : 0/0
  2187 ;;		Unchanged: 0/0
  2188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2189 ;;      Params:         0       0       0       0       0       0       0
  2190 ;;      Locals:         0       0       0       0       0       0       0
  2191 ;;      Temps:          0       0       0       0       0       0       0
  2192 ;;      Totals:         0       0       0       0       0       0       0
  2193 ;;Total ram usage:        0 bytes
  2194 ;; Hardware stack levels used:    1
  2195 ;; Hardware stack levels required when called:    1
  2196 ;; This function calls:
  2197 ;;		Nothing
  2198 ;; This function is called by:
  2199 ;;		_main
  2200 ;; This function uses a non-reentrant model
  2201 ;;
  2202                           
  2203                           	psect	text14
  2204  00122A                     __ptext14:
  2205                           	opt callstack 0
  2206  00122A                     _init_serie:
  2207                           	opt callstack 29
  2208  00122A                     
  2209                           ;serie.c: 32: TRISCbits.TRISC7=1;
  2210  00122A  8E94               	bsf	148,7,c	;volatile
  2211                           
  2212                           ;serie.c: 33: TRISCbits.TRISC6=1;
  2213  00122C  8C94               	bsf	148,6,c	;volatile
  2214  00122E                     
  2215                           ;serie.c: 37: SPBRGH=0x00;
  2216  00122E  0E00               	movlw	0
  2217  001230  6EB0               	movwf	176,c	;volatile
  2218                           
  2219                           ;serie.c: 38: SPBRG=25;
  2220  001232  0E19               	movlw	25
  2221  001234  6EAF               	movwf	175,c	;volatile
  2222  001236                     
  2223                           ;serie.c: 39: BAUDCONbits.BRG16=1;
  2224  001236  86B8               	bsf	184,3,c	;volatile
  2225  001238                     
  2226                           ;serie.c: 40: TXSTAbits.BRGH=1;
  2227  001238  84AC               	bsf	172,2,c	;volatile
  2228  00123A                     
  2229                           ;serie.c: 43: TXSTAbits.SYNC=0;
  2230  00123A  98AC               	bcf	172,4,c	;volatile
  2231  00123C                     
  2232                           ;serie.c: 44: TXSTAbits.TXEN=1;
  2233  00123C  8AAC               	bsf	172,5,c	;volatile
  2234  00123E                     
  2235                           ;serie.c: 45: RCSTAbits.CREN = 1;
  2236  00123E  88AB               	bsf	171,4,c	;volatile
  2237  001240                     
  2238                           ;serie.c: 46: RCSTAbits.SPEN=1;
  2239  001240  8EAB               	bsf	171,7,c	;volatile
  2240                           
  2241                           ;serie.c: 47: ANSEL = 0;
  2242  001242  0E00               	movlw	0
  2243  001244  6E7E               	movwf	126,c	;volatile
  2244  001246  0012               	return		;funcret
  2245  001248                     __end_of_init_serie:
  2246                           	opt callstack 0
  2247                           
  2248 ;; *************** function _feu *****************
  2249 ;; Defined at:
  2250 ;;		line 280 in file "main.c"
  2251 ;; Parameters:    Size  Location     Type
  2252 ;;  x               1    wreg     unsigned char 
  2253 ;;  pts             2    0[COMRAM] PTR int 
  2254 ;;		 -> main@points(2), 
  2255 ;; Auto vars:     Size  Location     Type
  2256 ;;  x               1    3[COMRAM] unsigned char 
  2257 ;; Return value:  Size  Location     Type
  2258 ;;                  1    wreg      void 
  2259 ;; Registers used:
  2260 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2261 ;; Tracked objects:
  2262 ;;		On entry : 0/0
  2263 ;;		On exit  : 0/0
  2264 ;;		Unchanged: 0/0
  2265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2266 ;;      Params:         2       0       0       0       0       0       0
  2267 ;;      Locals:         1       0       0       0       0       0       0
  2268 ;;      Temps:          1       0       0       0       0       0       0
  2269 ;;      Totals:         4       0       0       0       0       0       0
  2270 ;;Total ram usage:        4 bytes
  2271 ;; Hardware stack levels used:    1
  2272 ;; Hardware stack levels required when called:    1
  2273 ;; This function calls:
  2274 ;;		Nothing
  2275 ;; This function is called by:
  2276 ;;		_main
  2277 ;; This function uses a non-reentrant model
  2278 ;;
  2279                           
  2280                           	psect	text15
  2281  000948                     __ptext15:
  2282                           	opt callstack 0
  2283  000948                     _feu:
  2284                           	opt callstack 29
  2285                           
  2286                           ;incstack = 0
  2287                           ;feu@x stored from wreg
  2288  000948  6E04               	movwf	feu@x^0,c
  2289  00094A                     
  2290                           ;main.c: 282: if(m_aliens[2][x-1] == '*')
  2291  00094A  0EC9               	movlw	low (_m_aliens+41)
  2292  00094C  2404               	addwf	feu@x^0,w,c
  2293  00094E  6ED9               	movwf	fsr2l,c
  2294  000950  6ADA               	clrf	fsr2h,c
  2295  000952  0E00               	movlw	high (_m_aliens+41)
  2296  000954  22DA               	addwfc	fsr2h,f,c
  2297  000956  0E2A               	movlw	42
  2298  000958  18DE               	xorwf	postinc2,w,c
  2299  00095A  A4D8               	btfss	status,2,c
  2300  00095C  EFB2  F004         	goto	u911
  2301  000960  EFB4  F004         	goto	u910
  2302  000964                     u911:
  2303  000964  EFC5  F004         	goto	l2133
  2304  000968                     u910:
  2305  000968                     
  2306                           ;main.c: 283: {;main.c: 284: m_aliens[2][x-1] = ' ';
  2307  000968  0EC9               	movlw	low (_m_aliens+41)
  2308  00096A  2404               	addwf	feu@x^0,w,c
  2309  00096C  6ED9               	movwf	fsr2l,c
  2310  00096E  6ADA               	clrf	fsr2h,c
  2311  000970  0E00               	movlw	high (_m_aliens+41)
  2312  000972  22DA               	addwfc	fsr2h,f,c
  2313  000974  0E20               	movlw	32
  2314  000976  6EDF               	movwf	indf2,c
  2315                           
  2316                           ;main.c: 285: (*pts)++;
  2317  000978  C001  FFD9         	movff	feu@pts,fsr2l
  2318  00097C  C002  FFDA         	movff	feu@pts+1,fsr2h
  2319  000980  2ADE               	incf	postinc2,f,c
  2320  000982  0E00               	movlw	0
  2321  000984  22DD               	addwfc	postdec2,f,c
  2322                           
  2323                           ;main.c: 286: }
  2324  000986  EF03  F005         	goto	l130
  2325  00098A                     l2133:
  2326                           
  2327                           ;main.c: 287: else if(m_aliens[1][x-1] == '*')
  2328  00098A  0EB4               	movlw	low (_m_aliens+20)
  2329  00098C  2404               	addwf	feu@x^0,w,c
  2330  00098E  6ED9               	movwf	fsr2l,c
  2331  000990  6ADA               	clrf	fsr2h,c
  2332  000992  0E00               	movlw	high (_m_aliens+20)
  2333  000994  22DA               	addwfc	fsr2h,f,c
  2334  000996  0E2A               	movlw	42
  2335  000998  18DE               	xorwf	postinc2,w,c
  2336  00099A  A4D8               	btfss	status,2,c
  2337  00099C  EFD2  F004         	goto	u921
  2338  0009A0  EFD4  F004         	goto	u920
  2339  0009A4                     u921:
  2340  0009A4  EFE5  F004         	goto	l2137
  2341  0009A8                     u920:
  2342  0009A8                     
  2343                           ;main.c: 288: {;main.c: 289: m_aliens[1][x-1] = ' ';
  2344  0009A8  0EB4               	movlw	low (_m_aliens+20)
  2345  0009AA  2404               	addwf	feu@x^0,w,c
  2346  0009AC  6ED9               	movwf	fsr2l,c
  2347  0009AE  6ADA               	clrf	fsr2h,c
  2348  0009B0  0E00               	movlw	high (_m_aliens+20)
  2349  0009B2  22DA               	addwfc	fsr2h,f,c
  2350  0009B4  0E20               	movlw	32
  2351  0009B6  6EDF               	movwf	indf2,c
  2352                           
  2353                           ;main.c: 290: (*pts)++;
  2354  0009B8  C001  FFD9         	movff	feu@pts,fsr2l
  2355  0009BC  C002  FFDA         	movff	feu@pts+1,fsr2h
  2356  0009C0  2ADE               	incf	postinc2,f,c
  2357  0009C2  0E00               	movlw	0
  2358  0009C4  22DD               	addwfc	postdec2,f,c
  2359                           
  2360                           ;main.c: 291: }
  2361  0009C6  EF03  F005         	goto	l130
  2362  0009CA                     l2137:
  2363                           
  2364                           ;main.c: 295: else if(m_aliens[0][x-1] == '*')
  2365  0009CA  0E9F               	movlw	low (_m_aliens+65535)
  2366  0009CC  2404               	addwf	feu@x^0,w,c
  2367  0009CE  6ED9               	movwf	fsr2l,c
  2368  0009D0  6ADA               	clrf	fsr2h,c
  2369  0009D2  0E00               	movlw	high (_m_aliens+65535)
  2370  0009D4  22DA               	addwfc	fsr2h,f,c
  2371  0009D6  0E2A               	movlw	42
  2372  0009D8  18DE               	xorwf	postinc2,w,c
  2373  0009DA  A4D8               	btfss	status,2,c
  2374  0009DC  EFF2  F004         	goto	u931
  2375  0009E0  EFF4  F004         	goto	u930
  2376  0009E4                     u931:
  2377  0009E4  EF03  F005         	goto	l130
  2378  0009E8                     u930:
  2379  0009E8                     
  2380                           ;main.c: 296: {;main.c: 297: m_aliens[0][x-1] = ' ';
  2381  0009E8  0E9F               	movlw	low (_m_aliens+65535)
  2382  0009EA  2404               	addwf	feu@x^0,w,c
  2383  0009EC  6ED9               	movwf	fsr2l,c
  2384  0009EE  6ADA               	clrf	fsr2h,c
  2385  0009F0  0E00               	movlw	high (_m_aliens+65535)
  2386  0009F2  22DA               	addwfc	fsr2h,f,c
  2387  0009F4  0E20               	movlw	32
  2388  0009F6  6EDF               	movwf	indf2,c
  2389                           
  2390                           ;main.c: 298: (*pts)++;
  2391  0009F8  C001  FFD9         	movff	feu@pts,fsr2l
  2392  0009FC  C002  FFDA         	movff	feu@pts+1,fsr2h
  2393  000A00  2ADE               	incf	postinc2,f,c
  2394  000A02  0E00               	movlw	0
  2395  000A04  22DD               	addwfc	postdec2,f,c
  2396  000A06                     l130:
  2397  000A06  0012               	return		;funcret
  2398  000A08                     __end_of_feu:
  2399                           	opt callstack 0
  2400                           
  2401 ;; *************** function _deplace *****************
  2402 ;; Defined at:
  2403 ;;		line 243 in file "main.c"
  2404 ;; Parameters:    Size  Location     Type
  2405 ;;  x               2    5[COMRAM] PTR unsigned char 
  2406 ;;		 -> main@posX(1), 
  2407 ;; Auto vars:     Size  Location     Type
  2408 ;;  analog          1    8[COMRAM] unsigned char 
  2409 ;; Return value:  Size  Location     Type
  2410 ;;                  1    wreg      void 
  2411 ;; Registers used:
  2412 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2413 ;; Tracked objects:
  2414 ;;		On entry : 0/0
  2415 ;;		On exit  : 0/0
  2416 ;;		Unchanged: 0/0
  2417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2418 ;;      Params:         2       0       0       0       0       0       0
  2419 ;;      Locals:         1       0       0       0       0       0       0
  2420 ;;      Temps:          1       0       0       0       0       0       0
  2421 ;;      Totals:         4       0       0       0       0       0       0
  2422 ;;Total ram usage:        4 bytes
  2423 ;; Hardware stack levels used:    1
  2424 ;; Hardware stack levels required when called:    5
  2425 ;; This function calls:
  2426 ;;		_getAnalog
  2427 ;;		_lcd_gotoXY
  2428 ;;		_lcd_montreCurseur
  2429 ;; This function is called by:
  2430 ;;		_main
  2431 ;; This function uses a non-reentrant model
  2432 ;;
  2433                           
  2434                           	psect	text16
  2435  000A08                     __ptext16:
  2436                           	opt callstack 0
  2437  000A08                     _deplace:
  2438                           	opt callstack 25
  2439  000A08                     
  2440                           ;main.c: 245: char analog = (getAnalog(7));
  2441  000A08  0E07               	movlw	7
  2442  000A0A  ECEE  F008         	call	_getAnalog
  2443  000A0E  6E09               	movwf	deplace@analog^0,c
  2444                           
  2445                           ;main.c: 246: lcd_montreCurseur();
  2446  000A10  EC40  F009         	call	_lcd_montreCurseur	;wreg free
  2447  000A14                     
  2448                           ;main.c: 247: lcd_gotoXY(*x,4);
  2449  000A14  0E04               	movlw	4
  2450  000A16  6E04               	movwf	lcd_gotoXY@y^0,c
  2451  000A18  C006  FFD9         	movff	deplace@x,fsr2l
  2452  000A1C  C007  FFDA         	movff	deplace@x+1,fsr2h
  2453  000A20  50DF               	movf	indf2,w,c
  2454  000A22  ECD0  F006         	call	_lcd_gotoXY
  2455  000A26                     
  2456                           ;main.c: 250: if(analog < 50)
  2457  000A26  0E32               	movlw	50
  2458  000A28  6009               	cpfslt	deplace@analog^0,c
  2459  000A2A  EF19  F005         	goto	u871
  2460  000A2E  EF1B  F005         	goto	u870
  2461  000A32                     u871:
  2462  000A32  EF3B  F005         	goto	l2119
  2463  000A36                     u870:
  2464  000A36                     
  2465                           ;main.c: 251: {;main.c: 252: (*x)--;
  2466  000A36  C006  FFD9         	movff	deplace@x,fsr2l
  2467  000A3A  C007  FFDA         	movff	deplace@x+1,fsr2h
  2468  000A3E  06DF               	decf	indf2,f,c
  2469  000A40                     
  2470                           ;main.c: 253: if(*x <= 0)
  2471  000A40  C006  FFD9         	movff	deplace@x,fsr2l
  2472  000A44  C007  FFDA         	movff	deplace@x+1,fsr2h
  2473  000A48  50DF               	movf	indf2,w,c
  2474  000A4A  A4D8               	btfss	status,2,c
  2475  000A4C  EF2A  F005         	goto	u881
  2476  000A50  EF2C  F005         	goto	u880
  2477  000A54                     u881:
  2478  000A54  EF32  F005         	goto	l2117
  2479  000A58                     u880:
  2480  000A58                     
  2481                           ;main.c: 254: {;main.c: 255: (*x)=20;
  2482  000A58  C006  FFD9         	movff	deplace@x,fsr2l
  2483  000A5C  C007  FFDA         	movff	deplace@x+1,fsr2h
  2484  000A60  0E14               	movlw	20
  2485  000A62  6EDF               	movwf	indf2,c
  2486  000A64                     l2117:
  2487                           
  2488                           ;main.c: 256: };main.c: 257: lcd_gotoXY(*x,4);
  2489  000A64  0E04               	movlw	4
  2490  000A66  6E04               	movwf	lcd_gotoXY@y^0,c
  2491  000A68  C006  FFD9         	movff	deplace@x,fsr2l
  2492  000A6C  C007  FFDA         	movff	deplace@x+1,fsr2h
  2493  000A70  50DF               	movf	indf2,w,c
  2494  000A72  ECD0  F006         	call	_lcd_gotoXY
  2495  000A76                     l2119:
  2496                           
  2497                           ;main.c: 259: };main.c: 262: if(analog > 200)
  2498  000A76  0EC8               	movlw	200
  2499  000A78  6409               	cpfsgt	deplace@analog^0,c
  2500  000A7A  EF41  F005         	goto	u891
  2501  000A7E  EF43  F005         	goto	u890
  2502  000A82                     u891:
  2503  000A82  EF63  F005         	goto	l122
  2504  000A86                     u890:
  2505  000A86                     
  2506                           ;main.c: 263: {;main.c: 264: (*x)++;
  2507  000A86  C006  FFD9         	movff	deplace@x,fsr2l
  2508  000A8A  C007  FFDA         	movff	deplace@x+1,fsr2h
  2509  000A8E  2ADF               	incf	indf2,f,c
  2510  000A90                     
  2511                           ;main.c: 265: if(*x >= 21)
  2512  000A90  C006  FFD9         	movff	deplace@x,fsr2l
  2513  000A94  C007  FFDA         	movff	deplace@x+1,fsr2h
  2514  000A98  0E14               	movlw	20
  2515  000A9A  64DF               	cpfsgt	indf2,c
  2516  000A9C  EF52  F005         	goto	u901
  2517  000AA0  EF54  F005         	goto	u900
  2518  000AA4                     u901:
  2519  000AA4  EF5A  F005         	goto	l2127
  2520  000AA8                     u900:
  2521  000AA8                     
  2522                           ;main.c: 266: {;main.c: 267: *x=1;
  2523  000AA8  C006  FFD9         	movff	deplace@x,fsr2l
  2524  000AAC  C007  FFDA         	movff	deplace@x+1,fsr2h
  2525  000AB0  0E01               	movlw	1
  2526  000AB2  6EDF               	movwf	indf2,c
  2527  000AB4                     l2127:
  2528                           
  2529                           ;main.c: 268: };main.c: 269: lcd_gotoXY(*x,4);
  2530  000AB4  0E04               	movlw	4
  2531  000AB6  6E04               	movwf	lcd_gotoXY@y^0,c
  2532  000AB8  C006  FFD9         	movff	deplace@x,fsr2l
  2533  000ABC  C007  FFDA         	movff	deplace@x+1,fsr2h
  2534  000AC0  50DF               	movf	indf2,w,c
  2535  000AC2  ECD0  F006         	call	_lcd_gotoXY
  2536  000AC6                     l122:
  2537  000AC6  0012               	return		;funcret
  2538  000AC8                     __end_of_deplace:
  2539                           	opt callstack 0
  2540                           
  2541 ;; *************** function _lcd_montreCurseur *****************
  2542 ;; Defined at:
  2543 ;;		line 412 in file "Lcd4Lignes.c"
  2544 ;; Parameters:    Size  Location     Type
  2545 ;;		None
  2546 ;; Auto vars:     Size  Location     Type
  2547 ;;		None
  2548 ;; Return value:  Size  Location     Type
  2549 ;;                  1    wreg      void 
  2550 ;; Registers used:
  2551 ;;		wreg, status,2, status,0, cstack
  2552 ;; Tracked objects:
  2553 ;;		On entry : 0/0
  2554 ;;		On exit  : 0/0
  2555 ;;		Unchanged: 0/0
  2556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2557 ;;      Params:         0       0       0       0       0       0       0
  2558 ;;      Locals:         0       0       0       0       0       0       0
  2559 ;;      Temps:          0       0       0       0       0       0       0
  2560 ;;      Totals:         0       0       0       0       0       0       0
  2561 ;;Total ram usage:        0 bytes
  2562 ;; Hardware stack levels used:    1
  2563 ;; Hardware stack levels required when called:    4
  2564 ;; This function calls:
  2565 ;;		_lcd_wrCom
  2566 ;; This function is called by:
  2567 ;;		_deplace
  2568 ;; This function uses a non-reentrant model
  2569 ;;
  2570                           
  2571                           	psect	text17
  2572  001280                     __ptext17:
  2573                           	opt callstack 0
  2574  001280                     _lcd_montreCurseur:
  2575                           	opt callstack 25
  2576  001280                     
  2577                           ;Lcd4Lignes.c: 414: lcd_wrCom(0x0F);
  2578  001280  0E0F               	movlw	15
  2579  001282  EC35  F007         	call	_lcd_wrCom
  2580  001286  0012               	return		;funcret
  2581  001288                     __end_of_lcd_montreCurseur:
  2582                           	opt callstack 0
  2583                           
  2584 ;; *************** function _getAnalog *****************
  2585 ;; Defined at:
  2586 ;;		line 352 in file "main.c"
  2587 ;; Parameters:    Size  Location     Type
  2588 ;;  canal           1    wreg     unsigned char 
  2589 ;; Auto vars:     Size  Location     Type
  2590 ;;  canal           1    1[COMRAM] unsigned char 
  2591 ;; Return value:  Size  Location     Type
  2592 ;;                  1    wreg      unsigned char 
  2593 ;; Registers used:
  2594 ;;		wreg, status,2, status,0
  2595 ;; Tracked objects:
  2596 ;;		On entry : 0/0
  2597 ;;		On exit  : 0/0
  2598 ;;		Unchanged: 0/0
  2599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2600 ;;      Params:         0       0       0       0       0       0       0
  2601 ;;      Locals:         1       0       0       0       0       0       0
  2602 ;;      Temps:          1       0       0       0       0       0       0
  2603 ;;      Totals:         2       0       0       0       0       0       0
  2604 ;;Total ram usage:        2 bytes
  2605 ;; Hardware stack levels used:    1
  2606 ;; Hardware stack levels required when called:    1
  2607 ;; This function calls:
  2608 ;;		Nothing
  2609 ;; This function is called by:
  2610 ;;		_deplace
  2611 ;; This function uses a non-reentrant model
  2612 ;;
  2613                           
  2614                           	psect	text18
  2615  0011DC                     __ptext18:
  2616                           	opt callstack 0
  2617  0011DC                     _getAnalog:
  2618                           	opt callstack 28
  2619                           
  2620                           ;incstack = 0
  2621                           ;getAnalog@canal stored from wreg
  2622  0011DC  6E02               	movwf	getAnalog@canal^0,c
  2623  0011DE                     
  2624                           ;main.c: 354: ADCON0bits.CHS = canal;
  2625  0011DE  C002  F001         	movff	getAnalog@canal,??_getAnalog
  2626  0011E2  4601               	rlncf	??_getAnalog^0,f,c
  2627  0011E4  4601               	rlncf	??_getAnalog^0,f,c
  2628  0011E6  50C2               	movf	194,w,c	;volatile
  2629  0011E8  1801               	xorwf	??_getAnalog^0,w,c
  2630  0011EA  0BC3               	andlw	-61
  2631  0011EC  1801               	xorwf	??_getAnalog^0,w,c
  2632  0011EE  6EC2               	movwf	194,c	;volatile
  2633  0011F0                     
  2634                           ;main.c: 356: ADCON0bits.GO_DONE = 1;
  2635  0011F0  82C2               	bsf	194,1,c	;volatile
  2636  0011F2                     l144:
  2637  0011F2  B2C2               	btfsc	194,1,c	;volatile
  2638  0011F4  EFFE  F008         	goto	u101
  2639  0011F8  EF00  F009         	goto	u100
  2640  0011FC                     u101:
  2641  0011FC  EFF9  F008         	goto	l144
  2642  001200                     u100:
  2643  001200                     
  2644                           ;main.c: 359: return ADRESH;
  2645  001200  50C4               	movf	196,w,c	;volatile
  2646  001202  0012               	return		;funcret
  2647  001204                     __end_of_getAnalog:
  2648                           	opt callstack 0
  2649                           
  2650 ;; *************** function _affichePerdu *****************
  2651 ;; Defined at:
  2652 ;;		line 337 in file "main.c"
  2653 ;; Parameters:    Size  Location     Type
  2654 ;;  pts             2   14[COMRAM] int 
  2655 ;; Auto vars:     Size  Location     Type
  2656 ;;		None
  2657 ;; Return value:  Size  Location     Type
  2658 ;;                  1    wreg      void 
  2659 ;; Registers used:
  2660 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2661 ;; Tracked objects:
  2662 ;;		On entry : 0/0
  2663 ;;		On exit  : 0/0
  2664 ;;		Unchanged: 0/0
  2665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2666 ;;      Params:         2       0       0       0       0       0       0
  2667 ;;      Locals:         0       0       0       0       0       0       0
  2668 ;;      Temps:          3       0       0       0       0       0       0
  2669 ;;      Totals:         5       0       0       0       0       0       0
  2670 ;;Total ram usage:        5 bytes
  2671 ;; Hardware stack levels used:    1
  2672 ;; Hardware stack levels required when called:    6
  2673 ;; This function calls:
  2674 ;;		_lcd_effaceAffichage
  2675 ;;		_lcd_gotoXY
  2676 ;;		_lcd_putMessage
  2677 ;; This function is called by:
  2678 ;;		_main
  2679 ;; This function uses a non-reentrant model
  2680 ;;
  2681                           
  2682                           	psect	text19
  2683  000F2A                     __ptext19:
  2684                           	opt callstack 0
  2685  000F2A                     _affichePerdu:
  2686                           	opt callstack 24
  2687  000F2A                     
  2688                           ;main.c: 339: lcd_effaceAffichage();
  2689  000F2A  EC35  F009         	call	_lcd_effaceAffichage	;wreg free
  2690                           
  2691                           ;main.c: 340: lcd_gotoXY(1,1);
  2692  000F2E  0E01               	movlw	1
  2693  000F30  6E04               	movwf	lcd_gotoXY@y^0,c
  2694  000F32  0E01               	movlw	1
  2695  000F34  ECD0  F006         	call	_lcd_gotoXY
  2696  000F38                     
  2697                           ;main.c: 341: lcd_putMessage("Nombre de points: ");
  2698  000F38  0E01               	movlw	low STR_1
  2699  000F3A  6E06               	movwf	lcd_putMessage@chaine^0,c
  2700  000F3C  0E06               	movlw	high STR_1
  2701  000F3E  6E07               	movwf	(lcd_putMessage@chaine+1)^0,c
  2702  000F40  5006               	movf	lcd_putMessage@chaine^0,w,c
  2703  000F42  1007               	iorwf	(lcd_putMessage@chaine+1)^0,w,c
  2704  000F44  A4D8               	btfss	status,2,c
  2705  000F46  0E00               	movlw	low (__mediumconst shr (0+16))
  2706  000F48  6E08               	movwf	(lcd_putMessage@chaine+2)^0,c
  2707  000F4A  ECBC  F005         	call	_lcd_putMessage	;wreg free
  2708  000F4E                     
  2709                           ;main.c: 342: lcd_putMessage(pts);
  2710  000F4E  C00F  F011         	movff	affichePerdu@pts,??_affichePerdu
  2711  000F52  C010  F012         	movff	affichePerdu@pts+1,??_affichePerdu+1
  2712  000F56  6A13               	clrf	(??_affichePerdu+2)^0,c
  2713  000F58  BE12               	btfsc	(??_affichePerdu+1)^0,7,c
  2714  000F5A  6813               	setf	(??_affichePerdu+2)^0,c
  2715  000F5C  C011  F006         	movff	??_affichePerdu,lcd_putMessage@chaine
  2716  000F60  C012  F007         	movff	??_affichePerdu+1,lcd_putMessage@chaine+1
  2717  000F64  C013  F008         	movff	??_affichePerdu+2,lcd_putMessage@chaine+2
  2718  000F68  ECBC  F005         	call	_lcd_putMessage	;wreg free
  2719  000F6C                     
  2720                           ;main.c: 343: _delay((unsigned long)((3000)*(1000000/4000.0)));
  2721  000F6C  0E04               	movlw	4
  2722  000F6E  6E12               	movwf	(??_affichePerdu+1)^0,c
  2723  000F70  0ECF               	movlw	207
  2724  000F72  6E11               	movwf	??_affichePerdu^0,c
  2725  000F74  0E02               	movlw	2
  2726  000F76                     u1057:
  2727  000F76  2EE8               	decfsz	wreg,f,c
  2728  000F78  D7FE               	bra	u1057
  2729  000F7A  2E11               	decfsz	??_affichePerdu^0,f,c
  2730  000F7C  D7FC               	bra	u1057
  2731  000F7E  2E12               	decfsz	(??_affichePerdu+1)^0,f,c
  2732  000F80  D7FA               	bra	u1057
  2733  000F82  0012               	return		;funcret
  2734  000F84                     __end_of_affichePerdu:
  2735                           	opt callstack 0
  2736                           
  2737 ;; *************** function _lcd_effaceAffichage *****************
  2738 ;; Defined at:
  2739 ;;		line 276 in file "Lcd4Lignes.c"
  2740 ;; Parameters:    Size  Location     Type
  2741 ;;		None
  2742 ;; Auto vars:     Size  Location     Type
  2743 ;;		None
  2744 ;; Return value:  Size  Location     Type
  2745 ;;                  1    wreg      void 
  2746 ;; Registers used:
  2747 ;;		wreg, status,2, status,0, cstack
  2748 ;; Tracked objects:
  2749 ;;		On entry : 0/0
  2750 ;;		On exit  : 0/0
  2751 ;;		Unchanged: 0/0
  2752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2753 ;;      Params:         0       0       0       0       0       0       0
  2754 ;;      Locals:         0       0       0       0       0       0       0
  2755 ;;      Temps:          0       0       0       0       0       0       0
  2756 ;;      Totals:         0       0       0       0       0       0       0
  2757 ;;Total ram usage:        0 bytes
  2758 ;; Hardware stack levels used:    1
  2759 ;; Hardware stack levels required when called:    4
  2760 ;; This function calls:
  2761 ;;		_lcd_wrCom
  2762 ;; This function is called by:
  2763 ;;		_main
  2764 ;;		_affichePerdu
  2765 ;; This function uses a non-reentrant model
  2766 ;;
  2767                           
  2768                           	psect	text20
  2769  00126A                     __ptext20:
  2770                           	opt callstack 0
  2771  00126A                     _lcd_effaceAffichage:
  2772                           	opt callstack 26
  2773  00126A                     
  2774                           ;Lcd4Lignes.c: 278: lcd_wrCom(0x01);
  2775  00126A  0E01               	movlw	1
  2776  00126C  EC35  F007         	call	_lcd_wrCom
  2777                           
  2778                           ;Lcd4Lignes.c: 279: lcd_wrCom(0x80);
  2779  001270  0E80               	movlw	128
  2780  001272  EC35  F007         	call	_lcd_wrCom
  2781  001276  0012               	return		;funcret
  2782  001278                     __end_of_lcd_effaceAffichage:
  2783                           	opt callstack 0
  2784                           
  2785 ;; *************** function _afficheAliens *****************
  2786 ;; Defined at:
  2787 ;;		line 225 in file "main.c"
  2788 ;; Parameters:    Size  Location     Type
  2789 ;;		None
  2790 ;; Auto vars:     Size  Location     Type
  2791 ;;  i               1   16[COMRAM] unsigned char 
  2792 ;; Return value:  Size  Location     Type
  2793 ;;                  1    wreg      void 
  2794 ;; Registers used:
  2795 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2796 ;; Tracked objects:
  2797 ;;		On entry : 0/0
  2798 ;;		On exit  : 0/0
  2799 ;;		Unchanged: 0/0
  2800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2801 ;;      Params:         0       0       0       0       0       0       0
  2802 ;;      Locals:         1       0       0       0       0       0       0
  2803 ;;      Temps:          2       0       0       0       0       0       0
  2804 ;;      Totals:         3       0       0       0       0       0       0
  2805 ;;Total ram usage:        3 bytes
  2806 ;; Hardware stack levels used:    1
  2807 ;; Hardware stack levels required when called:    6
  2808 ;; This function calls:
  2809 ;;		_lcd_gotoXY
  2810 ;;		_lcd_putMessage
  2811 ;; This function is called by:
  2812 ;;		_main
  2813 ;; This function uses a non-reentrant model
  2814 ;;
  2815                           
  2816                           	psect	text21
  2817  0010CC                     __ptext21:
  2818                           	opt callstack 0
  2819  0010CC                     _afficheAliens:
  2820                           	opt callstack 24
  2821  0010CC                     
  2822                           ;main.c: 227: for(char i =0; i<4;i++)
  2823  0010CC  0E00               	movlw	0
  2824  0010CE  6E11               	movwf	afficheAliens@i^0,c
  2825  0010D0                     l2097:
  2826                           
  2827                           ;main.c: 228: {;main.c: 229: lcd_gotoXY(1,i+1);
  2828  0010D0  2811               	incf	afficheAliens@i^0,w,c
  2829  0010D2  6E04               	movwf	lcd_gotoXY@y^0,c
  2830  0010D4  0E01               	movlw	1
  2831  0010D6  ECD0  F006         	call	_lcd_gotoXY
  2832  0010DA                     
  2833                           ;main.c: 230: lcd_putMessage(m_aliens[i]);
  2834  0010DA  5011               	movf	afficheAliens@i^0,w,c
  2835  0010DC  0D15               	mullw	21
  2836  0010DE  0EA0               	movlw	low _m_aliens
  2837  0010E0  24F3               	addwf	243,w,c
  2838  0010E2  6E0F               	movwf	??_afficheAliens^0,c
  2839  0010E4  0E00               	movlw	high _m_aliens
  2840  0010E6  20F4               	addwfc	prodh,w,c
  2841  0010E8  6E10               	movwf	(??_afficheAliens+1)^0,c
  2842  0010EA  C00F  F006         	movff	??_afficheAliens,lcd_putMessage@chaine
  2843  0010EE  C010  F007         	movff	??_afficheAliens+1,lcd_putMessage@chaine+1
  2844  0010F2  5006               	movf	lcd_putMessage@chaine^0,w,c
  2845  0010F4  1007               	iorwf	(lcd_putMessage@chaine+1)^0,w,c
  2846  0010F6  A4D8               	btfss	status,2,c
  2847  0010F8  0E20               	movlw	32
  2848  0010FA  6E08               	movwf	(lcd_putMessage@chaine+2)^0,c
  2849  0010FC  ECBC  F005         	call	_lcd_putMessage	;wreg free
  2850  001100  2A11               	incf	afficheAliens@i^0,f,c
  2851  001102  0E03               	movlw	3
  2852  001104  6411               	cpfsgt	afficheAliens@i^0,c
  2853  001106  EF87  F008         	goto	u861
  2854  00110A  EF89  F008         	goto	u860
  2855  00110E                     u861:
  2856  00110E  EF68  F008         	goto	l2097
  2857  001112                     u860:
  2858  001112  0012               	return		;funcret
  2859  001114                     __end_of_afficheAliens:
  2860                           	opt callstack 0
  2861                           
  2862 ;; *************** function _lcd_putMessage *****************
  2863 ;; Defined at:
  2864 ;;		line 387 in file "Lcd4Lignes.c"
  2865 ;; Parameters:    Size  Location     Type
  2866 ;;  chaine          3    5[COMRAM] PTR const unsigned char 
  2867 ;;		 -> ROM(32767), STR_1(19), m_aliens(84), 
  2868 ;; Auto vars:     Size  Location     Type
  2869 ;;  j               1   13[COMRAM] unsigned char 
  2870 ;; Return value:  Size  Location     Type
  2871 ;;                  1    wreg      void 
  2872 ;; Registers used:
  2873 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2874 ;; Tracked objects:
  2875 ;;		On entry : 0/0
  2876 ;;		On exit  : 0/0
  2877 ;;		Unchanged: 0/0
  2878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2879 ;;      Params:         3       0       0       0       0       0       0
  2880 ;;      Locals:         1       0       0       0       0       0       0
  2881 ;;      Temps:          5       0       0       0       0       0       0
  2882 ;;      Totals:         9       0       0       0       0       0       0
  2883 ;;Total ram usage:        9 bytes
  2884 ;; Hardware stack levels used:    1
  2885 ;; Hardware stack levels required when called:    5
  2886 ;; This function calls:
  2887 ;;		_lcd_ecritChar
  2888 ;; This function is called by:
  2889 ;;		_afficheAliens
  2890 ;;		_affichePerdu
  2891 ;; This function uses a non-reentrant model
  2892 ;;
  2893                           
  2894                           	psect	text22
  2895  000B78                     __ptext22:
  2896                           	opt callstack 0
  2897  000B78                     _lcd_putMessage:
  2898                           	opt callstack 24
  2899  000B78                     
  2900                           ;Lcd4Lignes.c: 389: unsigned char j;;Lcd4Lignes.c: 391: for(j = 0; chaine[j] != 0; j++)
  2901  000B78  0E00               	movlw	0
  2902  000B7A  6E0E               	movwf	lcd_putMessage@j^0,c
  2903  000B7C  EFE2  F005         	goto	l1819
  2904  000B80                     l1815:
  2905                           
  2906                           ;Lcd4Lignes.c: 392: lcd_ecritChar(chaine[j]);
  2907  000B80  500E               	movf	lcd_putMessage@j^0,w,c
  2908  000B82  0D01               	mullw	1
  2909  000B84  CFF3 F009          	movff	prodl,??_lcd_putMessage
  2910  000B88  CFF4 F00A          	movff	prodh,??_lcd_putMessage+1
  2911  000B8C  5009               	movf	??_lcd_putMessage^0,w,c
  2912  000B8E  2406               	addwf	lcd_putMessage@chaine^0,w,c
  2913  000B90  6E0B               	movwf	(??_lcd_putMessage+2)^0,c
  2914  000B92  500A               	movf	(??_lcd_putMessage+1)^0,w,c
  2915  000B94  2007               	addwfc	(lcd_putMessage@chaine+1)^0,w,c
  2916  000B96  6E0C               	movwf	(??_lcd_putMessage+3)^0,c
  2917  000B98  0E00               	movlw	0
  2918  000B9A  2008               	addwfc	(lcd_putMessage@chaine+2)^0,w,c
  2919  000B9C  6E0D               	movwf	(??_lcd_putMessage+4)^0,c
  2920  000B9E  C00B  FFF6         	movff	??_lcd_putMessage+2,tblptrl
  2921  000BA2  C00C  FFF7         	movff	??_lcd_putMessage+3,tblptrh
  2922  000BA6  C00D  FFF8         	movff	??_lcd_putMessage+4,tblptru
  2923  000BAA  BAF8               	btfsc	tblptru,5,c
  2924  000BAC  D003               	bra	u597
  2925  000BAE  0008               	tblrd		*
  2926  000BB0  50F5               	movf	tablat,w,c
  2927  000BB2  D005               	bra	u590
  2928  000BB4                     u597:
  2929  000BB4  CFF6 FFE1          	movff	tblptrl,fsr1l
  2930  000BB8  CFF7 FFE2          	movff	tblptrh,fsr1h
  2931  000BBC  50E7               	movf	indf1,w,c
  2932  000BBE                     u590:
  2933  000BBE  EC40  F008         	call	_lcd_ecritChar
  2934  000BC2  2A0E               	incf	lcd_putMessage@j^0,f,c
  2935  000BC4                     l1819:
  2936  000BC4  500E               	movf	lcd_putMessage@j^0,w,c
  2937  000BC6  0D01               	mullw	1
  2938  000BC8  CFF3 F009          	movff	prodl,??_lcd_putMessage
  2939  000BCC  CFF4 F00A          	movff	prodh,??_lcd_putMessage+1
  2940  000BD0  5009               	movf	??_lcd_putMessage^0,w,c
  2941  000BD2  2406               	addwf	lcd_putMessage@chaine^0,w,c
  2942  000BD4  6E0B               	movwf	(??_lcd_putMessage+2)^0,c
  2943  000BD6  500A               	movf	(??_lcd_putMessage+1)^0,w,c
  2944  000BD8  2007               	addwfc	(lcd_putMessage@chaine+1)^0,w,c
  2945  000BDA  6E0C               	movwf	(??_lcd_putMessage+3)^0,c
  2946  000BDC  0E00               	movlw	0
  2947  000BDE  2008               	addwfc	(lcd_putMessage@chaine+2)^0,w,c
  2948  000BE0  6E0D               	movwf	(??_lcd_putMessage+4)^0,c
  2949  000BE2  C00B  FFF6         	movff	??_lcd_putMessage+2,tblptrl
  2950  000BE6  C00C  FFF7         	movff	??_lcd_putMessage+3,tblptrh
  2951  000BEA  C00D  FFF8         	movff	??_lcd_putMessage+4,tblptru
  2952  000BEE  BAF8               	btfsc	tblptru,5,c
  2953  000BF0  D003               	bra	u607
  2954  000BF2  0008               	tblrd		*
  2955  000BF4  50F5               	movf	tablat,w,c
  2956  000BF6  D005               	bra	u600
  2957  000BF8                     u607:
  2958  000BF8  CFF6 FFE1          	movff	tblptrl,fsr1l
  2959  000BFC  CFF7 FFE2          	movff	tblptrh,fsr1h
  2960  000C00  50E7               	movf	indf1,w,c
  2961  000C02                     u600:
  2962  000C02  0900               	iorlw	0
  2963  000C04  A4D8               	btfss	status,2,c
  2964  000C06  EF07  F006         	goto	u611
  2965  000C0A  EF09  F006         	goto	u610
  2966  000C0E                     u611:
  2967  000C0E  EFC0  F005         	goto	l1815
  2968  000C12                     u610:
  2969  000C12  0012               	return		;funcret
  2970  000C14                     __end_of_lcd_putMessage:
  2971                           	opt callstack 0
  2972                           
  2973 ;; *************** function _lcd_ecritChar *****************
  2974 ;; Defined at:
  2975 ;;		line 359 in file "Lcd4Lignes.c"
  2976 ;; Parameters:    Size  Location     Type
  2977 ;;  car             1    wreg     unsigned char 
  2978 ;; Auto vars:     Size  Location     Type
  2979 ;;  car             1    3[COMRAM] unsigned char 
  2980 ;;  posRam          1    4[COMRAM] unsigned char 
  2981 ;; Return value:  Size  Location     Type
  2982 ;;                  1    wreg      void 
  2983 ;; Registers used:
  2984 ;;		wreg, status,2, status,0, cstack
  2985 ;; Tracked objects:
  2986 ;;		On entry : 0/0
  2987 ;;		On exit  : 0/0
  2988 ;;		Unchanged: 0/0
  2989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2990 ;;      Params:         0       0       0       0       0       0       0
  2991 ;;      Locals:         2       0       0       0       0       0       0
  2992 ;;      Temps:          0       0       0       0       0       0       0
  2993 ;;      Totals:         2       0       0       0       0       0       0
  2994 ;;Total ram usage:        2 bytes
  2995 ;; Hardware stack levels used:    1
  2996 ;; Hardware stack levels required when called:    4
  2997 ;; This function calls:
  2998 ;;		_lcd_wrCom
  2999 ;;		_lcd_wrData
  3000 ;; This function is called by:
  3001 ;;		_lcd_putMessage
  3002 ;; This function uses a non-reentrant model
  3003 ;;
  3004                           
  3005                           	psect	text23
  3006  001080                     __ptext23:
  3007                           	opt callstack 0
  3008  001080                     _lcd_ecritChar:
  3009                           	opt callstack 24
  3010                           
  3011                           ;incstack = 0
  3012                           ;lcd_ecritChar@car stored from wreg
  3013  001080  6E04               	movwf	lcd_ecritChar@car^0,c
  3014  001082                     
  3015                           ;Lcd4Lignes.c: 361: unsigned char posRam;;Lcd4Lignes.c: 363: posRam = lcd_wrData(car);
  3016  001082  5004               	movf	lcd_ecritChar@car^0,w,c
  3017  001084  ECC3  F008         	call	_lcd_wrData
  3018  001088  6E05               	movwf	lcd_ecritChar@posRam^0,c
  3019                           
  3020                           ;Lcd4Lignes.c: 364: switch(posRam)
  3021  00108A  EF56  F008         	goto	l1771
  3022  00108E                     l1763:
  3023                           
  3024                           ;Lcd4Lignes.c: 367: lcd_wrCom(0xC0|0x80);
  3025  00108E  0EC0               	movlw	192
  3026  001090  EC35  F007         	call	_lcd_wrCom
  3027                           
  3028                           ;Lcd4Lignes.c: 368: break;
  3029  001094  EF65  F008         	goto	l230
  3030  001098                     l1765:
  3031                           
  3032                           ;Lcd4Lignes.c: 370: lcd_wrCom(0x94|0x80);
  3033  001098  0E94               	movlw	148
  3034  00109A  EC35  F007         	call	_lcd_wrCom
  3035                           
  3036                           ;Lcd4Lignes.c: 371: break;
  3037  00109E  EF65  F008         	goto	l230
  3038  0010A2                     l1767:
  3039                           
  3040                           ;Lcd4Lignes.c: 373: lcd_wrCom(0xD4|0x80);
  3041  0010A2  0ED4               	movlw	212
  3042  0010A4  EC35  F007         	call	_lcd_wrCom
  3043                           
  3044                           ;Lcd4Lignes.c: 374: break;
  3045  0010A8  EF65  F008         	goto	l230
  3046  0010AC                     l1771:
  3047  0010AC  5005               	movf	lcd_ecritChar@posRam^0,w,c
  3048                           
  3049                           ; Switch size 1, requested type "simple"
  3050                           ; Number of cases is 3, Range of values is 148 to 212
  3051                           ; switch strategies available:
  3052                           ; Name         Instructions Cycles
  3053                           ; simple_byte           10     6 (average)
  3054                           ;	Chosen strategy is simple_byte
  3055  0010AE  0A94               	xorlw	148	; case 148
  3056  0010B0  B4D8               	btfsc	status,2,c
  3057  0010B2  EF47  F008         	goto	l1763
  3058  0010B6  0A54               	xorlw	84	; case 192
  3059  0010B8  B4D8               	btfsc	status,2,c
  3060  0010BA  EF51  F008         	goto	l1767
  3061  0010BE  0A14               	xorlw	20	; case 212
  3062  0010C0  B4D8               	btfsc	status,2,c
  3063  0010C2  EF4C  F008         	goto	l1765
  3064  0010C6  EF65  F008         	goto	l230
  3065  0010CA                     l230:
  3066  0010CA  0012               	return		;funcret
  3067  0010CC                     __end_of_lcd_ecritChar:
  3068                           	opt callstack 0
  3069                           
  3070 ;; *************** function _lcd_wrData *****************
  3071 ;; Defined at:
  3072 ;;		line 188 in file "Lcd4Lignes.c"
  3073 ;; Parameters:    Size  Location     Type
  3074 ;;  caractere       1    wreg     unsigned char 
  3075 ;; Auto vars:     Size  Location     Type
  3076 ;;  caractere       1    2[COMRAM] unsigned char 
  3077 ;; Return value:  Size  Location     Type
  3078 ;;                  1    wreg      unsigned char 
  3079 ;; Registers used:
  3080 ;;		wreg, status,2, status,0, cstack
  3081 ;; Tracked objects:
  3082 ;;		On entry : 0/0
  3083 ;;		On exit  : 0/0
  3084 ;;		Unchanged: 0/0
  3085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3086 ;;      Params:         0       0       0       0       0       0       0
  3087 ;;      Locals:         1       0       0       0       0       0       0
  3088 ;;      Temps:          0       0       0       0       0       0       0
  3089 ;;      Totals:         1       0       0       0       0       0       0
  3090 ;;Total ram usage:        1 bytes
  3091 ;; Hardware stack levels used:    1
  3092 ;; Hardware stack levels required when called:    3
  3093 ;; This function calls:
  3094 ;;		_lcd_busy
  3095 ;;		_lcd_ecrireDonnees
  3096 ;;		_lcd_strobeEnableBit
  3097 ;; This function is called by:
  3098 ;;		_lcd_ecritChar
  3099 ;;		_lcd_initCGRam
  3100 ;;		_lcd_effaceChar
  3101 ;; This function uses a non-reentrant model
  3102 ;;
  3103                           
  3104                           	psect	text24
  3105  001186                     __ptext24:
  3106                           	opt callstack 0
  3107  001186                     _lcd_wrData:
  3108                           	opt callstack 25
  3109                           
  3110                           ;incstack = 0
  3111                           ;lcd_wrData@caractere stored from wreg
  3112  001186  6E03               	movwf	lcd_wrData@caractere^0,c
  3113  001188                     
  3114                           ;Lcd4Lignes.c: 190: lcd_busy();
  3115  001188  ECA7  F008         	call	_lcd_busy	;wreg free
  3116  00118C                     
  3117                           ;Lcd4Lignes.c: 191: TRISD = 0b00000000;
  3118  00118C  0E00               	movlw	0
  3119  00118E  6E95               	movwf	149,c	;volatile
  3120  001190                     
  3121                           ;Lcd4Lignes.c: 194: PORTAbits.RA0 = 1;
  3122  001190  8080               	bsf	128,0,c	;volatile
  3123  001192                     
  3124                           ;Lcd4Lignes.c: 195: PORTAbits.RA1 = 0;
  3125  001192  9280               	bcf	128,1,c	;volatile
  3126  001194                     
  3127                           ;Lcd4Lignes.c: 197: lcd_ecrireDonnees(caractere >> 4);
  3128  001194  3803               	swapf	lcd_wrData@caractere^0,w,c
  3129  001196  0B0F               	andlw	15
  3130  001198  EC24  F009         	call	_lcd_ecrireDonnees
  3131  00119C                     
  3132                           ;Lcd4Lignes.c: 198: lcd_strobeEnableBit();
  3133  00119C  EC44  F009         	call	_lcd_strobeEnableBit	;wreg free
  3134  0011A0                     
  3135                           ;Lcd4Lignes.c: 201: lcd_ecrireDonnees(caractere);
  3136  0011A0  5003               	movf	lcd_wrData@caractere^0,w,c
  3137  0011A2  EC24  F009         	call	_lcd_ecrireDonnees
  3138  0011A6                     
  3139                           ;Lcd4Lignes.c: 202: lcd_strobeEnableBit();
  3140  0011A6  EC44  F009         	call	_lcd_strobeEnableBit	;wreg free
  3141  0011AA                     
  3142                           ;Lcd4Lignes.c: 205: TRISD = 0b00001111;
  3143  0011AA  0E0F               	movlw	15
  3144  0011AC  6E95               	movwf	149,c	;volatile
  3145  0011AE                     
  3146                           ;Lcd4Lignes.c: 206: _delay((unsigned long)((2)*(1000000/4000000.0)));
  3147                           ;Lcd4Lignes.c: 207: return(lcd_busy());
  3148  0011AE  ECA7  F008         	call	_lcd_busy	;wreg free
  3149  0011B2  0012               	return		;funcret
  3150  0011B4                     __end_of_lcd_wrData:
  3151                           	opt callstack 0
  3152                           
  3153 ;; *************** function _lcd_gotoXY *****************
  3154 ;; Defined at:
  3155 ;;		line 314 in file "Lcd4Lignes.c"
  3156 ;; Parameters:    Size  Location     Type
  3157 ;;  x               1    wreg     unsigned char 
  3158 ;;  y               1    3[COMRAM] unsigned char 
  3159 ;; Auto vars:     Size  Location     Type
  3160 ;;  x               1    4[COMRAM] unsigned char 
  3161 ;; Return value:  Size  Location     Type
  3162 ;;                  1    wreg      void 
  3163 ;; Registers used:
  3164 ;;		wreg, status,2, status,0, cstack
  3165 ;; Tracked objects:
  3166 ;;		On entry : 0/0
  3167 ;;		On exit  : 0/0
  3168 ;;		Unchanged: 0/0
  3169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3170 ;;      Params:         1       0       0       0       0       0       0
  3171 ;;      Locals:         1       0       0       0       0       0       0
  3172 ;;      Temps:          0       0       0       0       0       0       0
  3173 ;;      Totals:         2       0       0       0       0       0       0
  3174 ;;Total ram usage:        2 bytes
  3175 ;; Hardware stack levels used:    1
  3176 ;; Hardware stack levels required when called:    4
  3177 ;; This function calls:
  3178 ;;		_lcd_wrCom
  3179 ;; This function is called by:
  3180 ;;		_main
  3181 ;;		_afficheAliens
  3182 ;;		_deplace
  3183 ;;		_affichePerdu
  3184 ;;		_lcd_effaceLigne
  3185 ;; This function uses a non-reentrant model
  3186 ;;
  3187                           
  3188                           	psect	text25
  3189  000DA0                     __ptext25:
  3190                           	opt callstack 0
  3191  000DA0                     _lcd_gotoXY:
  3192                           	opt callstack 26
  3193                           
  3194                           ;incstack = 0
  3195                           ;lcd_gotoXY@x stored from wreg
  3196  000DA0  6E05               	movwf	lcd_gotoXY@x^0,c
  3197  000DA2                     
  3198                           ;Lcd4Lignes.c: 316: switch(y)
  3199  000DA2  EFEF  F006         	goto	l1795
  3200  000DA6                     l1785:
  3201                           
  3202                           ;Lcd4Lignes.c: 319: lcd_wrCom((x-1+0x80)|0x80);
  3203  000DA6  5005               	movf	lcd_gotoXY@x^0,w,c
  3204  000DA8  0F7F               	addlw	127
  3205  000DAA  0980               	iorlw	128
  3206  000DAC  EC35  F007         	call	_lcd_wrCom
  3207                           
  3208                           ;Lcd4Lignes.c: 320: break;
  3209  000DB0  EF02  F007         	goto	l219
  3210  000DB4                     l1787:
  3211                           
  3212                           ;Lcd4Lignes.c: 322: lcd_wrCom((x-1+0xC0)|0x80);
  3213  000DB4  5005               	movf	lcd_gotoXY@x^0,w,c
  3214  000DB6  0FBF               	addlw	191
  3215  000DB8  0980               	iorlw	128
  3216  000DBA  EC35  F007         	call	_lcd_wrCom
  3217                           
  3218                           ;Lcd4Lignes.c: 323: break;
  3219  000DBE  EF02  F007         	goto	l219
  3220  000DC2                     l1789:
  3221                           
  3222                           ;Lcd4Lignes.c: 325: lcd_wrCom((x-1+0x94)|0x80);
  3223  000DC2  5005               	movf	lcd_gotoXY@x^0,w,c
  3224  000DC4  0F93               	addlw	147
  3225  000DC6  0980               	iorlw	128
  3226  000DC8  EC35  F007         	call	_lcd_wrCom
  3227                           
  3228                           ;Lcd4Lignes.c: 326: break;
  3229  000DCC  EF02  F007         	goto	l219
  3230  000DD0                     l1791:
  3231                           
  3232                           ;Lcd4Lignes.c: 328: lcd_wrCom((x-1+0xD4)|0x80);
  3233  000DD0  5005               	movf	lcd_gotoXY@x^0,w,c
  3234  000DD2  0FD3               	addlw	211
  3235  000DD4  0980               	iorlw	128
  3236  000DD6  EC35  F007         	call	_lcd_wrCom
  3237                           
  3238                           ;Lcd4Lignes.c: 329: break;
  3239  000DDA  EF02  F007         	goto	l219
  3240  000DDE                     l1795:
  3241  000DDE  5004               	movf	lcd_gotoXY@y^0,w,c
  3242                           
  3243                           ; Switch size 1, requested type "simple"
  3244                           ; Number of cases is 4, Range of values is 1 to 4
  3245                           ; switch strategies available:
  3246                           ; Name         Instructions Cycles
  3247                           ; simple_byte           13     7 (average)
  3248                           ;	Chosen strategy is simple_byte
  3249  000DE0  0A01               	xorlw	1	; case 1
  3250  000DE2  B4D8               	btfsc	status,2,c
  3251  000DE4  EFD3  F006         	goto	l1785
  3252  000DE8  0A03               	xorlw	3	; case 2
  3253  000DEA  B4D8               	btfsc	status,2,c
  3254  000DEC  EFDA  F006         	goto	l1787
  3255  000DF0  0A01               	xorlw	1	; case 3
  3256  000DF2  B4D8               	btfsc	status,2,c
  3257  000DF4  EFE1  F006         	goto	l1789
  3258  000DF8  0A07               	xorlw	7	; case 4
  3259  000DFA  B4D8               	btfsc	status,2,c
  3260  000DFC  EFE8  F006         	goto	l1791
  3261  000E00  EF02  F007         	goto	l219
  3262  000E04                     l219:
  3263  000E04  0012               	return		;funcret
  3264  000E06                     __end_of_lcd_gotoXY:
  3265                           	opt callstack 0
  3266                           
  3267 ;; *************** function _lcd_wrCom *****************
  3268 ;; Defined at:
  3269 ;;		line 156 in file "Lcd4Lignes.c"
  3270 ;; Parameters:    Size  Location     Type
  3271 ;;  commande        1    wreg     unsigned char 
  3272 ;; Auto vars:     Size  Location     Type
  3273 ;;  commande        1    2[COMRAM] unsigned char 
  3274 ;; Return value:  Size  Location     Type
  3275 ;;                  1    wreg      unsigned char 
  3276 ;; Registers used:
  3277 ;;		wreg, status,2, status,0, cstack
  3278 ;; Tracked objects:
  3279 ;;		On entry : 0/0
  3280 ;;		On exit  : 0/0
  3281 ;;		Unchanged: 0/0
  3282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3283 ;;      Params:         0       0       0       0       0       0       0
  3284 ;;      Locals:         1       0       0       0       0       0       0
  3285 ;;      Temps:          0       0       0       0       0       0       0
  3286 ;;      Totals:         1       0       0       0       0       0       0
  3287 ;;Total ram usage:        1 bytes
  3288 ;; Hardware stack levels used:    1
  3289 ;; Hardware stack levels required when called:    3
  3290 ;; This function calls:
  3291 ;;		_lcd_busy
  3292 ;;		_lcd_ecrireDonnees
  3293 ;;		_lcd_strobeEnableBit
  3294 ;; This function is called by:
  3295 ;;		_lcd_init
  3296 ;;		_lcd_effaceAffichage
  3297 ;;		_lcd_curseurHome
  3298 ;;		_lcd_gotoXY
  3299 ;;		_lcd_ecritChar
  3300 ;;		_lcd_montreCurseur
  3301 ;;		_lcd_initCGRam
  3302 ;;		_lcd_cacheCurseur
  3303 ;; This function uses a non-reentrant model
  3304 ;;
  3305                           
  3306                           	psect	text26
  3307  000E6A                     __ptext26:
  3308                           	opt callstack 0
  3309  000E6A                     _lcd_wrCom:
  3310                           	opt callstack 26
  3311                           
  3312                           ;incstack = 0
  3313                           ;lcd_wrCom@commande stored from wreg
  3314  000E6A  6E03               	movwf	lcd_wrCom@commande^0,c
  3315  000E6C                     
  3316                           ;Lcd4Lignes.c: 158: lcd_busy();
  3317  000E6C  ECA7  F008         	call	_lcd_busy	;wreg free
  3318  000E70                     
  3319                           ;Lcd4Lignes.c: 160: TRISD = 0b00000000;
  3320  000E70  0E00               	movlw	0
  3321  000E72  6E95               	movwf	149,c	;volatile
  3322  000E74                     
  3323                           ;Lcd4Lignes.c: 163: PORTAbits.RA0 = 0;
  3324  000E74  9080               	bcf	128,0,c	;volatile
  3325  000E76                     
  3326                           ;Lcd4Lignes.c: 164: PORTAbits.RA1 = 0;
  3327  000E76  9280               	bcf	128,1,c	;volatile
  3328  000E78                     
  3329                           ;Lcd4Lignes.c: 166: lcd_ecrireDonnees(commande >> 4);
  3330  000E78  3803               	swapf	lcd_wrCom@commande^0,w,c
  3331  000E7A  0B0F               	andlw	15
  3332  000E7C  EC24  F009         	call	_lcd_ecrireDonnees
  3333  000E80                     
  3334                           ;Lcd4Lignes.c: 167: lcd_strobeEnableBit();
  3335  000E80  EC44  F009         	call	_lcd_strobeEnableBit	;wreg free
  3336  000E84                     
  3337                           ;Lcd4Lignes.c: 170: lcd_ecrireDonnees(commande);
  3338  000E84  5003               	movf	lcd_wrCom@commande^0,w,c
  3339  000E86  EC24  F009         	call	_lcd_ecrireDonnees
  3340  000E8A                     
  3341                           ;Lcd4Lignes.c: 171: lcd_strobeEnableBit();
  3342  000E8A  EC44  F009         	call	_lcd_strobeEnableBit	;wreg free
  3343  000E8E                     
  3344                           ;Lcd4Lignes.c: 172: _delay((unsigned long)((40)*(1000000/4000000.0)));
  3345  000E8E  0E03               	movlw	3
  3346  000E90                     u1067:
  3347  000E90  2EE8               	decfsz	wreg,f,c
  3348  000E92  D7FE               	bra	u1067
  3349  000E94  F000               	nop	
  3350  000E96                     
  3351                           ;Lcd4Lignes.c: 174: if ((commande == 0x01) || commande == 0x02)
  3352  000E96  0403               	decf	lcd_wrCom@commande^0,w,c
  3353  000E98  B4D8               	btfsc	status,2,c
  3354  000E9A  EF51  F007         	goto	u541
  3355  000E9E  EF53  F007         	goto	u540
  3356  000EA2                     u541:
  3357  000EA2  EF5C  F007         	goto	l1721
  3358  000EA6                     u540:
  3359  000EA6  0E02               	movlw	2
  3360  000EA8  1803               	xorwf	lcd_wrCom@commande^0,w,c
  3361  000EAA  A4D8               	btfss	status,2,c
  3362  000EAC  EF5A  F007         	goto	u551
  3363  000EB0  EF5C  F007         	goto	u550
  3364  000EB4                     u551:
  3365  000EB4  EF61  F007         	goto	l1723
  3366  000EB8                     u550:
  3367  000EB8                     l1721:
  3368                           
  3369                           ;Lcd4Lignes.c: 175: _delay((unsigned long)((2)*(1000000/4000.0)));
  3370  000EB8  0EA6               	movlw	166
  3371  000EBA                     u1077:
  3372  000EBA  2EE8               	decfsz	wreg,f,c
  3373  000EBC  D7FE               	bra	u1077
  3374  000EBE  F000 F000          	nop2	
  3375  000EC2                     l1723:
  3376                           
  3377                           ;Lcd4Lignes.c: 177: TRISD = 0b00001111;
  3378  000EC2  0E0F               	movlw	15
  3379  000EC4  6E95               	movwf	149,c	;volatile
  3380  000EC6                     
  3381                           ;Lcd4Lignes.c: 179: return(lcd_busy());;	Return value of _lcd_wrCom is never used
  3382  000EC6  ECA7  F008         	call	_lcd_busy	;wreg free
  3383  000ECA  0012               	return		;funcret
  3384  000ECC                     __end_of_lcd_wrCom:
  3385                           	opt callstack 0
  3386                           
  3387 ;; *************** function _lcd_strobeEnableBit *****************
  3388 ;; Defined at:
  3389 ;;		line 431 in file "Lcd4Lignes.c"
  3390 ;; Parameters:    Size  Location     Type
  3391 ;;		None
  3392 ;; Auto vars:     Size  Location     Type
  3393 ;;		None
  3394 ;; Return value:  Size  Location     Type
  3395 ;;                  1    wreg      void 
  3396 ;; Registers used:
  3397 ;;		None
  3398 ;; Tracked objects:
  3399 ;;		On entry : 0/0
  3400 ;;		On exit  : 0/0
  3401 ;;		Unchanged: 0/0
  3402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3403 ;;      Params:         0       0       0       0       0       0       0
  3404 ;;      Locals:         0       0       0       0       0       0       0
  3405 ;;      Temps:          0       0       0       0       0       0       0
  3406 ;;      Totals:         0       0       0       0       0       0       0
  3407 ;;Total ram usage:        0 bytes
  3408 ;; Hardware stack levels used:    1
  3409 ;; Hardware stack levels required when called:    1
  3410 ;; This function calls:
  3411 ;;		Nothing
  3412 ;; This function is called by:
  3413 ;;		_lcd_wrCom
  3414 ;;		_lcd_wrData
  3415 ;;		_lcd_resetSequence
  3416 ;; This function uses a non-reentrant model
  3417 ;;
  3418                           
  3419                           	psect	text27
  3420  001288                     __ptext27:
  3421                           	opt callstack 0
  3422  001288                     _lcd_strobeEnableBit:
  3423                           	opt callstack 27
  3424  001288                     
  3425                           ;Lcd4Lignes.c: 433: PORTAbits.RA2 = 1;
  3426  001288  8480               	bsf	128,2,c	;volatile
  3427                           
  3428                           ;Lcd4Lignes.c: 434: __nop();
  3429  00128A  F000               	nop	
  3430                           
  3431                           ;Lcd4Lignes.c: 435: PORTAbits.RA2 = 0;
  3432  00128C  9480               	bcf	128,2,c	;volatile
  3433  00128E  0012               	return		;funcret
  3434  001290                     __end_of_lcd_strobeEnableBit:
  3435                           	opt callstack 0
  3436                           
  3437 ;; *************** function _lcd_ecrireDonnees *****************
  3438 ;; Defined at:
  3439 ;;		line 107 in file "Lcd4Lignes.c"
  3440 ;; Parameters:    Size  Location     Type
  3441 ;;  donnee          1    wreg     unsigned char 
  3442 ;; Auto vars:     Size  Location     Type
  3443 ;;  donnee          1    1[COMRAM] unsigned char 
  3444 ;; Return value:  Size  Location     Type
  3445 ;;                  1    wreg      void 
  3446 ;; Registers used:
  3447 ;;		wreg, status,2, status,0
  3448 ;; Tracked objects:
  3449 ;;		On entry : 0/0
  3450 ;;		On exit  : 0/0
  3451 ;;		Unchanged: 0/0
  3452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3453 ;;      Params:         0       0       0       0       0       0       0
  3454 ;;      Locals:         1       0       0       0       0       0       0
  3455 ;;      Temps:          1       0       0       0       0       0       0
  3456 ;;      Totals:         2       0       0       0       0       0       0
  3457 ;;Total ram usage:        2 bytes
  3458 ;; Hardware stack levels used:    1
  3459 ;; Hardware stack levels required when called:    1
  3460 ;; This function calls:
  3461 ;;		Nothing
  3462 ;; This function is called by:
  3463 ;;		_lcd_wrCom
  3464 ;;		_lcd_wrData
  3465 ;;		_lcd_resetSequence
  3466 ;; This function uses a non-reentrant model
  3467 ;;
  3468                           
  3469                           	psect	text28
  3470  001248                     __ptext28:
  3471                           	opt callstack 0
  3472  001248                     _lcd_ecrireDonnees:
  3473                           	opt callstack 27
  3474                           
  3475                           ;incstack = 0
  3476                           ;lcd_ecrireDonnees@donnee stored from wreg
  3477  001248  6E02               	movwf	lcd_ecrireDonnees@donnee^0,c
  3478  00124A                     
  3479                           ;Lcd4Lignes.c: 110: PORTD = (donnee & 0x0F) | (PORTD & 0xF0);
  3480  00124A  CF83 F001          	movff	3971,??_lcd_ecrireDonnees	;volatile
  3481  00124E  0EF0               	movlw	240
  3482  001250  1601               	andwf	??_lcd_ecrireDonnees^0,f,c
  3483  001252  5002               	movf	lcd_ecrireDonnees@donnee^0,w,c
  3484  001254  0B0F               	andlw	15
  3485  001256  1001               	iorwf	??_lcd_ecrireDonnees^0,w,c
  3486  001258  6E83               	movwf	131,c	;volatile
  3487  00125A  0012               	return		;funcret
  3488  00125C                     __end_of_lcd_ecrireDonnees:
  3489                           	opt callstack 0
  3490                           
  3491 ;; *************** function _lcd_busy *****************
  3492 ;; Defined at:
  3493 ;;		line 124 in file "Lcd4Lignes.c"
  3494 ;; Parameters:    Size  Location     Type
  3495 ;;		None
  3496 ;; Auto vars:     Size  Location     Type
  3497 ;;  adresse         1    1[COMRAM] unsigned char 
  3498 ;; Return value:  Size  Location     Type
  3499 ;;                  1    wreg      unsigned char 
  3500 ;; Registers used:
  3501 ;;		wreg, status,2, status,0, cstack
  3502 ;; Tracked objects:
  3503 ;;		On entry : 0/0
  3504 ;;		On exit  : 0/0
  3505 ;;		Unchanged: 0/0
  3506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3507 ;;      Params:         0       0       0       0       0       0       0
  3508 ;;      Locals:         1       0       0       0       0       0       0
  3509 ;;      Temps:          1       0       0       0       0       0       0
  3510 ;;      Totals:         2       0       0       0       0       0       0
  3511 ;;Total ram usage:        2 bytes
  3512 ;; Hardware stack levels used:    1
  3513 ;; Hardware stack levels required when called:    2
  3514 ;; This function calls:
  3515 ;;		_lcd_lireDonnees
  3516 ;; This function is called by:
  3517 ;;		_lcd_wrCom
  3518 ;;		_lcd_wrData
  3519 ;; This function uses a non-reentrant model
  3520 ;;
  3521                           
  3522                           	psect	text29
  3523  00114E                     __ptext29:
  3524                           	opt callstack 0
  3525  00114E                     _lcd_busy:
  3526                           	opt callstack 26
  3527  00114E                     
  3528                           ;Lcd4Lignes.c: 126: unsigned char adresse;;Lcd4Lignes.c: 128: PORTAbits.RA0 = 0;
  3529  00114E  9080               	bcf	128,0,c	;volatile
  3530                           
  3531                           ;Lcd4Lignes.c: 129: PORTAbits.RA1 = 1;
  3532  001150  8280               	bsf	128,1,c	;volatile
  3533  001152                     l181:
  3534                           
  3535                           ;Lcd4Lignes.c: 132: {;Lcd4Lignes.c: 133: PORTAbits.RA2 = 1;
  3536  001152  8480               	bsf	128,2,c	;volatile
  3537                           
  3538                           ;Lcd4Lignes.c: 134: __nop();
  3539  001154  F000               	nop	
  3540  001156                     
  3541                           ;Lcd4Lignes.c: 135: adresse = lcd_lireDonnees() << 4;
  3542  001156  EC48  F009         	call	_lcd_lireDonnees	;wreg free
  3543  00115A  6E01               	movwf	??_lcd_busy^0,c
  3544  00115C  3801               	swapf	??_lcd_busy^0,w,c
  3545  00115E  0BF0               	andlw	240
  3546  001160  6E02               	movwf	lcd_busy@adresse^0,c
  3547  001162                     
  3548                           ;Lcd4Lignes.c: 136: PORTAbits.RA2 = 0;
  3549  001162  9480               	bcf	128,2,c	;volatile
  3550  001164                     
  3551                           ;Lcd4Lignes.c: 138: PORTAbits.RA2 = 1;
  3552  001164  8480               	bsf	128,2,c	;volatile
  3553  001166                     
  3554                           ;Lcd4Lignes.c: 139: __nop();
  3555  001166  F000               	nop	
  3556                           
  3557                           ;Lcd4Lignes.c: 140: adresse |= lcd_lireDonnees();
  3558  001168  EC48  F009         	call	_lcd_lireDonnees	;wreg free
  3559  00116C  1202               	iorwf	lcd_busy@adresse^0,f,c
  3560  00116E                     
  3561                           ;Lcd4Lignes.c: 141: PORTAbits.RA2 = 0;
  3562  00116E  9480               	bcf	128,2,c	;volatile
  3563  001170                     
  3564                           ;Lcd4Lignes.c: 143: };Lcd4Lignes.c: 144: while(adresse&0x80);
  3565  001170  BE02               	btfsc	lcd_busy@adresse^0,7,c
  3566  001172  EFBD  F008         	goto	u531
  3567  001176  EFBF  F008         	goto	u530
  3568  00117A                     u531:
  3569  00117A  EFA9  F008         	goto	l181
  3570  00117E                     u530:
  3571  00117E                     
  3572                           ;Lcd4Lignes.c: 146: PORTAbits.RA1 = 0;
  3573  00117E  9280               	bcf	128,1,c	;volatile
  3574  001180                     
  3575                           ;Lcd4Lignes.c: 147: return(adresse&0x7f);
  3576  001180  5002               	movf	lcd_busy@adresse^0,w,c
  3577  001182  0B7F               	andlw	127
  3578  001184  0012               	return		;funcret
  3579  001186                     __end_of_lcd_busy:
  3580                           	opt callstack 0
  3581                           
  3582 ;; *************** function _lcd_lireDonnees *****************
  3583 ;; Defined at:
  3584 ;;		line 93 in file "Lcd4Lignes.c"
  3585 ;; Parameters:    Size  Location     Type
  3586 ;;		None
  3587 ;; Auto vars:     Size  Location     Type
  3588 ;;		None
  3589 ;; Return value:  Size  Location     Type
  3590 ;;                  1    wreg      unsigned char 
  3591 ;; Registers used:
  3592 ;;		wreg, status,2, status,0
  3593 ;; Tracked objects:
  3594 ;;		On entry : 0/0
  3595 ;;		On exit  : 0/0
  3596 ;;		Unchanged: 0/0
  3597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3598 ;;      Params:         0       0       0       0       0       0       0
  3599 ;;      Locals:         0       0       0       0       0       0       0
  3600 ;;      Temps:          0       0       0       0       0       0       0
  3601 ;;      Totals:         0       0       0       0       0       0       0
  3602 ;;Total ram usage:        0 bytes
  3603 ;; Hardware stack levels used:    1
  3604 ;; Hardware stack levels required when called:    1
  3605 ;; This function calls:
  3606 ;;		Nothing
  3607 ;; This function is called by:
  3608 ;;		_lcd_busy
  3609 ;; This function uses a non-reentrant model
  3610 ;;
  3611                           
  3612                           	psect	text30
  3613  001290                     __ptext30:
  3614                           	opt callstack 0
  3615  001290                     _lcd_lireDonnees:
  3616                           	opt callstack 26
  3617  001290                     
  3618                           ;Lcd4Lignes.c: 96: return (PORTD & 0x0f);
  3619  001290  5083               	movf	131,w,c	;volatile
  3620  001292  0B0F               	andlw	15
  3621  001294  0012               	return		;funcret
  3622  001296                     __end_of_lcd_lireDonnees:
  3623                           	opt callstack 0
  3624                           
  3625 ;; *************** function _high_isr *****************
  3626 ;; Defined at:
  3627 ;;		line 415 in file "main.c"
  3628 ;; Parameters:    Size  Location     Type
  3629 ;;		None
  3630 ;; Auto vars:     Size  Location     Type
  3631 ;;		None
  3632 ;; Return value:  Size  Location     Type
  3633 ;;                  1    wreg      void 
  3634 ;; Registers used:
  3635 ;;		wreg, status,2
  3636 ;; Tracked objects:
  3637 ;;		On entry : 0/0
  3638 ;;		On exit  : 0/0
  3639 ;;		Unchanged: 0/0
  3640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3641 ;;      Params:         0       0       0       0       0       0       0
  3642 ;;      Locals:         0       0       0       0       0       0       0
  3643 ;;      Temps:          0       0       0       0       0       0       0
  3644 ;;      Totals:         0       0       0       0       0       0       0
  3645 ;;Total ram usage:        0 bytes
  3646 ;; Hardware stack levels used:    1
  3647 ;; This function calls:
  3648 ;;		Nothing
  3649 ;; This function is called by:
  3650 ;;		Interrupt level 2
  3651 ;; This function uses a non-reentrant model
  3652 ;;
  3653                           
  3654                           	psect	intcode
  3655  000008                     __pintcode:
  3656                           	opt callstack 0
  3657  000008                     _high_isr:
  3658                           	opt callstack 24
  3659                           
  3660                           ;incstack = 0
  3661  000008  8257               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3662  00000A                     
  3663                           ;main.c: 417: if (INTCONbits.TMR0IF)
  3664  00000A  A4F2               	btfss	242,2,c	;volatile
  3665  00000C  EF0A  F000         	goto	i2u48_41
  3666  000010  EF0C  F000         	goto	i2u48_40
  3667  000014                     i2u48_41:
  3668  000014  EF13  F000         	goto	i2l156
  3669  000018                     i2u48_40:
  3670  000018                     
  3671                           ;main.c: 418: {;main.c: 419: INTCONbits.TMR0IF = 0;
  3672  000018  94F2               	bcf	242,2,c	;volatile
  3673  00001A                     
  3674                           ;main.c: 421: TMR0 = 0x0BDC;
  3675  00001A  0E0B               	movlw	11
  3676  00001C  6ED7               	movwf	215,c	;volatile
  3677  00001E  0EDC               	movlw	220
  3678  000020  6ED6               	movwf	214,c	;volatile
  3679                           
  3680                           ;main.c: 422: m_tempsDAfficher = 1;
  3681  000022  0E01               	movlw	1
  3682  000024  6E52               	movwf	_m_tempsDAfficher^0,c
  3683  000026                     i2l156:
  3684  000026  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3685  000028  0011               	retfie		f
  3686  00002A                     __end_of_high_isr:
  3687                           	opt callstack 0
  3688                           
  3689                           	psect	rparam
  3690  0000                     
  3691                           	psect	temp
  3692  000057                     btemp:
  3693                           	opt callstack 0
  3694  000057                     	ds	1
  3695  0000                     int$flags	set	btemp
  3696  0000                     wtemp8	set	btemp+1
  3697  0000                     ttemp5	set	btemp+1
  3698  0000                     ttemp6	set	btemp+4
  3699  0000                     ttemp7	set	btemp+8
  3700                           tosu	equ	0xFFF
  3701                           tosh	equ	0xFFE
  3702                           tosl	equ	0xFFD
  3703                           stkptr	equ	0xFFC
  3704                           pclatu	equ	0xFFB
  3705                           pclath	equ	0xFFA
  3706                           pcl	equ	0xFF9
  3707                           tblptru	equ	0xFF8
  3708                           tblptrh	equ	0xFF7
  3709                           tblptrl	equ	0xFF6
  3710                           tablat	equ	0xFF5
  3711                           prodh	equ	0xFF4
  3712                           prodl	equ	0xFF3
  3713                           indf0	equ	0xFEF
  3714                           postinc0	equ	0xFEE
  3715                           postdec0	equ	0xFED
  3716                           preinc0	equ	0xFEC
  3717                           plusw0	equ	0xFEB
  3718                           fsr0h	equ	0xFEA
  3719                           fsr0l	equ	0xFE9
  3720                           wreg	equ	0xFE8
  3721                           indf1	equ	0xFE7
  3722                           postinc1	equ	0xFE6
  3723                           postdec1	equ	0xFE5
  3724                           preinc1	equ	0xFE4
  3725                           plusw1	equ	0xFE3
  3726                           fsr1h	equ	0xFE2
  3727                           fsr1l	equ	0xFE1
  3728                           bsr	equ	0xFE0
  3729                           indf2	equ	0xFDF
  3730                           postinc2	equ	0xFDE
  3731                           postdec2	equ	0xFDD
  3732                           preinc2	equ	0xFDC
  3733                           plusw2	equ	0xFDB
  3734                           fsr2h	equ	0xFDA
  3735                           fsr2l	equ	0xFD9
  3736                           status	equ	0xFD8


Data Sizes:
    Strings     19
    Constant    0
    Data        152
    BSS         21
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     61      86
    BANK0           160      0     148
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           239      0       0

Pointer List with Targets:

    strcpy@from	PTR const unsigned char  size(2) Largest target is 84
		 -> m_aliens(BANK0[84]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 84
		 -> m_aliens(BANK0[84]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 84
		 -> m_aliens(BANK0[84]), 

    lcd_putMessage@chaine	PTR const unsigned char  size(3) Largest target is 32767
		 -> ROM(CODE[32767]), STR_1(CODE[19]), m_aliens(BANK0[84]), 

    feu@pts	PTR int  size(2) Largest target is 3
		 -> main@points(COMRAM[2]), 

    deplace@x	PTR unsigned char  size(2) Largest target is 1
		 -> main@posX(COMRAM[1]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 84
		 -> m_aliens(BANK0[84]), 

    main@points	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_nouveauxAliens
    _nouveauxAliens->___awmod
    _strcpy->___wmul
    _rand->___lmul
    ___awmod->_rand
    _lcd_init->_lcd_initCGRam
    _lcd_resetSequence->_lcd_ecrireDonnees
    _lcd_initCGRam->_lcd_wrCom
    _lcd_initCGRam->_lcd_wrData
    _lcd_curseurHome->_lcd_wrCom
    _initialisation->_srand
    _deplace->_lcd_gotoXY
    _lcd_montreCurseur->_lcd_wrCom
    _affichePerdu->_lcd_putMessage
    _lcd_effaceAffichage->_lcd_wrCom
    _afficheAliens->_lcd_putMessage
    _lcd_putMessage->_lcd_ecritChar
    _lcd_ecritChar->_lcd_wrCom
    _lcd_ecritChar->_lcd_wrData
    _lcd_wrData->_lcd_busy
    _lcd_wrData->_lcd_ecrireDonnees
    _lcd_gotoXY->_lcd_wrCom
    _lcd_wrCom->_lcd_busy
    _lcd_wrCom->_lcd_ecrireDonnees

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    9946
                                             55 COMRAM     6     6      0
                      _afficheAliens
                       _affichePerdu
                            _deplace
                                _feu
                         _init_serie
                     _initialisation
                _lcd_effaceAffichage
                         _lcd_gotoXY
                           _lcd_init
                     _nouveauxAliens
                              _perdu
 ---------------------------------------------------------------------------------
 (1) _perdu                                                5     5      0     114
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _nouveauxAliens                                      35    35      0    2188
                                             20 COMRAM    35    35      0
                            ___awmod
                             ___wmul
                               _rand
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               6     2      4     227
                                              6 COMRAM     6     2      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _rand                                                 2     0      2     370
                                             12 COMRAM     2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     370
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     463
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     600
                                             14 COMRAM     6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     738
                      _lcd_initCGRam
                  _lcd_resetSequence
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (2) _lcd_resetSequence                                    1     1      0      22
                                              2 COMRAM     1     1      0
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (2) _lcd_initCGRam                                        4     4      0     560
                                              3 COMRAM     4     4      0
                    _lcd_curseurHome
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (3) _lcd_curseurHome                                      0     0      0     156
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0      98
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_serie                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _feu                                                  4     2      2     274
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _deplace                                              4     2      2    1516
                                              5 COMRAM     4     2      2
                          _getAnalog
                         _lcd_gotoXY
                  _lcd_montreCurseur
 ---------------------------------------------------------------------------------
 (2) _lcd_montreCurseur                                    0     0      0     156
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (2) _getAnalog                                            2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _affichePerdu                                         5     3      2    1911
                                             14 COMRAM     5     3      2
                _lcd_effaceAffichage
                         _lcd_gotoXY
                     _lcd_putMessage
 ---------------------------------------------------------------------------------
 (1) _lcd_effaceAffichage                                  0     0      0     156
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (1) _afficheAliens                                        3     3      0    1747
                                             14 COMRAM     3     3      0
                         _lcd_gotoXY
                     _lcd_putMessage
 ---------------------------------------------------------------------------------
 (2) _lcd_putMessage                                       9     6      3     631
                                              5 COMRAM     9     6      3
                      _lcd_ecritChar
 ---------------------------------------------------------------------------------
 (3) _lcd_ecritChar                                        2     2      0     313
                                              3 COMRAM     2     2      0
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (3) _lcd_wrData                                           1     1      0     112
                                              2 COMRAM     1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (1) _lcd_gotoXY                                           2     1      1    1026
                                              3 COMRAM     2     1      1
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (2) _lcd_wrCom                                            1     1      0     156
                                              2 COMRAM     1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (3) _lcd_strobeEnableBit                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _lcd_ecrireDonnees                                    2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _lcd_busy                                             2     2      0      46
                                              0 COMRAM     2     2      0
                    _lcd_lireDonnees
 ---------------------------------------------------------------------------------
 (4) _lcd_lireDonnees                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _high_isr                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _afficheAliens
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_putMessage
       _lcd_ecritChar
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
         _lcd_wrData
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
   _affichePerdu
     _lcd_effaceAffichage
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_putMessage
       _lcd_ecritChar
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
         _lcd_wrData
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
   _deplace
     _getAnalog
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_montreCurseur
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
   _feu
   _init_serie
   _initialisation
     _srand
   _lcd_effaceAffichage
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_gotoXY
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_init
     _lcd_initCGRam
       _lcd_curseurHome
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_resetSequence
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _nouveauxAliens
     ___awmod
       _rand (ARG)
         ___lmul
     ___wmul
     _rand
       ___lmul
     _strcpy
       ___wmul (ARG)
   _perdu

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5EE      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK5            EF      0       0      15        0.0%
BANK5               EF      0       0      13        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0      94       4       92.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3D      56       1       91.5%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      EA      14        0.0%
DATA                 0      0      EA      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Nov 25 14:04:10 2019

                          l81 0920           ___wmul@multiplicand 0003                  __CFG_CP0$OFF 000000  
                __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000  
__size_of_lcd_strobeEnableBit 0008                           l110 086A                           l201 1276  
                         l122 0AC6                           l130 0A06                           l115 1112  
                         l204 127E                           l141 0F82                           l109 086A  
                         l230 10CA                           l150 102C                           l302 1228  
                         l144 11F2                           l136 0D34                           l313 0D8E  
                         l137 0CFE                           l242 1286                           l314 0D9E  
                         l219 0E04                           l147 1202                           l252 128E  
                         l236 0C12                           l181 1152                           l182 117E  
                         l175 1294                           l183 1184                           l192 11B2  
                         l249 0F28                           l178 125A                           l275 1246  
                         l195 0E68                           l189 0ECA                           l198 11DA  
                         l546 0B76                           l966 1268                           l975 114C  
                         l969 107E                  __CFG_CPB$OFF 000000                           u100 1200  
                         u101 11FC                           u600 0C02                           u530 117E  
                         u610 0C12                  __CFG_CPD$OFF 000000                           u531 117A  
                         u611 0C0E                           u540 0EA6                           u620 0F12  
                         u700 0CD6                           u541 0EA2                           u621 0F0E  
                         u701 0CD2                           u550 0EB8                           u630 0F24  
                         u710 0CFA                           u551 0EB4                           u607 0BF8  
                         u631 0F20                           u711 0CF6                           u640 0ADA  
                         u560 0D54                           u800 0794                           u720 0D1E  
                         u641 0AD6                           u561 0D50                           u801 0790  
                         u721 0D1A                           u650 0AF4                           u570 0D8E  
                         u810 07D4                           u730 0D32                           u651 0AF0  
                         u571 0D8A                           u811 07D0                           u731 0D2E  
                         u900 0AA8                           u660 0B0E                           u580 114C  
                         u820 07F6                           u901 0AA4                           u661 0B0A  
                         u581 1148                           u821 07F2                           u741 061C  
                         u590 0BBE                           u910 0968                           u670 0B2C  
                         u830 0816                           u750 069C                           u911 0964  
                         u671 0B28                           u831 0812                           u751 0698  
                         u920 09A8                           u680 0B42                           u840 084E  
                         u760 06D4                           u921 09A4                           u681 0B3E  
                         u841 084A                           u761 06D0                           u930 09E8  
                         u690 0B66                           u850 085E                           u770 0712  
                         u931 09E4                           u691 0B62                           u851 085A  
                         u771 070E                           u860 1112                           u780 072E  
                         u597 0BB4                           u861 110E                           u781 072A  
                         u870 0A36                           u790 076E                           u950 08A8  
                         u871 0A32                           u791 076A                           u951 08A4  
                         u880 0A58                           u960 08BC                           u881 0A54  
                         u961 08B8                           u890 0A86                           u970 090E  
                         u891 0A82                           u971 090A                           u980 092E  
                         u981 092A                           u997 0934                           _feu 0948  
                __CFG_BORV$18 000000                  ___awmod@sign 0014                           prod 000FF3  
                 lcd_gotoXY@x 0005                           wreg 000FE8                   lcd_gotoXY@y 0004  
__size_of_lcd_effaceAffichage 000E                  __CFG_LVP$OFF 000000                          l2001 0626  
                        l2011 0636                          l2003 0626                          l2101 1100  
                        l2013 067A                          l2005 062E                          l2103 1102  
                        l2111 0A36                          l2031 06F4                          l2023 06A4  
                        l2015 0680                          l2121 0A86                          l2113 0A40  
                        l2105 0A08                          l2041 076E                          l2033 0712  
                        l2025 06B4                          l2017 069C                          l1251 1200  
                        l2123 0A90                          l2115 0A58                          l2107 0A14  
                        l2131 0968                          l2051 079A                          l2035 072E  
                        l2027 06B8                          l1245 11DE                          l2125 0AA8  
                        l2117 0A64                          l2109 0A26                          l2133 098A  
                        l2053 07B6                          l2061 07F6                          l2037 074E  
                        l2029 06D8                          l1247 11F0                          l2127 0AB4  
                        l2119 0A76                          l2135 09A8                          l1431 122E  
                        l2071 081E                          l2063 07FA                          l2055 07D4  
                        l2047 0776                          l2039 0752                          l2151 0870  
                        l1249 11F0                          l2137 09CA                          l2129 094A  
                        l1441 123E                          l1433 1236                          l2081 0866  
                        l2073 082E                          l2065 0816                          l2057 07E4  
                        l2049 0794                          l2161 088A                          l2153 0878  
                        l2091 10CC                          l2083 0F2A                          l2139 09E8  
                        l1443 1240                          l1435 1238                          l2075 0832  
                        l2059 07E6                          l2171 08BC                          l2163 088E  
                        l2155 087C                          l1701 0E74                          l2085 0F38  
                        l1437 123A                          l1429 122A                          l2077 084E  
                        l2181 08E6                          l2173 08C8                          l2165 0898  
                        l2157 0882                          l2149 086C                          l1711 0E84  
                        l1703 0E76                          l2087 0F4E                          l1439 123C  
                        l2079 085E                          l2191 091C                          l2183 08F0  
                        l2175 08D2                          l2167 08A8                          l2159 0886  
                        l1721 0EB8                          l1713 0E8A                          l1705 0E78  
                        l2097 10D0                          l2089 0F6C                          l1801 1120  
                        l2193 092E                          l2177 08D6                          l2169 08AC  
                        l2185 08F4                          l1723 0EC2                          l1715 0E8E  
                        l1707 0E80                          l1731 1188                          l2099 10DA  
                        l1803 1128                          l2187 0900                          l2179 08E2  
                        l1725 0EC6                          l1717 0E96                          l1709 0E84  
                        l1741 1194                          l1733 118C                          l1813 0B78  
                        l1821 1280                          l1901 0AF4                          l1805 102E  
                        l2189 090E                          l1671 114E                          l1727 0EC6  
                        l1719 0EA6                          l1751 11AA                          l1743 119C  
                        l1735 1190                          l1815 0B80                          l1823 125C  
                        l1831 0E1A                          l1911 0B2C                          l1903 0AFC  
                        l1807 1062                          ?_feu 0001                          l1665 1290  
                        l1681 1166                          l1673 1156                          l1753 11AA  
                        l1745 11A0                          l1737 1190                          l1761 1082  
                        l1817 0BC2                          l1841 0E34                          l1833 0E1C  
                        l1825 0E06                          l1921 0B66                          l1913 0B42  
                        l1905 0B0E                          l1809 1072                          l1683 116E  
                        l1675 1162                          l1755 11AE                          l1747 11A0  
                        l1739 1192                          l1763 108E                          l1771 10AC  
                        l1819 0BC4                          l1851 0E52                          l1843 0E38  
                        l1835 0E22                          l1827 0E0A                          l1923 0B6E  
                        l1915 0B4A                          l1907 0B16                          l1685 1170  
                        l1677 1164                          l1669 124A                          l1693 1288  
                        l1749 11A6                          l1765 1098                          l1861 0ED2  
                        l1853 0E58                          l1845 0E40                          l1837 0E26  
                        l1829 0E18                          l1917 0B50                          l1909 0B1E  
                        l1781 0D6E                          l1773 0D36                          l1941 0CFA  
                        l1933 0CB8                          l1687 1170                          l1679 1164  
                        l1695 0E6C                          l1791 0DD0                          l1783 0DA2  
                        l1767 10A2                          l1951 0FDA                          l1759 1278  
                        l1855 0E5C                          l1847 0E46                          l1839 0E2E  
                        l1919 0B56                          l1775 0D46                          l1943 0D02  
                        l1935 0CD6                          l1927 0CA8                          l1689 1180  
                        l1697 0E70                          l1785 0DA6                          l1961 0FFC  
                        l1953 0FE2                          l1881 0F14                          l1873 0EDA  
                        l1857 0E64                          l1849 0E4A                          l1777 0D54  
                        l1945 0D1E                          l1699 0E74                          l1787 0DB4  
                        l1795 0DDE                          l1971 100C                          l1963 0FFE  
                        l1955 0FEC                          l1883 0F24                          l1875 0F00  
                        l1867 0ED6                          l1859 0ECC                          l1891 0AC8  
                        l1779 0D64                          l1947 0D32                          l1939 0CDC  
                        l1789 0DC2                          l1797 126A                          l1981 101C  
                        l1973 100E                          l1965 1002                          l1957 0FEE  
                        l1877 0F02                          l1893 0ACC                          l1885 1204  
                        l1983 1024                          l1975 1010                          l1967 1004  
                        l1959 0FFA                          l1879 0F12                          l1991 11B4  
                        l1895 0ADA                          l1887 1220                          l1799 1114  
                        l1985 1026                          l1977 1012                          l1969 1008  
                        l1993 11D6                          l1897 0AE2                          l1987 1028  
                        l1979 1014                          l1899 0AE6                          l1995 0616  
                        l1989 102A                          l1997 0622                          l1999 0626  
                        STR_1 0601                          u1007 0E10                          u1017 0E28  
                        u1027 0E3A                          u1037 0E4C                          u1047 0E5E  
                        u1057 0F76                          u1067 0E90                          u1077 0EBA  
                        _RCIF 007CF5                          _TMR0 000FD6                          _TMR1 000FCE  
            ??_initialisation 0003                          _main 086C                          _rand 102E  
                        feu@x 0004                          fsr1h 000FE2                          fsr2h 000FDA  
                        indf1 000FE7                          indf2 000FDF                          fsr1l 000FE1  
                        fsr2l 000FD9                          btemp 0057                          prodh 000FF4  
                        prodl 000FF3                          start 002A               ?_lcd_putMessage 0006  
               __CFG_IESO$OFF 000000                 __CFG_MCLRE$ON 000000                  ___param_bank 000000  
                       ??_feu 0003               ??_lcd_ecritChar 0004                         ?_main 0001  
                       ?_rand 000D               __end_of___awmod 0B78                         _ANSEL 000F7E  
                       i2l156 0026                         _RCREG 000FAE                         _SPBRG 000FAF  
                       _PORTD 000F83                         _TRISA 000F92                         _TRISB 000F93  
                       _TRISD 000F95                         _TXREG 000FAD                 __CFG_PWRT$OFF 000000  
               __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000  
             __end_of_deplace 0AC8           ___lmul@multiplicand 0005                 __CFG_WRT3$OFF 000000  
              __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000  
              __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000  
               __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000  
             ??_lcd_initCGRam 0004                         _randx 0053                         _perdu 0CA8  
                       _srand 125C                         main@n 003A                         tablat 000FF5  
                       ttemp5 0058                         ttemp6 005B                         ttemp7 005F  
                       status 000FD8                         wtemp8 0058                __CFG_HFOFST$ON 000000  
       __size_of_affichePerdu 005A                __CFG_PBADEN$ON 000000               __initialization 0F84  
                __end_of_main 0948                  __end_of_rand 1080          lcd_putMessage@chaine 0006  
                      ??_main 0038                        ??_rand 000F                 __activetblptr 000003  
                      _ADCON1 000FC1                  _affichePerdu 0F2A                        _ADRESH 000FC4  
                      ?_perdu 0001                        ?_srand 0001                        _ANSELH 000F7F  
                      i2l1645 000A                __CFG_WDTEN$OFF 000000                        i2l1647 0018  
                      i2l1649 001A                        _SPBRGH 000FB0                __CFG_XINST$OFF 000000  
              lcd_initCGRam@i 0006                lcd_initCGRam@j 0007                getAnalog@canal 0002  
            __end_of_lcd_busy 1186              __end_of_lcd_init 11DC              __end_of_high_isr 002A  
                      ___lmul 0D36                        ___wmul 1204                __CFG_STVREN$ON 000000  
                   ??___awmod 0013              ??_nouveauxAliens 0015                        clear_0 0FCA  
                      feu@pts 0001               ___awmod@divisor 0011                     ??_deplace 0008  
             ___awmod@counter 0013                        _strcpy 1114                  __pdataCOMRAM 0053  
                      perdu@i 0004                  __mediumconst 0000                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8                        srand@x 0001  
      __size_of_afficheAliens 0048             _lcd_resetSequence 0E06                    __accesstop 0060  
     __end_of__initialization 0FD0           _lcd_strobeEnableBit 1288            ?_lcd_resetSequence 0001  
               ___rparam_used 000001                __pcstackCOMRAM 0001           _lcd_effaceAffichage 126A  
                __pidataBANK0 0C14           ??_lcd_resetSequence 0003                 __end_of_perdu 0D36  
               __end_of_srand 126A          ?_lcd_strobeEnableBit 0001            __size_of_getAnalog 0028  
           _lcd_montreCurseur 1280            ?_lcd_montreCurseur 0001          ?_lcd_effaceAffichage 0001  
          __size_of_lcd_wrCom 0062                       ??_perdu 0001     __end_of_lcd_resetSequence 0E6A  
                     ??_srand 0003      __size_of_lcd_lireDonnees 0006             _lcd_ecrireDonnees 1248  
            ??_lcd_putMessage 0009           ??_lcd_montreCurseur 0004            ?_lcd_ecrireDonnees 0001  
    __size_of_lcd_curseurHome 0008           ??_lcd_ecrireDonnees 0001                 _afficheAliens 10CC  
                     ?___lmul 0001                       ?___wmul 0001     __end_of_lcd_montreCurseur 1288  
              ___lmul@product 0009         ??_lcd_strobeEnableBit 0001                       ?_strcpy 0007  
                  _lcd_gotoXY 0DA0         ??_lcd_effaceAffichage 0004                       i2u48_40 0018  
                     i2u48_41 0014                    _lcd_wrData 1186     __end_of_lcd_ecrireDonnees 125C  
                   ?_lcd_busy 0001                     ?_lcd_init 0001       lcd_ecrireDonnees@donnee 0002  
                   ?_high_isr 0001             __end_of_getAnalog 1204                       __Hparam 0000  
                     __Lparam 0000                ?_afficheAliens 0001               nouveauxAliens@i 0035  
             nouveauxAliens@j 0031               nouveauxAliens@k 002C               nouveauxAliens@v 002F  
           __end_of_lcd_wrCom 0ECC               __size_of___lmul 006A                       ___awmod 0AC8  
             __size_of___wmul 0026                  __psmallconst 0600                       __pcinit 0F84  
                  _init_serie 122A                     _ANSELbits 000F7E                       __ramtop 0600  
                     _deplace 0A08                       __ptext0 086C                       __ptext1 0CA8  
                     __ptext2 0616                       __ptext3 1114                       __ptext4 102E  
                     __ptext5 0D36                       __ptext6 1204                       __ptext7 0AC8  
                     __ptext8 11B4                       __ptext9 0E06         __end_of_lcd_ecritChar 10CC  
                   _T0CONbits 000FD5               lcd_busy@adresse 0002               __size_of_strcpy 003A  
                   _T1CONbits 000FCD                  __size_of_feu 00C0              ___awmod@dividend 000F  
            lcd_ecritChar@car 0004           nouveauxAliens@F2853 003E                    ??_lcd_busy 0001  
                  ??_lcd_init 0008    __size_of_lcd_resetSequence 0064                    ??_high_isr 0001  
            _m_tempsDAfficher 0052          end_of_initialization 0FD0         __end_of_lcd_initCGRam 0F2A  
         nouveauxAliens@k_479 0033             ??_lcd_lireDonnees 0001                     _RCSTAbits 000FAB  
                     postdec1 000FE5                       postdec2 000FDD                       postinc0 000FEE  
                     postinc2 000FDE       __size_of_initialisation 0054             ??_lcd_curseurHome 0004  
         lcd_ecritChar@posRam 0005    __size_of_lcd_montreCurseur 0008                     _PORTAbits 000F80  
                   _PORTBbits 000F81                   ?_lcd_gotoXY 0004                     _TRISCbits 000F94  
                 ?_lcd_wrData 0001    __size_of_lcd_ecrireDonnees 0014                     _TXSTAbits 000FAC  
             ??_afficheAliens 000F                    main@points 003B                __end_of___lmul 0DA0  
              __end_of___wmul 122A                   _BAUDCONbits 000FB8                   ?_init_serie 0001  
               __pidataCOMRAM 1296                __end_of_strcpy 114E           start_initialization 0F84  
                 __end_of_feu 0A08           __size_of_lcd_gotoXY 0066                      ??___lmul 0009  
                    ??___wmul 0005           __size_of_lcd_wrData 002E                   __pdataBANK0 0060  
            __CFG_LPT1OSC$OFF 000000                      ??_strcpy 000B                   __pbssCOMRAM 003E  
               deplace@analog 0009                  perdu@counter 0002       __size_of_nouveauxAliens 0256  
           __size_of_lcd_busy 0038             __size_of_lcd_init 0028             __size_of_high_isr 0022  
         __size_of_init_serie 001E             __CFG_CCP2MX$PORTC 000000                     _getAnalog 11DC  
 __end_of_lcd_strobeEnableBit 1290                     __pintcode 0008                _initialisation 0FDA  
                    ?___awmod 000F                      ?_deplace 0006   __end_of_lcd_effaceAffichage 1278  
                   _lcd_wrCom 0E6A                   __smallconst 0600                 ?_affichePerdu 000F  
             _lcd_lireDonnees 1290           lcd_wrData@caractere 0003                __size_of_perdu 008E  
              __size_of_srand 000E               _lcd_curseurHome 1278                ___wmul@product 0005  
      __end_of_initialisation 102E                    ?_getAnalog 0001              __CFG_WDTPS$32768 000000  
     __size_of_lcd_putMessage 009C                    ?_lcd_wrCom 0001                    _ADCON0bits 000FC2  
                  _ADCON2bits 000FC0             ___wmul@multiplier 0001                  ??_lcd_gotoXY 0005  
              ??_affichePerdu 0011                  ??_lcd_wrData 0003             lcd_wrCom@commande 0003  
           ___lmul@multiplier 0001                     copy_data0 0F98                     copy_data1 0FB8  
      __size_of_lcd_ecritChar 004C                      __Hrparam 0000               ?_initialisation 0001  
                    __Lrparam 0000            __CFG_BOREN$SBORDIS 000000            __end_of_lcd_gotoXY 0E06  
          __end_of_lcd_wrData 11B4              __size_of___awmod 00B0                  ??_init_serie 0001  
      __size_of_lcd_initCGRam 005E               lcd_putMessage@j 000E              __size_of_deplace 00C0  
     __end_of_lcd_lireDonnees 1296                _nouveauxAliens 0616                      _matCGRAM 0060  
     __end_of_lcd_curseurHome 1280                      __ptext10 0ECC                      __ptext11 1278  
                    __ptext20 126A                      __ptext12 0FDA                      __ptext21 10CC  
                    __ptext13 125C                      __ptext30 1290                      __ptext22 0B78  
                    __ptext14 122A                      __ptext23 1080                      __ptext15 0948  
                    __ptext24 1186                      __ptext16 0A08                      __ptext25 0DA0  
                    __ptext17 1280                      __ptext26 0E6A                      __ptext18 11DC  
                    __ptext27 1288                      __ptext19 0F2A                      __ptext28 1248  
                    __ptext29 114E               affichePerdu@pts 000F         nouveauxAliens@counter 002E  
                    _m_aliens 00A0                      _lcd_busy 114E                      _lcd_init 11B4  
                    _high_isr 0008                    strcpy@from 0009         nouveauxAliens@verifie 0016  
               __size_of_main 00DC                 __size_of_rand 0052            __end_of_init_serie 1248  
                    deplace@x 0006                   ??_getAnalog 0001         __end_of_afficheAliens 1114  
                    int$flags 0057                      main@posX 003D                   ??_lcd_wrCom 0003  
      __end_of_nouveauxAliens 086C                afficheAliens@i 0011                 _lcd_ecritChar 1080  
                  _INTCONbits 000FF2                      intlevel2 0000                 _lcd_initCGRam 0ECC  
        nouveauxAliens@random 0037                _lcd_putMessage 0B78          __end_of_affichePerdu 0F84  
              ?_lcd_ecritChar 0001               ?_nouveauxAliens 0001              ?_lcd_lireDonnees 0001  
                    strcpy@cp 000B                      strcpy@to 0007              ?_lcd_curseurHome 0001  
              ?_lcd_initCGRam 0001             __CFG_FOSC$INTIO67 000000        __end_of_lcd_putMessage 0C14  
